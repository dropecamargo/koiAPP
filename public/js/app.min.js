/**
* Class ActividadModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ActividadModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('actividades.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'actividad_codigo': '',	
        	'actividad_nombre': '',	
        	'actividad_tarifa': '0',	
        	'actividad_categoria': ''	
        }
    });

})(this, this.document);

/**
* Class AjusteModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AjusteModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('ajustes.index') );
        },
        idAttribute: 'id',
        defaults: {
            'ajuste1_fecha': moment().format('YYYY-MM-DD'),   
        	'ajuste1_numero': '',	
        	'ajuste1_documentos': '',	
            'ajuste1_sucursal': '',
            'ajuste1_tipoajuste': '',
            'ajuste1_observaciones': '',
        }
    });

})(this, this.document);

/**
* Class AjusteDetalleModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AjusteDetalleModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('ajustes.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {	
            'ajuste2_ajuste1':'',
            'ajuste2_producto':'',
            'ajuste2_cantidad_entrada':'',
            'ajuste2_cantidad_salida':'',
            'ajuste2_costo':'',
            'ajuste2_costo_promedio':'',
            'lote_nombre':''
        }
    });

})(this, this.document);

/**
* Class Ajustec1Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.Ajustec1Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('ajustesc.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'ajustec1_sucursal': '',
        	'ajustec1_numero': '',	
        	'ajustec1_tercero': '',	
        	'ajustec1_conceptoajustec': '',	
        	'ajustec1_observaciones': '',
            'tercero_nit': '',   
        	'tercero_nombre': ''
        }
    });
})(this, this.document);
/**
* Class Ajustec2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.Ajustec2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('ajustesc.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
            'ajustec2_tercero': '',
            'ajustec2_documentos_doc': '',
            'ajustec2_naturaleza': '',
            'factura1_numero': '',
            'factura3_cuota': '',
            'factura3_valor': 0,
            'ajustec2_valor': 0,
        }
    });
})(this, this.document);
/**
* Class AnticipoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AnticipoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('anticipos.index') );
        },
        idAttribute: 'id',
        defaults: {
			'anticipo1_fecha':moment().format('YYYY-MM-DD'),
			'anticipo1_sucursal':'',
			'anticipo1_numero':'',
			'anticipo1_tercero':'',
			'anticipo1_cuentas':'',
			'tercero_nit':'',
			'tercero_nombre':'',
			'anticipo1_vendedor':'',
			'anticipo1_observaciones':'',
        }
    });

})(this, this.document);

/**
* Class Anticipo2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.Anticipo2Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('anticipos.mediopago.index') );
        },
        idAttribute: 'id',
        defaults: {
            'anticipo2_mediopago':'',
            'anticipo2_numero_medio':'',
            'anticipo2_vence_medio':'',
            'anticipo2_banco_medio':'',
            'anticipo2_valor': 0,
        }
    });
})(this, this.document);
/**
* Class Anticipo3Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.Anticipo3Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('anticipos.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'anticipo3_anticipo1': '',	
        	'anticipo3_conceptosrc': '',	
        	'anticipo3_naturaleza': '',	
            'anticipo3_valor': ''
        }
    });
})(this, this.document);
/**
* Class AsientoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AsientoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('asientos.index') );
        },
        idAttribute: 'id',
        defaults: {
			'asiento1_ano': moment().format('YYYY'),
			'asiento1_mes': moment().format('M'),
			'asiento1_dia': moment().format('D'),
			'asiento1_folder': '',
			'asiento1_documento': '',
			'documento_tipo_consecutivo': '',
			'asiento1_numero': '',
			'asiento1_beneficiario': '',
			'tercero_nit': '',
			'tercero_nombre': '',
			'asiento1_sucursal': '',
			'asiento1_preguardado': '',
			'asiento1_detalle': '',
			'asiento1_fecha_elaboro': ''
		}
    });

})(this, this.document);

/**
* Class Asiento2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.Asiento2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('asientos.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'asiento2_asiento': '',
            'asiento2_cuenta': '',
        	'plancuentas_cuenta': '',
        	'plancuentas_nombre': '',
            'asiento2_beneficiario': '',
            'tercero_nit': '',
        	'tercero_nombre': '',
        	'asiento2_debito': 0,
        	'asiento2_credito': 0,
        	'asiento2_centro': '',
        	'centrocosto_nombre': '',
        	'asiento2_base': 0,
            'asiento2_detalle': '',
            'asiento2_orden': '',
        	'ordenp_codigo': ''
        }
    });

})(this, this.document);

/**
* Class AutorizacionCaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AutorizacionCaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('autorizacionesca.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tercero_nit': '',
        	'tercero_nombre': '',
        	'autorizaca_vencimiento': moment().format('YYYY-MM-DD'),
        	'autorizaca_plazo': 1,
        	'autorizaca_cupo': 1,
        	'autorizaca_observaciones': '',
        }
    });

})(this, this.document);

/**
* Class BancoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.BancoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('bancos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'banco_nombre': '',
        	'banco_activo': 1
        }
    });

})(this, this.document);

/**
* Class BitacoraModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.BitacoraModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('bitacoras.index') );
        },
        idAttribute: 'id',
        defaults: {
        }
    });

})(this, this.document);

/**
* Class CarteraTerceroModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.CarteraTerceroModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('carteraterceros.index') );
        },
        idAttribute: 'id',
        defaults: {
            'factura3_factura1': '',
            'factura3_cuota': '',
            'factura3_valor': '',
            'factura3_saldo': '',
            'factura3_vencimiento': '',
        }
    });

})(this, this.document);
/**
* Class CategoriaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.CategoriaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('categorias.index') );
        },
        idAttribute: 'id',
        defaults: {
            'categoria_nombre': '',
            'categoria_activo': 1
        }
    });

})(this, this.document);

/**
* Class CausaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.CausaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('causas.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'causal_nombre': '',
        	'causal_activo': 1
        }
    });

})(this, this.document);

/**
* Class CentroCostoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.CentroCostoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('centroscosto.index') );
        },
        idAttribute: 'id',
        defaults: {
            'centrocosto_codigo': '',   
        	'centrocosto_centro': '',	
            'centrocosto_nombre': '',   
            'centrocosto_descripcion1': '',   
            'centrocosto_descripcion2': '',
            'centrocosto_estructura': 'N',
            'centrocosto_tipo': 'N',
        	'centrocosto_activo': 1
        }
    });

})(this, this.document);

/**
* Class ChDevueltoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ChDevueltoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('chequesdevueltos.index') );
        },
        idAttribute: 'id',
        defaults: {
			'tercero_nit':'',
			'tercero_nombre':'',
        }
    });

})(this, this.document);

/**
* Class ChequeModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ChequeModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('cheques.index') );
        },
        idAttribute: 'id',
        defaults: {
			'chposfechado1_fecha':moment().format('YYYY-MM-DD'),
			'chposfechado1_ch_fecha':moment().format('YYYY-MM-DD'),
			'chposfechado1_sucursal':'',
			'chposfechado1_numero':'',
			'chposfechado1_tercero':'',
			'chposfechado1_valor': 0,
			'chposfechado1_observaciones':'',
			'tercero_nit':'',
			'tercero_nombre':'',
        }
    });

})(this, this.document);

/**
* Class ChposFechado2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.ChposFechado2Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('cheques.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'chposfechado2_chposfechado1': '',	
        	'chposfechado2_conceptosrc': '',	
        	'chposfechado2_documentos_doc': '',	
        	'chposfechado2_id_doc': '',	
            'chposfechado2_valor': '',
            'factura1_numero': '',
            'factura3_cuota': '',
            'factura3_valor': ''
        }
    });
})(this, this.document);
/**
* Class ConceptoAjustecModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ConceptoAjustecModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('conceptosajustec.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'conceptoajustec_nombre': '',
            'conceptoajustec_plancuentas': '',
        	'plancuentas_cuenta': '',
            'plancuentas_nombre': '',
        	'conceptoajustec_sumas_iguales': 1,
        	'conceptoajustec_activo': 1
        }
    });

})(this, this.document);

/**
* Class ConceptoCobModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ConceptoCobModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('conceptocobros.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'conceptocob_nombre': '',
        	'conceptocob_activo': 1
        }
    });

})(this, this.document);

/**
* Class ConceptoCobModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ConceptoComModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('conceptoscomercial.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'conceptocom_nombre': '',
        	'conceptocom_activo': 1
        }
    });

})(this, this.document);

/**
* Class ConceptoNotaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ConceptoNotaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('conceptonotas.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'conceptonota_nombre': '',
        	'conceptonota_plancuentas': '',
            'plancuentas_cuenta': '',
            'plancuentas_nombre': '',
        	'conceptonota_activo': 1
        }
    });

})(this, this.document);

/**
* Class ConceptosrcModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ConceptosrcModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('conceptosrc.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'conceptosrc_nombre': '',
        	'conceptosrc_plancuentas': '',
            'conceptosrc_documentos': '',
            'plancuentas_cuenta': '',
            'plancuentas_nombre': '',
        	'conceptosrc_activo': 1
        }
    });

})(this, this.document);

/**
* Class ConceptoTecModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ConceptoTecModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('conceptostecnico.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'conceptotec_nombre': '',
        	'conceptotec_activo': 1
        }
    });

})(this, this.document);

/**
* Class ContactoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ContactoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('terceros.contactos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tcontacto_nombres': '',
        	'tcontacto_apellidos': '',
        	'tcontacto_telefono': '',
        	'tcontacto_celular': '',
            'tcontacto_municipio': '',
            'tcontacto_direccion': '',
        	'tcontacto_direccion_nomenclatura': '',
        	'tcontacto_email': '',
        	'tcontacto_cargo': ''
        }
    });

})(this, this.document);
/**
* Class CuentaBancoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.CuentaBancoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('cuentabancos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'cuentabanco_nombre': '',
        	'cuentabanco_banco': '',
        	'cuentabanco_numero': '',
            'cuentabanco_plancuentas': '',
        	'plancuentas_cuenta': '',
            'plancuentas_nombre': '',
        	'cuentabanco_activa': 1
        }
    });

})(this, this.document);

/**
* Class DanoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DanoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('danos.index') );
        },
        idAttribute: 'id',
        defaults: {
            'dano_nombre': '',
            'dano_activo': true
        }
    });

})(this, this.document);

/**
* Class DevolucionModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DevolucionModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('devoluciones.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'devolucion1_sucursal' : '',
        	'devolucion1_numero' : '',
        	'devolucion1_fecha': moment().format('YYYY-MM-DD')
        }
    });
})(this, this.document);
/**
* Class Devolucion2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.Devolucion2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('devoluciones.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
            'devolucion2_cantidad' : 0,
            'devolucion2_precio' : '',
            'devolucion2_costo' : '',
        	'producto_serie' : '',
            'producto_nombre' : '',
            'devolucion2_total' : 0,
        	'factura2_cantidad' : 0,
        }
    });
})(this, this.document);
/**
* Class DocumentoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DocumentoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('documentos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'documento_codigo': '',
        	'documento_nombre': '',
        	'documento_folder': '',
            'documento_tipo_consecutivo': 'A'
        }
    });

})(this, this.document);

/**
* Class DocumentosModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
* modelo de documentos admin
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DocumentosModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('documento.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'documentos_codigo': '',
        	'documentos_nombre': ''
        }
    });

})(this, this.document);

/**
* Class EmpresaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.EmpresaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('empresa.index') );
        },
        idAttribute: 'id',
        defaults: {
            'tercero_nit': '',
            'tercero_digito': '',
            'tercero_regimen' : '',
            'tercero_tipo' : '',
			'tercero_persona' : '',
            'tercero_razonsocial' : '',
            'tercero_nombre1' : '',
            'tercero_nombre2' : '',
            'tercero_apellido1' : '',
            'tercero_apellido2' : '',
            'tercero_direccion' : '',
            'tercero_dir_nomenclatura' : '',
            'tercero_municipio' : '',
            'tercero_email' : '',
            'tercero_telefono1' : '',
            'tercero_telefono2' : '',
            'tercero_fax' : '',
            'tercero_celular' : '',
            'tercero_actividad' : '',
            'tercero_cc_representante' : '',
            'tercero_representante' : '',
            'tercero_responsable_iva': false,
            'tercero_autoretenedor_cree': false,
            'tercero_gran_contribuyente': false,
            'tercero_autoretenedor_renta': false,
            'tercero_autoretenedor_ica': false,
            'actividad_tarifa' : '',
            'empresa_niif' : '',
            'empresa_iva' : ''
        }
    });

})(this, this.document);

/**
* Class FacturaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.FacturaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('facturas.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'factura1_sucursal' : '',
        	'factura1_puntoventa' : '',
        	'factura1_numero' : '',
        	'factura1_fecha': moment().format('YYYY-MM-DD'),
        	'tercero_nit':'',
        	'tercero_nombre': '',
        	'factura1_tercerocontacto': '',
        	'contacto_nombre':'',
        	'factura1_formapago':'',
        	'factura1_primerpago': moment().format('YYYY-MM-DD'),
        	'factura1_vendedor':'',
        	'factura1_observaciones': ''
        }
    });
})(this, this.document);
/**
* Class Factura2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.Factura2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('facturas.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
            'factura2_cantidad' : 0,
            'factura2_precio_venta' : 0,
            'factura2_descuento_valor': 0,
            'factura2_descuento_porcentaje': 0,
            'factura2_iva_porcentaje': 0,
            'factura2_costo': 0,
            'factura2_subtotal': 0,
            'factura2_iva_valor':0,
            'producto_id': '',
        }
    });
})(this, this.document);
/**
* Class Factura3Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.Factura3Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('recibos.factura.index') );
        },
        idAttribute: 'id',
        defaults: {
            'factura3_factura1': '',
            'factura3_cuota': '',
            'factura3_valor': '',
            'factura3_saldo': '',
            'factura3_vencimiento': '',
        }
    });

})(this, this.document);
/**
* Class FolderModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

app || (app = {});

(function (window, document, undefined){
    
    app.FolderModel = Backbone.Model.extend({
        
        urlRoot: function () {
            return window.Misc.urlFull (Route.route('folders.index') ); 
        },
        idAttribute: 'id', 
        defaults: {
            'folder_codigo': '',   
            'folder_nombre': '' 
        }
    });
    
}) (this, this.document);
/**
* Class GestionCobroModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.GestionCobroModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('gestioncobros.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tercero_nit':'',
        	'tercero_nombre':'',
        	'gestioncobro_proxima': moment().format('YYYY-MM-DD'),
            'gestioncobro_fh': moment().format('YYYY-MM-DD'),
        	'gestioncobro_hproxima': moment().format('HH:mm'),
        }
    });

})(this, this.document);

/**
* Class GestionComercialModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.GestionComercialModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('gestionescomercial.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tercero_nit':'',
        	'tercero_nombre':'',
            'gestioncomercial_inicio': moment().format('YYYY-MM-DD'),
            'gestioncomercial_finalizo': moment().format('YYYY-MM-DD')
        }
    });

})(this, this.document);

/**
* Class GestionTecnicoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.GestionTecnicoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('gestionestecnico.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tercero_nit':'',
        	'tercero_nombre':'',
            'gestiontecnico_inicio': moment().format('YYYY-MM-DD'),
            'gestiontecnico_finalizo': moment().format('YYYY-MM-DD')
        }
    });

})(this, this.document);

/**
* Class MarcaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ImpuestoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('impuestos.index') );
        },
        idAttribute: 'id',
        defaults: {
            'impuesto_nombre': '',
            'impuesto_porcentaje': '',
            'impuesto_activo': 1
        }
    });

})(this, this.document);

/**
* Class ItemRolloModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ItemRolloModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('productos.rollos.index') );
        },
        idAttribute: 'id',
        defaults: {
            'rollo_metros': 0,
        	'rollo_cantidad': 0, //cantidad input form modal 
            'rollo_saldo': 0,
            'rollo_lote': '',
        	'rollo_fecha_lote': ''
        }
    });

})(this, this.document);

/**
* Class LineaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.LineaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('lineas.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'linea_nombre' : '',
        	'linea_activo' : 1,
        }
    });

})(this, this.document);

/**
* Class ItemLoteModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.LoteModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('productos.lotes.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'lote_numero': '',
        	'lote_cantidad': 0,
        	'lote_saldo': '',
        	'lote_fecha': moment().format('YYYY-MM-DD'),
        	'lote_vencimiento': moment().format('YYYY-MM-DD'),
        }
    });

})(this, this.document);

/**
* Class MarcaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.MarcaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('marcas.index') );
        },
        idAttribute: 'id',
        defaults: {
            'marca_nombre': '',
            'marca_activo': 1
        }
    });

})(this, this.document);

/**
* Class MedioPagoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.MedioPagoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('mediopagos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'mediopago_nombre': '',
            'mediopago_activo': 1,
            'mediopago_ch': 0,
        	'mediopago_ef': 1,
        }
    });

})(this, this.document);

/**
* Class ModeloModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ModeloModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('modelos.index') );
        },
       	idAttribute: 'id',
        defaults: {
            'modelo_nombre': '',
            'modelo_activo': 1
        }
    });

})(this, this.document);
/**
* Class ModuloModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ModuloModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('roles.permisos.index') );
        },
        idAttribute: 'id',
        defaults: {
            'name': '',
            'display_name': '',
            'nivel1': '',
            'nivel2': '',
            'nivel3': '',
            'nivel4': ''
        }
    });

})(this, this.document);

/**
* Class NotaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.NotaModel = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('notas.index') );
        },
        idAttribute: 'id',
        defaults: {
            'nota1_sucursal': '',   
        	'nota1_numero': '',	
        	'nota1_tercero': '',	
            'nota1_fecha': moment().format('YYYY-MM-DD'),   
        	'nota1_observaciones': '',
        	'nota1_conceptonota': '',	
            'tercero_nit': '',   
        	'tercero_nombre': ''
        }
    });
})(this, this.document);
/**
* Class Nota2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.Nota2Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('notas.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
            'factura1_numero': '',  
            'factura3_cuota': '',  
            'factura3_valor': '',  
            'nota2_nota1': '',
        	'nota2_documentos_doc': '',	
        	'nota2_id_doc': '',
        	'nota2_valor': '',
            'nota2_numero':'',
        }
    });
})(this, this.document);
/**
* Class OrdenModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

app || (app = {});

(function (window, document, undefined){

    app.OrdenModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull (Route.route('ordenes.index') );
        },
        idAttribute: 'id',
        defaults: {

            'orden_fecha': moment().format('YYYY-MM-DD'),
            'orden_tercero': '',
            'orden_tipoorden':'',
            'orden_solicitante':'',
            'orden_serie':'',
            'tercero_nombre':'',
            'tercero_nit':'',
            'tecnico_nombre':'',
            'tecnico_nit':'',
            'producto_id': '',
            'producto_serie':'',
            'producto_nombre':'',
            'orden_llamo':'',
            'orden_dano':'',
            'orden_prioridad':'',
            'orden_problema': '',
            'orden_sucursal': '',
            'orden_numero': '',
            'orden_abierta': true,
            'orden_fecha_servicio':moment().format('YYYY-MM-DD'),
            'orden_hora_servicio':moment().format('HH:mm'),       
            'orden_contacto': '',
            'orden_sitio': '',
            'tcontacto_nombre': '',
            'tcontacto_telefono': '',
            'tcontacto_email': '',
        }
    });

}) (this, this.document);
/**
* Class PedidoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PedidoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('pedidos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'pedido1_numero': '',	
        	'pedido1_tercero': '',	
        	'pedido1_documentos': '' ,	
        	'pedido1_sucursal': '',	
        	'pedido1_anticipo': '',	
        	'pedido1_observaciones': '',	
        	'pedido1_anulado': 0,	
        	'pedido1_cerrado': 0,	
        	'pedido1_fecha': moment().format('YYYY-MM-DD'),	
        	'pedido1_fecha_estimada': moment().format('YYYY-MM-DD'),	
        	'pedido1_fecha_anticipo': moment().format('YYYY-MM-DD'),
            'tercero_nombre':'',
            'tercero_nit':''
        }
    });

})(this, this.document);

/**
* Class PedidoDetalleModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PedidoDetalleModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('pedidos.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'pedido2_pedido1': '',	
        	'pedido2_serie': '',	
        	'pedido2_cantidad': '' ,	
        	'pedido2_saldo': '',	
        	'pedido2_precio': ''	
        	
        }
    });

})(this, this.document);

/**
* Class PedidoscModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PedidoscModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('pedidosc.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tercero_nombre': '',
        	'tercero_nit': '',
        	'contacto_nombre': '',
        	'pedidoc1_sucursal': '',
        	'pedidoc1_numero': '',
        	'pedidoc1_formapago': '',
        	'pedidoc1_contacto': '',
            'pedidoc1_tercero': '',
        	'pedidoc1_vendedor': '',
            'pedidoc1_primerpago': moment().format('YYYY-MM-DD'),
            'pedidoc1_fecha': moment().format('YYYY-MM-DD'),
        	'pedidoc1_observaciones': '',
        }
    });

})(this, this.document);

/**
* Class PedidoscDetalleModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PedidoscDetalleModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('pedidosc.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {	
            'pedidoc2_cantidad' : 0,
            'pedidoc2_precio_venta' : 0,
            'pedidoc2_descuento_valor': 0,
            'pedidoc2_descuento_porcentaje': 0,
            'pedidoc2_iva_porcentaje': 0,
            'pedidoc2_costo': 0,
            'pedidoc2_subtotal': 0,
            'pedidoc2_iva_valor':0
        }
    });

})(this, this.document);

/**
* Class PlanCuentaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PlanCuentaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('plancuentas.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'plancuentas_cuenta': '',	
        	'plancuentas_nivel': '',	
        	'plancuentas_nombre': '',	
        	'plancuentas_naturaleza': 'D',	
        	'plancuentas_centro': '',	
        	'plancuentas_tercero': 0,	
        	'plancuentas_tipo': 'N',	
        	'plancuentas_tasa': 0
        }
    });

})(this, this.document);

/**
* Class PrioridadModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PrioridadModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('prioridades.index') );
        },
        idAttribute: 'id',
        defaults: {
            'prioridad_nombre': '',
            'prioridad_activo': true
        }
    });

})(this, this.document);

/**
* Class ProdbodeModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ProdbodeModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('productos.prodbode.index') );
        },
        idAttribute: 'id',
        defaults: {
            'prodbode_serie': '',
            'prodbode_sucursal': '',
            'prodbode_cantidad': '',
            'prodbode_cantidadA': '',
            'prodbode_cantidadB': '',
            'prodbode_cantidadC': '',
            'prodbode_reservado': '',
            'prodbode_ubicacion1': '',
            'prodbode_ubicacion2': '',
            'prodbode_ubicacion3': '',
            'prodbode_maximo': '',
            'prodbode_minimo': ''
        }
    });
})(this, this.document);
/**
* Class ProdBodeloteModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ProdBodeloteModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('productos.lotes.index') );
        },
        idAttribute: 'id',
        defaults: {

        }
    });

})(this, this.document);

/**
* Class ProductoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ProductoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('productos.index') );
        },
        idAttribute: 'id',
        defaults: {
            'producto_nombre': '',
            'producto_referencia': '',
            'producto_ref_proveedor': '',
            'producto_categoria': '',
            'producto_barras': '',
            'producto_serie': '',
            'producto_linea': '',
            'producto_marca': '',
            'producto_modelo': '',
            'producto_impuesto': '',
            'producto_unidadmedida': '',
            'producto_peso': '',
            'producto_largo': '',
            'producto_alto': '',
            'producto_ancho': '',
            'producto_precio1': 0,
            'producto_precio2': 0,
            'producto_precio3': 0,
            'producto_costo': 0,
            'producto_vidautil': 0,
            'producto_vence': 0,
            'producto_maneja_serie': 0,
            'producto_metrado': 0,
            'producto_unidadnegocio':'',
            'producto_subcategoria':'', 
            'producto_unidad': 1
        }
    });
})(this, this.document);
/**
* Class PuntoVentaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PuntoVentaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('puntosventa.index') );
        },
        idAttribute: 'id',
        defaults: {
            'puntoventa_nombre': '',
            'puntoventa_numero': 0,
            'puntoventa_prefijo': '',
            'puntoventa_resolucion_dian': '',
            'puntoventa_activo': 1
        }
    });

})(this, this.document);

/**
* Class ReciboModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.ReciboModel = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('recibos.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'recibo1_sucursal': '',	
        	'recibo1_numero': '',	
        	'recibo1_tercero': '',	
            'recibo1_fecha': moment().format('YYYY-MM-DD'),   
            'recibo1_fecha_pago': moment().format('YYYY-MM-DD'),   
        	'recibo1_valor': '',	
        	'recibo1_cuentas': '',	
            'recibo1_documentos': '',   
            'tercero_nit': '',   
        	'tercero_nombre': '',	
        	'recibo1_observaciones': ''
        }
    });
})(this, this.document);
/**
* Class Recibo2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.Recibo2Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('recibos.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
            'recibo2_recibo1': '',  
        	'recibo2_numero': '',	
        	'recibo2_conceptosrc': '',	
        	'recibo2_documentos_doc': '',	
        	'recibo2_id_doc': '',	
        	'recibo2_naturaleza': '',	
            'recibo2_valor': '',
            'factura1_numero': '',
            'factura3_cuota': '',
            'factura3_valor': ''
        }
    });
})(this, this.document);
/**
* Class Recibo3Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {
    app.Recibo3Model = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('recibos.mediopago.index') );
        },
        idAttribute: 'id',
        defaults: {
            'recibo3_mediopago':'',
            'recibo3_numero_medio':'',
            'recibo3_vence_medio':'',
            'recibo3_banco_medio':'',
            'recibo3_valor':'',
        }
    });
})(this, this.document);
/**
* Class MarcaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.RegionalModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('regionales.index') );
        },
        idAttribute: 'id',
        defaults: {
            'regional_nombre': '',
            'regional_activo': 1
        }
    });

})(this, this.document);

/**
* Class RemRepuModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

app || (app = {});

(function (window, document, undefined){

    app.RemRepuModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull (Route.route('ordenes.remrepuestos.index') );
        },
        idAttribute: 'id',
        defaults: {
        }
    });

}) (this, this.document);
/**
* Class RemRepu2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

app || (app = {});

(function (window, document, undefined){

    app.RemRepu2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull (Route.route('ordenes.detalle.remrepuestos.index') );
        },
        idAttribute: 'id',
        defaults: {
            'remrepu2_cantidad': '',
 			'remrepu2_nombre': '',
 			'remrepu2_serie': '',
 			'remrepu1_numero': '',
 			'sucursal_nombre': '',
        }
    });

}) (this, this.document);
/**
* Class RolModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.RolModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('roles.index') );
        },
        idAttribute: 'id',
        defaults: {
            'name': '',
            'display_name': '',
            'description': '',
            'permissions': []
        }
    });

})(this, this.document);

/**
* Class ServicioModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ServicioModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('servicios.index') );
        },
        idAttribute: 'id',
        defaults: {
            'servicio_nombre': '',
            'servicio_activo': 1,
        }
    });

})(this, this.document);

/**
* Class SitioModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.SitioModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('sitios.index') );
        },
        idAttribute: 'id',
        defaults: {
            'sitio_nombre': '',
            'sitio_activo': 1,
        }
    });

})(this, this.document);

/**
* Class SolicitanteModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.SolicitanteModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('solicitantes.index') );
        },
        idAttribute: 'id',
        defaults: {
            'solicitante_nombre': '',
            'solicitante_activo': true
        }
    });

})(this, this.document);

/**
* Class SubCategoriaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.SubCategoriaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('subcategorias.index') );
        },
        idAttribute: 'id',
        defaults: {
            'subcategoria_nombre': '',
            'subcategoria_activo': 1,
            'subcategoria_margen_nivel1' : '',
            'subcategoria_margen_nivel2' : '',
            'subcategoria_margen_nivel3' : ''
        }
    });

})(this, this.document);

/**
* Class SucursalModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.SucursalModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('sucursales.index') );
        },
        idAttribute: 'id',
        defaults: {
            'sucursal_nombre': '',
            'sucursal_direccion': '',
            'sucursal_direccion_nomenclatura': '',
            'sucursal_regional': '',
            'sucursal_telefono': '',
            'sucursal_activo': 1 ,
        	'sucursal_ubicaciones': 0,
        }
    });

})(this, this.document);

/**
* Class TerceroModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TerceroModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('terceros.index') );
        },
        idAttribute: 'id',
        defaults: {
            'tercero_nit': '',
            'tercero_digito': '',
            'tercero_regimen' : '',
            'tercero_tipo' : '',
            'tercero_persona' : '',
            'tercero_razonsocial' : '',
            'tercero_nombre1' : '',
            'tercero_nombre2' : '',
            'tercero_apellido1' : '',
            'tercero_apellido2' : '',
            'tercero_direccion' : '',
            'tercero_dir_nomenclatura' : '',
            'tercero_municipio' : '',
            'tercero_pais' : '',
            'tercero_familia' : '',
            'tercero_email' : '',
            'tercero_telefono1' : '',
            'tercero_telefono2' : '',
            'tercero_fax' : '',
            'tercero_celular' : '',
            'tercero_actividad' : '',
            'tercero_cc_representante' : '',
            'tercero_representante' : '',
            'tercero_activo': false,
            'tercero_responsable_iva': false,
            'tercero_autoretenedor_cree': false,
            'tercero_gran_contribuyente': false,
            'tercero_autoretenedor_renta': false,
            'tercero_autoretenedor_ica': false,
            'tercero_socio': false,
            'tercero_cliente': false,
            'tercero_acreedor': false,
            'tercero_interno': false,
            'tercero_mandatario': false,
            'tercero_empleado': false,
            'tercero_proveedor': false,
            'tercero_extranjero': false,
            'tercero_afiliado': false,
            'tercero_vendedor': false,
            'tercero_otro': false,
            'tercero_cual': '',
            'tercero_sucursal': '',
            'username': '',
            'actividad_tarifa' : ''
        }
    });

})(this, this.document);

/**
* Class TipoActividadModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TipoActividadModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('tiposactividad.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'tipoactividad_nombre': '',
        	'tipoactividad_activo': 0,
        	'tipoactividad_comercial': 0,
        	'tipoactividad_tecnico': 0,
        	'tipoactividad_cartera': 0
        }
    });

})(this, this.document);

/**
* Class TipoAjusteModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TipoAjusteModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('tiposajuste.index') );
        },
        idAttribute: 'id',
        defaults: {
            'tipoajuste_nombre':'',
            'tipoajuste_sigla':'',
            'tipoajuste_tipo':'',
        	'tipoajuste_activo': 1
        }
    });

})(this, this.document);

/**
* Class TipoOrdenModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TipoOrdenModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('tiposorden.index') );
        },
        idAttribute: 'id',
        defaults: {
            'tipoorden_nombre': '',
            'tipoorden_activo': true
        }
    });

})(this, this.document);

/**
* Class TipoTrasladoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TipoTrasladoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('tipostraslados.index') );
        },
        idAttribute: 'id',
        defaults: {
            'tipotraslado_nombre':'',
            'tipotraslado_sigla':'',
        	'tipotraslado_activo': 1
        }
    });

})(this, this.document);

/**
* Class TrasladoModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TrasladoModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('traslados.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'traslado1_sucursal': '',
        	'traslado1_numero': '',
        	'traslado1_destino': '',
            'traslado1_tipotraslado':'',
        	'traslado1_fecha': moment().format('YYYY-MM-DD'),
        	'traslado1_observaciones': ''
		}
    });

})(this, this.document);
/**
* Class Traslado2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.Traslado2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('traslados.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'traslado2_cantidad': '',
        }
    });

})(this, this.document);
/**
* Class TrasladoUbicacionModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TrasladoUbicacionModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('trasladosubicaciones.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'trasladou1_sucursal': '',
        	'trasladou1_numero': '',
            'trasladou1_destino': '',
        	'trasladou1_origen': '',
            'trasladou1_tipotraslado':'',
        	'trasladou1_fecha': moment().format('YYYY-MM-DD'),
        	'trasladou1_observaciones': ''
		}
    });

})(this, this.document);
/**
* Class TrasladoUbicacion2Model extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TrasladoUbicacion2Model = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('trasladosubicaciones.detalle.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'trasladou2_cantidad': '',
        }
    });

})(this, this.document);
/**
* Class UbicacionModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.UbicacionModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('ubicaciones.index') );
        },
        idAttribute: 'id',
        defaults: {
            'ubicacion_nombre': '',
            'ubicacion_activo': 1,
            'ubicacion_sucursal': '',
        	'ubicacion_select': '',
        }
    });

})(this, this.document);

/**
* Class UnidadModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.UnidadModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('unidades.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'unidadmedida_sigla': '',
            'unidadmedida_nombre': '',
        	'unidad_medida_activo': 1
        }
    });

})(this, this.document);

/**
* Class UnidadNegocioModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.UnidadNegocioModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull( Route.route('unidadesnegocio.index') );
        },
        idAttribute: 'id',
        defaults: {
            'unidadnegocio_nombre': '',
        	'unidadnegocio_activo': 1
        }
    });

})(this, this.document);

/**
* Class UsuarioRolModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.UsuarioRolModel = Backbone.Model.extend({
        urlRoot: function () {
            return window.Misc.urlFull( Route.route('terceros.roles.index') );
        },
        idAttribute: 'id',
        defaults: {
        	'user_id': '',
        	'role_id': ''
        }
    });

})(this, this.document);

/**
* Class VisitaModel extend of Backbone Model
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

app || (app = {});

(function (window, document, undefined){

    app.VisitaModel = Backbone.Model.extend({

        urlRoot: function () {
            return window.Misc.urlFull (Route.route('ordenes.visitas.index') );
        },
        idAttribute: 'id',

        defaults: {
            'visita_orden': '',
            'visita_tecnico': '',
            'visita_numero': '',
            'visita_fecha_llegada': moment().format('YYYY-MM-DD'),
            'visita_fecha_inicio': moment().format('YYYY-MM-DD'),
            'visita_fecha_fin': moment().format('YYYY-MM-DD'),
            'visita_fh_finaliza': '',
            'visita_tiempo_transporte': '',
            'visita_viaticos': '',
            'visita_observaciones': '',
            'tercero_nombre': ''
        }
    });

}) (this, this.document);
/**
* Class AjustecDetalleList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AjustecDetalleList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('ajustesc.detalle.index') );
        },
        model: app.Ajustec2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        validar: function(data){
            var error = { success: false };
            var model = _.find(this.models, function(item){
                if (item.has('factura3_id') ) {
                    return item.get('factura3_id') == data.factura3_id;

                }else if ( item.has('anticipo_id') ){
                    return item.get('anticipo_id') == data.anticipo_id;
                }else if ( item.has('chdevuelto_id') ){
                    return item.get('chdevuelto_id') == data.chdevuelto_id;
                }
            });

            if(data.deleted){
                if ( model instanceof Backbone.Model ) {
                    model.view.remove();
                    this.remove(model);
                }
            }

            if(model instanceof Backbone.Model){
                model.set('factura3_valor', data.factura3_valor);
                model.set('ajustec2_valor', data.ajustec2_valor);
                model.set('ajustec2_naturaleza', data.ajustec2_naturaleza);
                model.set('valor', data.valor);
                return error;
            }

            error.success = true;
            return error;
        },

        debito: function() {
            var debitos = _.filter(this.models, function(item){
                return item.get('ajustec2_naturaleza') == 'D';
            });
            return _.reduce(debitos, function(sum, model) {
                return sum + parseFloat( model.get('factura3_valor') ? model.get('factura3_valor') : model.get('ajustec2_valor'))
            }, 0);
        },

        credito: function() {
            var creditos = _.filter(this.models, function(item){
                return item.get('ajustec2_naturaleza') == 'C';
            });

            return _.reduce(creditos, function(sum, model) {
                return sum + parseFloat( model.get('factura3_valor') ? model.get('factura3_valor') : model.get('ajustec2_valor'))
            }, 0);
        },

        totalize: function() {
            var debito = this.debito();
            var credito = this.credito();
            return { 'debito': debito, 'credito': credito }
        },
   });

})(this, this.document);
/**
* Class AjustesDetalleCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AjustesDetalleCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('ajustes.detalle.index') );
        },
        model: app.AjusteDetalleModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);
/**
* Class AnticiposList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AnticiposList = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('anticipos.index') );
        },
        model: app.AnticipoModel,

        /**
        * Constructor Method
        */
        initialize : function(){
            
        },

        agregar: function(id, data, valor, naturaleza){
            var model =  _.find(this.models, function(item){
                return item.get('id') == id;
            });
            // Preparo objeto
            if (data.call == 'recibo') {
                modelo = {
                    'recibo2_conceptosrc': data.recibo2_conceptosrc,
                    'recibo2_naturaleza': (naturaleza == 'D') ? 'D' : 'C',
                    'anticipo_id': model.get('id'),
                    'recibo2_valor': ( _.isUndefined(valor) ) ? model.get('anticipo1_saldo') : valor,
                    'valor': ( _.isUndefined(valor) ) ? model.get('anticipo1_saldo') : valor,
                    'recibo2_numero': model.get('anticipo1_numero'),
                }; 
            }else if(data.call == 'ajustesc'){
                modelo = {
                    'ajustec2_valor': ( _.isUndefined(valor) ) ? model.get('anticipo1_saldo') : valor,
                    'valor': ( _.isUndefined(valor) ) ? model.get('anticipo1_saldo') : valor,
                    'ajustec2_documentos_doc': data.ajustec2_documentos_doc,
                    'anticipo_id': model.get('id'),
                    'ajustec2_tercero': data.tercero,
                    'ajustec2_naturaleza': (naturaleza == 'D') ? 'D' : 'C',
                };
            }else if( data.call == 'nota' ){
                modelo = {
                    'nota2_valor': ( _.isUndefined(valor) ) ? model.get('anticipo1_saldo') : valor,
                    'valor': ( _.isUndefined(valor) ) ? model.get('anticipo1_saldo') : valor,
                    'nota2_conceptonota': data.nota1_conceptonota,
                    'anticipo_id': model.get('id'),
                    'nota2_documentos_doc': data.nota2_documentos_doc,
                    'nota2_numero': model.get('anticipo1_numero'),

                };
            }
            return modelo;
        },
        eliminar: function(id, data){
            // Remove value
            var model = _.find(this.models, function(item) {
                return item.get('id') == id;
            });

            //setter recibo2Model || nota2Model || ajustec2Model
            var modelo = {
                'anticipo_id': model.get('id'),
                'deleted': true
            }

            return modelo;
        },
   });
})(this, this.document);
/**
* Class DetalleAnticipo2List of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleAnticipo2List = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('anticipos.mediopago.index') );
        },
        model: app.Anticipo2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
            
        },
        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('anticipo2_valor'));
            }, 0);
        },

        totalize: function() {
            var valor = this.valor();
            return { 'valor': valor }
        },
   });
})(this, this.document);
/**
* Class DetalleAnticipo3List of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleAnticipo3List = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('anticipos.detalle.index') );
        },
        model: app.Anticipo3Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },
        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('anticipo3_valor'));
            }, 0);
        },

        totalize: function() {
            var valor = this.valor();
            return { 'valor': valor }
        },
   });
})(this, this.document);
/**
* Class AsientoCuentasList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AsientoCuentasList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('asientos.detalle.index') );
        },
        model: app.Asiento2Model,

        /**
        * Constructor Method
        */
        initialize : function() {

        },

        debitos: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('asiento2_debito'))
            }, 0);
        },

        creditos: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('asiento2_credito'))
            }, 0);
        },

        totalize: function() {
            var debitos = this.debitos();
            var creditos = this.creditos();
            return { 'debitos': debitos, 'creditos': creditos, 'diferencia': Math.abs(creditos - debitos)}
        }
   });

})(this, this.document);

/**
* Class AsientoMovimientosList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.AsientoMovimientosList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('asientos.detalle.movimientos') );
        },
        model: app.AsientoMovModel,

        /**
        * Constructor Method
        */
        initialize : function() {

        }
   });

})(this, this.document);

/**
* Class BitacoraCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.BitacoraCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('bitacoras.index') );
        },
        model: app.BitacoraModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);
/**
* Class DetalleCarteraTercero of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleCarteraTercero = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('carteraterceros.index') );
        },
        model: app.CarteraTerceroModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        saldo: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('factura3_saldo'))
            }, 0);
        },
        valor: function(){
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('factura3_valor'))
            }, 0);
        },
        calculate: function(modelos){
            var saldo = _.reduce(modelos, function(sum, model) {
                return sum + parseFloat(model.get('factura3_saldo'))
            }, 0);

            var count = modelos.length;

            return { 'saldo': saldo, 'count': count}
        },

        matchPorvencer: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') > 0;
            });

            return this.calculate(match);
        },

        matchMayor360: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') < -360;
            });

            return this.calculate(match);
        },

        matchMenor360: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -181 && item.get('days') >= -360;
            });

            return this.calculate(match);
        },

        matchMenor180: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -91 && item.get('days') >= -180;
            });

            return this.calculate(match);
        },

        matchMenor90: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -61 && item.get('days') >= -90;
            });

            return this.calculate(match);
        },

        matchMenor60: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -31 && item.get('days') >= -60;
            });

            return this.calculate(match);
        },

        matchMenor30: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= 0 && item.get('days') >= -30;
            });

            return this.calculate(match);
        },

        totalize: function() {
            var saldo = this.saldo();
            var valor = this.valor();
            var porvencer = this.matchPorvencer();
            var mayor360 = this.matchMayor360();
            var menor360 = this.matchMenor360();
            var menor180 = this.matchMenor180();
            var menor90 = this.matchMenor90();
            var menor60 = this.matchMenor60();
            var menor30 = this.matchMenor30();
            var tcount = porvencer.count + menor30.count + menor60.count + menor90.count + menor180.count +menor360.count + mayor360.count;

            return { 'valor':valor,'saldo': saldo, 'porvencer': porvencer, 'mayor360': mayor360, 'menor360': menor360, 'menor180': menor180, 'menor90': menor90, 'menor60': menor60, 'menor30': menor30, 'tcount': tcount}
        },
   });
})(this, this.document);
/**
* Class GestionCobrosCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.GestionCobrosCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('gestioncobros.index') );
        },
        model: app.GestionCobroModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);
/**
* Class DetalleChposFechadoList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleChposFechadoList = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('cheques.detalle.index') );
        },
        model: app.ChposFechado2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        
        },

        findModel: function(id,mediopago){
            var model =  _.find(this.models, function(item){
                return item.get('id_cheque') == id;
            });
            // Preparo objeto
            modelo =  {
                'recibo3_mediopago': mediopago,
                'recibo3_cheque_id': model.get('id_cheque'),
                'recibo3_banco_medio': model.get('id_banco'),
                'recibo3_valor': model.get('chposfechado1_valor'),
                'recibo3_numero_medio': model.get('chposfechado1_ch_numero'),
                'recibo3_vence_medio': model.get('chposfechado1_ch_fecha'),
            };
            return modelo;
        },
        validar: function(data){
            var error = { success: false };

            var model = _.find(this.models, function(item){
                return item.get('factura3_id') == data.factura3_id;
            });

            if(data.deleted){
                if ( model instanceof Backbone.Model ) {
                    model.view.remove();
                    this.remove(model);
                }
            }

            if(model instanceof Backbone.Model){
                model.set('factura3_valor', data.factura3_valor);
                return error;
            }

            error.success = true;
            return error;
        },

        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat( model.get('factura3_valor') ? model.get('factura3_valor') : model.get('chposfechado2_valor'))
            }, 0);
        },

        totalize: function() {
            var valor = this.valor();
            return { 'valor': valor }
        },
   });
})(this, this.document);
/**
* Class ChDevueltoList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ChDevueltoList = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('chequesdevueltos.index') );
        },
        model: app.ChDevueltoModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        
        },

        agregar: function(id, data, valor, naturaleza){
            var model =  _.find(this.models, function(item){
                return item.get('id') == id;
            });

            // Preparo objeto
            if (data.call == 'recibo') {
                modelo = {
                    'recibo2_conceptosrc': data.recibo2_conceptosrc,
                    'recibo2_naturaleza': (naturaleza == 'D') ? 'D' : 'C',
                    'chdevuelto_id': model.get('id'),
                    'recibo2_valor': ( _.isUndefined(valor) )  ? model.get('chdevuelto_saldo') : valor,
                    'valor': ( _.isUndefined(valor) )  ? model.get('chdevuelto_saldo') : valor,
                    'recibo2_numero': model.get('chdevuelto_numero'),
                }; 
            }else if(data.call == 'ajustesc'){
                modelo = {
                    'ajustec2_valor': ( _.isUndefined(valor) ) ? model.get('chdevuelto_saldo') : valor,
                    'valor': ( _.isUndefined(valor) ) ? model.get('chdevuelto_saldo') : valor,
                    'ajustec2_documentos_doc': data.ajustec2_documentos_doc,
                    'chdevuelto_id': model.get('id'),
                    'ajustec2_tercero': data.tercero,
                    'ajustec2_naturaleza': (naturaleza == 'D') ? 'D' : 'C',
                };
            }else if( data.call == 'nota' ){
                modelo = {
                    'nota2_valor': ( _.isUndefined(valor) )  ? model.get('chdevuelto_saldo') : valor,
                    'valor': ( _.isUndefined(valor) )  ? model.get('chdevuelto_saldo') : valor,
                    'nota2_conceptonota': data.nota1_conceptonota,
                    'chdevuelto_id': model.get('id'),
                    'nota2_documentos_doc': data.nota2_documentos_doc,
                    'nota2_numero': model.get('chdevuelto_numero'),

                };
            }
            return modelo;
        },
        eliminar: function(id, data){
            // Remove value
            var model = _.find(this.models, function(item) {
                return item.get('id') == id;
            });

            //setter recibo2Model || nota2Model || ajustec2Model
            var modelo = {
                'chdevuelto_id': model.get('id'),
                'deleted': true
            }

            return modelo;
        },
   });
})(this, this.document);
/**
* Class PedidocDetalleCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PedidocDetalleCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('pedidosc.detalle.index') );
        },
        model: app.PedidoscDetalleModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        validarExists : function(data){
            var error = { success: false};

            // Validate exist
            var modelExits = _.find(this.models, function(item) {
                return item.get('producto_serie') == data.producto_serie;
            });

            if(modelExits instanceof Backbone.Model ) {
                var cantidad = parseInt(modelExits.get('pedidoc2_cantidad')) + parseInt(data.pedidoc2_cantidad)
                //Setter del modelo
                modelExits.set('pedidoc2_cantidad', cantidad ) ;
                return error;
            }

            error.success = true;
            return error;
        },

        iva: function(){
            return this.reduce(function(sum, model) {
                var iva = model.get('pedidoc2_iva_porcentaje')  / 100;
                if (model.get('pedidoc2_precio_venta') > 0) {
                    return sum + parseFloat(model.get('pedidoc2_precio_venta')) * iva * parseFloat(model.get('pedidoc2_cantidad') ) 
                }else{
                    return sum + parseFloat(model.get('pedidoc2_costo')) * iva * parseFloat(model.get('pedidoc2_cantidad') ) 
                }
            }, 0);
        },
        descuento: function() {
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('pedidoc2_descuento_valor'))) * parseFloat(model.get('pedidoc2_cantidad') ) 
            }, 0);
        },

        totalCosto: function() {
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('pedidoc2_costo'))) * parseFloat(model.get('pedidoc2_cantidad')) 
            }, 0);
        },
        total: function(){
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('pedidoc2_subtotal')));
            }, 0);
        },
        totalize: function() {
            var totalCosto = this.totalCosto();
                descuento = this.descuento();   
                iva = this.iva();
                total = this.total();
            return { 'pedidoc1_bruto': totalCosto , 'pedidoc1_descuento': descuento, 'pedidoc1_iva': iva, 'pedidoc1_total': total }
        },
   });

})(this, this.document);
/**
* Class DevolucionDetalleCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DevolucionDetalleCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('devoluciones.detalle.index') );
        },
        model: app.Devolucion2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },
        devolverTodo: function(){
            _.each(this.models, function(item){
                item.set('devolucion2_cantidad', item.get('factura2_cantidad'));
            });
        },
        descontadas:function(){
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('devolucion2_cantidad'))) 
            }, 0);
        },
        totalBruto:function(){
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('devolucion2_costo'))) * parseFloat(model.get('devolucion2_cantidad')) 
            },0);
        },
        iva:function(){
            return this.reduce(function(sum, model) {
                var iva = model.get('devolucion2_iva')  / 100;
                if (model.get('devolucion2_precio') > 0) {
                    return sum + parseFloat(model.get('devolucion2_precio')) * iva * parseFloat(model.get('devolucion2_cantidad') ) 
                }else{
                    return sum + parseFloat(model.get('devolucion2_costo')) * iva * parseFloat(model.get('devolucion2_cantidad') ) 
                }
            }, 0);
        },
        descuento:function(){
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('devolucion2_descuento'))) * parseFloat(model.get('devolucion2_cantidad') ) 
            }, 0);
        },
        totalize:function(){
            var totalBruto = this.totalBruto();
                descontadas = this.descontadas();   
                iva = this.iva();   
                descuento = this.descuento();   
                total = (totalBruto + iva) - descuento;
            return {'devolucion1_bruto': totalBruto , 'devueltasTotal': descontadas, 'devolucion1_iva': iva, 'devolucion1_descuento':descuento,'devolucion1_total':total }
        },
   });

})(this, this.document);
/**
* Class CuotasFPList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.CuotasFPList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('facturap.cuotas.index') );
        },
        model: app.Facturap2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);

/**
* Class DetalleFactura2Collection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleFactura2Collection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('facturas.detalle.index') );
        },
        model: app.Factura2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },
        valid: function(){
            var error = { success: false};

            // Validate exist
            _.each(this.models, function(item) {
                (item.has('items')) ? error.success = true: error.success = false;
                (item.get('maneja_serie') == 1) ? error.success = true: '';
            });
            return error;
        },
        iva: function(){
            return this.reduce(function(sum, model) {
                var iva = model.get('factura2_iva_porcentaje')  / 100;
                if (model.get('factura2_precio_venta') > 0) {
                    return sum + parseFloat(model.get('factura2_precio_venta')) * iva * parseFloat(model.get('factura2_cantidad') ) 
                }else{
                    return sum + parseFloat(model.get('factura2_costo')) * iva * parseFloat(model.get('factura2_cantidad') ) 
                }
            }, 0);
        },
        descuento: function() {
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('factura2_descuento_valor'))) * parseFloat(model.get('factura2_cantidad') ) 
            }, 0);
        },

        totalCosto: function() {
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('factura2_costo'))) * parseFloat(model.get('factura2_cantidad')) 
            }, 0);
        },
        total: function(){
            return this.reduce(function(sum, model) {
                return sum + (parseFloat(model.get('factura2_subtotal')));
            }, 0);
        },
        totalize: function() {
            var totalCosto = this.totalCosto();
                descuento = this.descuento();   
                iva = this.iva();
                total = this.total();
            return {'factura1_bruto': totalCosto , 'factura1_descuento': descuento, 'factura1_iva': iva, 'factura1_total': total}
        },
   });

})(this, this.document);
/**
* Class DetalleNotaList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleNotaList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('notas.detalle.index') );
        },
        
        model: app.Nota2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        validar: function(data){
            var error = { success: false };
            var model = _.find(this.models, function(item){
                if (item.has('factura3_id') ) {
                    return item.get('factura3_id') == data.factura3_id;

                }else if ( item.has('anticipo_id') ){
                    return item.get('anticipo_id') == data.anticipo_id;
                }else if ( item.has('chdevuelto_id') ){
                    return item.get('chdevuelto_id') == data.chdevuelto_id;
                }
            });

            if(data.deleted){
                if ( model instanceof Backbone.Model ) {
                    model.view.remove();
                    this.remove(model);
                }
            }
            if(model instanceof Backbone.Model){
                model.set('factura3_valor', data.factura3_valor);
                model.set('nota2_valor', data.nota2_valor);
                model.set('valor', data.valor);
                return error;
            }

            error.success = true;
            return error;
        },

        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat( model.get('factura3_valor') ? model.get('factura3_valor') : model.get('nota2_valor'))
            }, 0);
        },

        totalize: function() {
            var valor = this.valor();
            return { 'valor': valor }
        },
   });

})(this, this.document);
/**
* Class RemisionCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.RemisionCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('ordenes.remrepuestos.index') );
        },
        model: app.RemRepuModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });
})(this, this.document);


/**
* Class RemRepuCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.RemRepuCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('ordenes.detalle.remrepuestos.index') );
        },
        model: app.RemRepu2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        calculateCantida: function(id){
            // var x = _.find(this.models, function(item){
            //     return item.get('id') == id;
            // });
        
            // var fact = $('#facturado_'+x.get('id')).val();
            //     nofact = $('#nofacturado_'+x.get('id')).val();
            //     devo = $('#devuelto_'+x.get('id')).val();
            //     usad = $('#usado_'+x.get('id')).val();
            //     cantidad = x.get('remrepu2_cantidad');

            // var tot = parseInt(fact) + parseInt(nofact) + parseInt(devo) + parseInt(usad);

            //     // nofacts = $('#nofacturado_'+x.get('id')).attr('max');
            //     // devos = $('#devuelto_'+x.get('id')).attr('max');
            //     // usads = $('#usado_'+x.get('id')).attr('max');

            // var resta = parseInt( cantidad ) - parseInt( tot );
        },

        storeLegalizacion: function( data, wrapper ){
            var error = { success: false };

            _.each(this.models, function(item){
                console.log(item);
            });

            console.log(data);

            // var model = _.each(this.models, function(item){

            //     if(item instanceof Backbone.Model ) {
            //         item.save(data, {
            //             success : function(model, resp) {
            //                 if(!_.isUndefined(resp.success)) {
            //                     window.Misc.removeSpinner( wrapper );

            //                     // response success or error
            //                     var text = resp.success ? '' : resp.errors;
            //                     if( _.isObject( resp.errors ) ) {
            //                         text = window.Misc.parseErrors(resp.errors);
            //                     }

            //                     if( !resp.success ) {
            //                         alertify.error(text);
            //                         return error;
            //                     }
            //                 }
            //             },
            //             error : function(model, error) {
            //                 window.Misc.removeSpinner( wrapper );
            //                 alertify.error(error.statusText)
            //             }
            //         });
            //     }

            // });


            error.success = false;
            return error;
        }

   });
})(this, this.document);


/**
* Class visita of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.VisitaCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('ordenes.visitas.index') );
        },
        model: app.VisitaModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });
})(this, this.document);


/**
* Class DetallePedidoCollection of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetallePedidoCollection = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('pedidos.detalle.index') );
        },
        
        model: app.PedidoDetalleModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);
/**
* Class ItemRolloINList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ItemRolloINList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('productos.rollos.index') );
        },
        model: app.ItemRolloModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);

/**
* Class ProductoLote of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ProductoLote = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('productos.lotes.index') );
        },
        model: app.LoteModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        },
        /**
        * Valid entrada
        */
        validEntrada:function(uentrada){
            var data = {'success': true , 'unidades':0};  
            var unidades = 0;
            _.each(this.models, function(item){ 
                unidades+= parseFloat( $('#prodbodevence_unidades_'+item.get('id')).val());
            });
            
            if(unidades >= uentrada) {
                data.success =  ("No puede superar la cantidad de unidades(" + uentrada +") a ingresar, por favor verifique información.");
            }
            data.unidades = unidades
            return data;
        }
   });

})(this, this.document);

/**
* Class ProdbodeList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ProdbodeList = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('productos.prodbode.index') );
        },
        model: app.ProdbodeModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });
})(this, this.document);
/**
* Class ProductoSeriesINList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ProductoSeriesINList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('productos.index') );
        },
        model: app.ProductoModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);

/**
* Class DetalleFactura3List of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleFactura3List = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('recibos.factura.index') );
        },
        model: app.Factura3Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        agregar: function(id, concepto, type, valor){
            // Setter value
            var model = _.find(this.models, function(item) {
                return item.get('id') == id;
            });
            var object = {
                'factura1_numero': model.get('factura1_numero'), 
                'factura3_id': model.get('id'),
                'factura3_valor': !_.isUndefined(valor) ? valor : model.get('factura3_saldo'),
                'factura3_cuota': model.get('factura3_cuota')
            }
            // Setter attributes to model
            if( concepto.call == 'recibo' ){
                modelo = $.extend(object, {
                    'recibo2_conceptosrc': concepto.recibo2_conceptosrc,
                    'recibo2_naturaleza': 'C',
                    'recibo2_factura1': model.get('factura3_factura1'),
                    'call': concepto.call,
                }); 
            }else if(concepto.call == 'chposfechado'){
                modelo = $.extend(object,{
                    'chposfechado2_conceptosrc':concepto.chposfechado2_conceptosrc,
                    'chposfechado2_factura1': model.get('factura3_factura1'),
                    'chposfechado2_tercero':concepto.tercero,
                    'call': concepto.call,
                });
            }else if ( concepto.call == 'nota' ){
                modelo = $.extend(object, {
                    'nota2_conceptonota': concepto.nota1_conceptonota,
                    'nota2_factura1': model.get('factura3_factura1'),
                    'nota2_documentos_doc': model.get('factura1_documentos'),
                    'call': concepto.call,
                }); 
            }else if ( concepto.call == 'ajustesc'){
                modelo = $.extend(object, {
                    'ajustec2_valor': !_.isUndefined(valor) ? valor : model.get('factura3_saldo'),
                    'ajustec2_documentos_doc': concepto.ajustec2_documentos_doc,
                    'ajustec2_factura1': model.get('factura3_factura1'),
                    'ajustec2_tercero': concepto.tercero,
                    'ajustec2_naturaleza': type == 'D' ? 'D' : 'C',
                    'call': concepto.call,
                }); 
            }
            return modelo;
        },

        eliminar: function(id, concepto){
            // Remove value
            var model = _.find(this.models, function(item) {
                return item.get('id') == id;
            });

            //setter recibo2Model || nota2Model || ajustec2Model
            var modelo = {
                'factura3_id': model.get('id'),
                'deleted': true
            }

            return modelo;
        },

        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('factura3_saldo'))
            }, 0);
        },

        calculate: function(modelos){
            var saldo = _.reduce(modelos, function(sum, model) {
                return sum + parseFloat(model.get('factura3_saldo'))
            }, 0);

            var count = modelos.length;

            return { 'saldo': saldo, 'count': count}
        },

        matchPorvencer: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') > 0;
            });

            return this.calculate(match);
        },

        matchMayor360: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') < -360;
            });

            return this.calculate(match);
        },

        matchMenor360: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -181 && item.get('days') >= -360;
            });

            return this.calculate(match);
        },

        matchMenor180: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -91 && item.get('days') >= -180;
            });

            return this.calculate(match);
        },

        matchMenor90: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -61 && item.get('days') >= -90;
            });

            return this.calculate(match);
        },

        matchMenor60: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= -31 && item.get('days') >= -60;
            });

            return this.calculate(match);
        },

        matchMenor30: function(){
            var match = _.filter(this.models, function(item){
                return item.get('days') <= 0 && item.get('days') >= -30;
            });

            return this.calculate(match);
        },

        totalize: function() {
            var valor = this.valor();
            var porvencer = this.matchPorvencer();
            var mayor360 = this.matchMayor360();
            var menor360 = this.matchMenor360();
            var menor180 = this.matchMenor180();
            var menor90 = this.matchMenor90();
            var menor60 = this.matchMenor60();
            var menor30 = this.matchMenor30();
            var tcount = porvencer.count + menor30.count + menor60.count + menor90.count + menor180.count +menor360.count + mayor360.count;

            return { 'valor': valor, 'porvencer': porvencer, 'mayor360': mayor360, 'menor360': menor360, 'menor180': menor180, 'menor90': menor90, 'menor60': menor60, 'menor30': menor30, 'tcount': tcount}
        },
   });
})(this, this.document);
/**
* Class DetalleReciboList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleReciboList = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('recibos.detalle.index') );
        },
        model: app.Recibo2Model,

        /**
        * Constructor Method
        */
        initialize : function(){
        },

        validar: function(data){
            var error = { success: false };
            var model = _.find(this.models, function(item){
                if (item.has('factura3_id') ) {
                    return item.get('factura3_id') == data.factura3_id;

                }else if ( item.has('anticipo_id') ){
                    return item.get('anticipo_id') == data.anticipo_id;
                }else if ( item.has('chdevuelto_id') ){
                    return item.get('chdevuelto_id') == data.chdevuelto_id;
                }
            });

            if(data.deleted){
                if ( model instanceof Backbone.Model ) {
                    model.view.remove();
                    this.remove(model);
                }
            }
            if(model instanceof Backbone.Model){
                model.set('factura3_valor', data.factura3_valor);
                model.set('recibo2_valor', data.recibo2_valor);
                model.set('valor', data.valor);
                return error;
            }

            error.success = true;
            return error;
        },

        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat( model.get('factura3_valor') ? model.get('factura3_valor') : model.get('recibo2_valor'))
            }, 0);
        },

        totalize: function() {
            var valor = this.valor();
            return { 'valor': valor }
        },
   });
})(this, this.document);
/**
* Class DetalleRecibo3List of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.DetalleRecibo3List = Backbone.Collection.extend({
        url: function() {
            return window.Misc.urlFull( Route.route('recibos.mediopago.index') );
        },
        model: app.Recibo3Model,

        /**
        * Constructor Method
        */
        initialize : function(){
            
        },

        valor: function() {
            return this.reduce(function(sum, model) {
                return sum + parseFloat(model.get('recibo3_valor'));
            }, 0);
        },

        totalize: function() {
            var valor = this.valor();
            return { 'valor': valor }
        },
   });
})(this, this.document);
/**
* Class PermisosRolList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.PermisosRolList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('roles.permisos.index') );
        },
        model: app.ModuloModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);

/**
* Class ContactsList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.ContactsList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('terceros.contactos.index') );
        },
        model: app.ContactoModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });
})(this, this.document);

/**
* Class RolList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.RolList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('terceros.roles.index') );
        },
        model: app.UsuarioRolModel,

        /**
        * Constructor Method
        */
        initialize : function(){
        }
   });

})(this, this.document);

/**
* Class TrasladoProductosList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TrasladoProductosList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('traslados.detalle.index') );
        },
        model: app.Traslado2Model,

        /**
        * Constructor Method
        */
        initialize : function() {

        }
   });

})(this, this.document);
/**
* Class TrasladoUbicacionesList of Backbone Collection
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function (window, document, undefined) {

    app.TrasladoUbicacionesList = Backbone.Collection.extend({

        url: function() {
            return window.Misc.urlFull( Route.route('trasladosubicaciones.detalle.index') );
        },
        model: app.TrasladoUbicacion2Model,

        /**
        * Constructor Method
        */
        initialize : function() {

        }
   });

})(this, this.document);
/**
* Class CreateActividadView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateActividadView = Backbone.View.extend({

        el: '#actividad-create',
        template: _.template( ($('#add-actividad-tpl').html() || '') ),
        events: {
            'submit #form-actividad': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {      
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
            
            // Attributes 
            this.$wraperForm = this.$('#render-form-actividad');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
            
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );                
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();  
        },
        
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSpinner == 'function' )
                window.initComponent.initSpinner();         
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('actividades.show', { actividades: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainActividadView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainActividadView = Backbone.View.extend({

        el: '#actividades-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$actividadesSearchTable = this.$('#actividades-search-table');

            this.$actividadesSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('actividades.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [
                    { data: 'actividad_codigo', name: 'actividad_codigo' },
                    { data: 'actividad_nombre', name: 'actividad_nombre'},
                    { data: 'actividad_categoria', name: 'actividad_categoria'}, 
                    { data: 'actividad_tarifa', name: 'actividad_tarifa' }
                ],
                buttons: [
                    { 
                        text: '<i class="fa fa-user-plus"></i> Nueva actividad', 
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                                window.Misc.redirect( window.Misc.urlFull( Route.route('actividades.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('actividades.show', {actividades: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateAjusteView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateAjusteView = Backbone.View.extend({

        el: '#ajuste-create',
        template: _.template(($('#add-ajuste-tpl').html() || '') ),
        templateDetailt: _.template(($('#add-detailt-ajuste-tpl').html() || '') ),
        events: {
            'click .submit-ajuste': 'submitFormAjuste', 
            'submit #form-ajustes' :'onStore',
            'submit #form-detalle-ajuste' :'onStoreItem',
            'change .change-in-or-exit-koi-component': 'changeTipoAjuste',
            'change .koi-changed-reclacification': 'changeReclacification'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-ajuste');

            this.detalleAjuste = new app.AjustesDetalleCollection();
            
            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
        },


        /*
        * Render View Element
        */
        render: function() {
                        
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-ajustes');
            this.$divDetalle = this.$('#detalle-ajuste');
            
             //Reference field select 
            this.$selectTipoAjuste = $('#ajuste1_tipoajuste');
            this.$fieldCantidadEntrada = $('#ajuste2_cantidad_entrada');
            this.$fieldCantidadSalida = $('#ajuste2_cantidad_salida');
            this.$fieldCosto = $('#ajuste2_costo');
            
            // Reference views
            this.referenceViews();
            
            this.ready();
        },


        referenceViews:function(){ 
            this.detalleAjustesView = new app.DetalleAjustesView( {
                collection: this.detalleAjuste,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'id': this.model.get('id'),
                    }
               }
            });
        },
         /**
        * Event submit ajuste1
        */
        submitFormAjuste: function (e) {
            this.$form.submit();
        },
        /**
        * Event Create Ajuste
        */
        onStore: function (e) {
            
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.ajuste2 = this.detalleAjuste.toJSON();
                this.model.save( data, {patch: true, silent: true} );

            }   
        },
        /**
        * Event store ajuste2 validate temporal carDetail
        */
        onStoreItem: function(e){

            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                this.$formItem = this.$('#form-detalle-ajuste');
                var data = window.Misc.formToJson( e.target );
                    data.tipoajuste = this.$selectTipoAjuste.val();
                    data.sucursal = this.$('#ajuste1_sucursal').val();
                    data.lote = this.$('#ajuste1_lote').val();
                window.Misc.evaluateActionsInventory({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action , tipo)
                        {      
                            // Open InventarioActionView
                            if ( _this.inventarioActionView instanceof Backbone.View ){
                                _this.inventarioActionView.stopListening();
                                _this.inventarioActionView.undelegateEvents();
                            }
                            _this.inventarioActionView = new app.InventarioActionView({
                                model: _this.model,
                                collection: _this.detalleAjuste,
                                parameters: {
                                    data: data,
                                    action: action,
                                    tipo: tipo,
                                    form: _this.$formItem
                                }
                            });
                            _this.inventarioActionView.render();
                        }
                    })(this)
                });
            }
        },
        
        /**
        * Event define tipoAjuste
        */
        changeTipoAjuste:function(e){
            var _this = this;
            tiposajuste = _this.$selectTipoAjuste.val();
            $.ajax({
                type: 'GET',
                url: window.Misc.urlFull(Route.route('tiposajuste.show',{tiposajuste: tiposajuste})),
                beforeSend: function() {
                    window.Misc.setSpinner( _this.el );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.el );
                
                //Render form detalle ajuste
                _this.$divDetalle.empty().html( _this.templateDetailt(resp) );

                //Hide input lote
                (resp.tipoajuste_tipo == 'S') ? _this.$('#ajuste1_lotes').hide() : _this.$('#ajuste1_lotes').show(); 

                // Clear collection
                _this.detalleAjuste.reset();

                _this.ready();
            })       
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.el );
                alertify.error(thrownError);
            });
        },
        /**
        * Change tipo reclacificacion
        */
        changeReclacification:function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                if ('#'+$(e.currentTarget).attr('id') == this.$fieldCantidadEntrada.selector) { 
                    $(this.$fieldCantidadSalida.selector).html(this.divDetalle).hide();
                }else{
                    $(this.$fieldCantidadEntrada.selector).html(this.divDetalle).hide();
                    $(this.$fieldCosto.selector).html(this.divDetalle).prop('readonly',true);
                    $('#ajuste2_producto').html(this.divDetalle).attr('data-costo', 'ajuste2_costo');              
                }
            }
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('ajustes.show', { ajustes: resp.id})) );
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleAjusteItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAjusteItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-ajustedetalle-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class DetalleAjustesView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAjustesView = Backbone.View.extend({

        el: '#browse-detalle-ajuste-list',
        events: {
            'click .item-detalleajuste-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.id) && !_.isNull(this.parameters.dataFilter.id) ){
                this.confCollection.data.id = this.parameters.dataFilter.id;
                this.collection.fetch( this.confCollection );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object detalleAjusteModel Model instance
        */
        addOne: function (detalleAjusteModel) {
            
            var view = new app.DetalleAjusteItemView({
                model: detalleAjusteModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            detalleAjusteModel.view = view;
            this.$el.append( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {

            this.$el.find('tbody').html('');
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores detalleAjuste
        * @param form element
        */
        storeOne: function (data) {          
            var _this = this
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );
            
            // Prepare data
            data.id = this.parameters.dataFilter.id;
            
            // Add model in collection
            var detalleAjusteModel = new app.AjusteDetalleModel();
            detalleAjusteModel.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }
                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class MainAjustesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainAjustesView = Backbone.View.extend({

        el: '#ajustes-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$ajustesSearchTable = this.$('#ajustes-search-table');
            
            this.$ajustesSearchTable.DataTable({
                dom:"<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('ajustes.index') ),
                columns: [ 
                    { data: 'ajuste1_numero', name: 'ajuste1_numero' },
                    { data: 'tipoajuste_nombre', name: 'tipoajuste_nombre' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'ajuste1_fecha', name: 'ajuste1_fecha' },
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-cog"></i> Nuevo Ajuste',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('ajustes.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('ajustes.show', {ajustes: full.id }) )  +'">' + data + '</a>';
                        },
                       
                    }, 
                ]
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ShowAjusteView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowAjusteView = Backbone.View.extend({

        el: '#ajuste-show',
        
        /**
        * Constructor Method
        */
        initialize : function() {

            // Attributes
            this.$wraperForm = this.$('#render-ajuste-show');

            // Model exist
            if( this.model.id != undefined ) {
                this.detalleAjuste = new app.AjustesDetalleCollection();

                // Reference views
                this.referenceViews();
            }

        },

        /**
        * reference to views
        */
        referenceViews: function () {
            this.detalleAjustesView = new app.DetalleAjustesView( {
                collection: this.detalleAjuste,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                        'id': this.model.get('id')
                    }
               }
            });
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
               
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateAjustecView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateAjustecView = Backbone.View.extend({

        el: '#ajustec-create',
        template: _.template( ($('#add-ajustec-tpl').html() || '') ),
        templateDetailt: _.template( ($('#add-detail-tpl').html() || '') ),
        events: {
            'click .submit-ajustec' :'submitFormAjustec',
            'submit #form-ajustec': 'onStore',
            'submit #form-detail-ajustec': 'onStoreItem',
            'change .change-documento': 'changeDocumento',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {      
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
            
            // Attributes 
            this.$wraperForm = this.$('#render-form-ajustec');
            this.detalleAjustec = new app.AjustecDetalleList();
            this.$templateFact = _.template( ($('#add-ajustec-factura-tpl').html() || '') );

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$wraperDetail = this.$('#render-form-detail');
            this.$wraperDetail.html( this.templateDetailt({}) );

            this.$form = this.$('#form-ajustec');

            // Reference views
            this.referenceViews();
            this.ready();  
        },

        referenceViews:function(){ 
            this.detalleAjustecView = new app.DetalleAjustecView( {
                collection: this.detalleAjustec,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'id': this.model.get('id')
                    }
               }
            });
        },

        changeDocumento: function (e){
            // Preparo sucursal
            var sucursal = this.$('#ajustec1_sucursal').val();
            if (sucursal == '')
                return alertify.error('Campo de sucursal se encuentra vacío por favor ingrese una sucursal');

            var data = window.Misc.formToJson( e.target );
                data.tercero = this.$(e.currentTarget).attr('data-tercero');
                data.sucursal = sucursal;
                data.call = 'ajustesc';

            if( !_.isUndefined(data.ajustec2_documentos_doc) && !_.isNull(data.ajustec2_documentos_doc) && data.ajustec2_documentos_doc != ''){
                window.Misc.evaluateActionsCartera({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action )
                        {      
                            // Open CarteraActionView
                            if ( _this.carteraActionView instanceof Backbone.View ){
                                _this.carteraActionView.stopListening();
                                _this.carteraActionView.undelegateEvents();
                            }

                            _this.carteraActionView = new app.CarteraActionView({
                                model: _this.model,
                                collection: _this.detalleAjustec,
                                parameters: {
                                    template: _this.$templateFact,
                                    data: data,
                                    action: action,
                                }
                            });
                            _this.carteraActionView.render();
                        }
                    })(this)
                });
            }
        },

        /**
        * Event submit recibo1
        */
        submitFormAjustec: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                    data.detalle = this.detalleAjustec.toJSON();
                this.model.save( data, {patch: true, silent: true} );                
            }
        },

        /**
        *   Evenet Submit item
        */ 
        onStoreItem: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.detalleAjustec.trigger( 'store', data );

                this.$('#ajustec2_documentos_doc').val(0).trigger('change');
                this.$('#ajustec2_naturaleza').val('');
                this.$('#ajustec2_valor').val('');
            }
        },
        
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('ajustesc.show', { ajustesc: resp.id}), { trigger:true }) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleAjustecItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAjustecItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-detalle-ajustec-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class DetalleAjustecView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAjustecView = Backbone.View.extend({

        el: '#browse-detalle-ajustec-list',
        events: {
            'click .item-detalleajustec-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$debito = this.$('#total-debito');
            this.$credito = this.$('#total-credito');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.ajustec) && !_.isNull(this.parameters.dataFilter.ajustec) ){
                this.confCollection.data.ajustec = this.parameters.dataFilter.ajustec;
                this.collection.fetch( this.confCollection );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
        },

        /**
        * Render view contact by model
        * @param Object ajustec2Model Model instance
        */
        addOne: function (ajustec2Model) {
            var view = new app.DetalleAjustecItemView({
                model: ajustec2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            ajustec2Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores detalleAjustec
        * @param form element
        */
        storeOne: function (data) {  
            var _this = this
            if( !_.isUndefined(data.factura3_id) || !_.isUndefined(data.anticipo_id) || !_.isUndefined(data.chdevuelto_id) ){
                var valid = this.collection.validar(data);
                if(!valid.success){
                    this.totalize();
                    return;
                }
            }
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );
            
            // Add model in collection
            var ajustec2Model = new app.Ajustec2Model();
            ajustec2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }
                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();
            if(this.$debito.length) {
                this.$debito.html( window.Misc.currency(data.debito) );
            }

            if(this.$credito.length) {
                this.$credito.html( window.Misc.currency(data.credito) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class MainAjustecView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainAjustecView = Backbone.View.extend({

        el: '#ajustesc-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            this.$ajustecSearchTable = this.$('#ajustesc-search-table');

            this.$ajustecSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('ajustesc.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'ajustec1_observaciones', name: 'ajustec1_observaciones'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo ajuste',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('ajustesc.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('ajustesc.show', {ajustesc: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class ShowAjustecView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowAjustecView = Backbone.View.extend({

        el: '#ajustec-show',
        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {
            	this.detalleAjustec = new app.AjustecDetalleList();
                
                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
    		// Detalle ajustec list
            this.detalleAjustecView = new app.DetalleAjustecView({
                collection: this.detalleAjustec,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                    	ajustec: this.model.get('id')
                    }
                }
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class CreateAnticipoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateAnticipoView = Backbone.View.extend({

        el: '#anticipo-create',
        template: _.template(($('#add-anticipos-tpl').html() || '') ),
        templateDetalleAnticipo2: _.template(($('#add-anticipomedio-tpl').html() || '') ),

        events: {
            'click .submit-anticipo1' : 'submitForm',
            'submit #form-anticipo1' : 'onStore',
            'submit #form-anticipo2' : 'onStoreItem2',
            'submit #form-anticipo3' : 'onStoreItem3',
            'change .change-medio-pago' : 'changeMedio',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {

            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
           
            // Attributes
            this.$wraperForm = this.$('#render-form-anticipo');

            this.detalleAnticipoMedioPagoList = new app.DetalleAnticipo2List();
            this.detalleAnticipoConceptoList = new app.DetalleAnticipo3List();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
            
            this.ready(); 
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-anticipo1');

            // References fields          
            this.$concepto = this.$('#anticipo3_conceptosrc');
            this.$naturaleza = this.$('#anticipo3_naturaleza');
            this.$valorConcepto = this.$('#anticipo3_valor'); 
            this.$medio = this.$('#anticipo2_mediopago');

            this.referenceView();
        },
        /**
        * Event submit devolucion1
        */
        submitForm: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create anticipos
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                    data.anticipo2 = this.detalleAnticipoMedioPagoList.toJSON();
                    data.anticipo3 = this.detalleAnticipoConceptoList.toJSON();
                this.model.save( data, {patch: true, silent: true} );
            }   
        },  
        /**
        * Reference view collection
        */
        referenceView:function(){

            // detalleAnticipoMedioPagoList
            this.detalleAnticiposMediosView = new app.DetalleAnticiposMediosView({
                collection: this.detalleAnticipoMedioPagoList,
                parameters: {
                    edit: true,
                    dataFilter: {
                        'anticipo2': this.model.get('id')
                    }
                }
            });
            
            //detalleAnticipoConceptoList
            this.detalleAnticiposView = new app.DetalleAnticiposView( {
                collection: this.detalleAnticipoConceptoList,
                parameters: {
                    edit: true,
                    dataFilter: {
                        'anticipo3': this.model.get('id')
                    }
               }
            });
        },

        /**
        * Event change medio de pago 
        */
        changeMedio: function(e){
            e.preventDefault();
            // References
            this.$detailMedio = this.$('#detail-medio-pago');
            var _this = this;
                medio = _this.$(e.currentTarget).val();
                attributes = this.model.toJSON();
            $.ajax({
                type: 'GET',
                url: window.Misc.urlFull(Route.route('mediopagos.show',{ mediopagos: medio })),
                beforeSend: function() {
                    window.Misc.setSpinner( _this.el );
                }
            })
            .done(function(resp) {

                window.Misc.removeSpinner( _this.el );
                
                attributes.resp = resp;

                //Render form detalle medioPago
                _this.$detailMedio.empty().html( _this.templateDetalleAnticipo2( attributes, resp ) );
                _this.$banco = _this.$('#anticipo2_banco_medio');
                _this.$numeroMedio = _this.$('#anticipo2_numero_medio');
                _this.$fecha = _this.$('#anticipo2_vence_medio');
                _this.$valorMedio = _this.$('#anticipo2_valor');

                _this.ready();
            })       
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.el );
                alertify.error(thrownError);
            });
        },
        /**
        *
        */
        onStoreItem2: function(e){
            
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.detalleAnticipoMedioPagoList.trigger( 'store', data );

                // Clean fields
                this.cleanFields();
            }
        },
        /**
        *
        */
        onStoreItem3: function(e){

            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                if (this.detalleAnticipoMedioPagoList.length == 0) {
                    this.cleanFields();
                    return alertify.error('Por favor ingresar medio de pago antes de agregar concepto detalle del anticipo');
                }

                var data = window.Misc.formToJson( e.target );
                this.detalleAnticipoConceptoList.trigger( 'store', data );

                // Clean fields
                this.cleanFields();
            }
        },

        /**
        *
        */
        cleanFields: function(){

            this.$concepto.val('').trigger('change.select2');
            this.$naturaleza.val('');
            this.$valorConcepto.val('');

            if (this.detalleAnticipoMedioPagoList.length > 0) {
                this.$banco.val('').trigger('change.select2');
                this.$numeroMedio.val('');
                this.$fecha.val(moment().format('YYYY-MM-DD'));
                this.$medio.val('').trigger('change.select2');
                this.$valorMedio.val('');
            }
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            // window.Misc.redirect( window.Misc.urlFull( Route.route('anticipos.show', { anticipos: resp.id})) );
            window.Misc.redirect( window.Misc.urlFull( Route.route('anticipos.index')));
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleAnticipoItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAnticipoItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#add-anticipo3-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class DetalleAnticiposView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAnticiposView = Backbone.View.extend({

        el: '#browse-anticipo3-list',
        events: {
            'click .item-anticipo3-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.parameters.wrapper

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$valor = this.$('#total');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.anticipo3) && !_.isNull(this.parameters.dataFilter.anticipo3) ){
                this.confCollection.data.anticipo3 = this.parameters.dataFilter.anticipo3;
                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view contact by model
        * @param Object detalleReciboModel Model instance
        */
        addOne: function (anticipo3Model) {
            var view = new app.DetalleAnticipoItemView({
                model: anticipo3Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            anticipo3Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores recibi
        * @param form element
        */
        storeOne: function ( data ) {    
            var _this = this;
            
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );  

            if (this.collection.length > 0) {
                var total = this.collection.totalize();
                data.total = total.valor;
            }
            data.valor = $('#anticipo1_valor').inputmask('unmaskedvalue');
            // Add model in collection
            var anticipo3Model = new app.Anticipo3Model();
            anticipo3Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
                
                // Update total
                this.totalize();
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$valor.length) {
                this.$valor.html( window.Misc.currency(data.valor) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( model, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });
})(jQuery, this, this.document);

/**
* Class AnticipoMedioPagoItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AnticipoMedioPagoItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#add-anticipo2-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class DetalleAnticiposMediosView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleAnticiposMediosView = Backbone.View.extend({

        el: '#browse-anticipo2-list',
        events: {
            'click .item-anticipo2-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.parameters.wrapper
            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$valor = this.$('#total');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.anticipo2) && !_.isNull(this.parameters.dataFilter.anticipo2) ){
                this.confCollection.data.anticipo2 = this.parameters.dataFilter.anticipo2;
                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view contact by model
        * @param Object detalleReciboModel Model instance
        */
        addOne: function (anticipo2Model) {
            var view = new app.AnticipoMedioPagoItemView({
                model: anticipo2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            anticipo2Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores recibi
        * @param form element
        */
        storeOne: function ( data ) {    
            var _this = this;

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Add model in collection
            var anticipo2Model = new app.Anticipo2Model();
            anticipo2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
                
                // Update total
                this.totalize();
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$valor.length) {
                this.$valor.html( window.Misc.currency(data.valor) );
                $('#anticipo1_valor').val(data.valor);
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( model, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });
})(jQuery, this, this.document);

/**
* Class MainAnticiposView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainAnticiposView = Backbone.View.extend({

        el: '#anticipos-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$anticiposSearchTable = this.$('#anticipos-search-table');
            
            this.$anticiposSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('anticipos.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [ 
                    { data: 'anticipo1_numero', name: 'anticipo1_numero' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'tercero_nit', name: 'tercero_nit' },
                    { data: 'tercero_nombre', name: 'anticipo1_tercero' },
                    { data: 'anticipo1_fecha', name: 'anticipo1_fecha' },
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo anticipo',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('anticipos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('anticipos.show', {anticipos: full.id }) )  +'">' + data + '</a>';
                        },
                    },
                    {
                        targets: [5,6,7,8],
                        visible: false
                    }
                ]
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ShowAnticiposView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowAnticiposView = Backbone.View.extend({

        el: '#anticipo-show',
        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {
                this.detalleAnticipoMedioPagoList = new app.DetalleAnticipo2List();
                this.detalleAnticipoConceptoList = new app.DetalleAnticipo3List();
                
                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {

            // DetalleAnticipoMedioPagoList
            this.detalleAnticiposMediosView = new app.DetalleAnticiposMediosView({
                collection: this.detalleAnticipoMedioPagoList,
                parameters: {
                    edit: false,
                    dataFilter: {
                        'anticipo2': this.model.get('id')
                    }
                }
            });
            
            //DetalleAnticipoConceptoList
            this.detalleAnticiposView = new app.DetalleAnticiposView( {
                collection: this.detalleAnticipoConceptoList,
                parameters: {
                    edit: false,
                    dataFilter: {
                        'anticipo3': this.model.get('id')
                    }
               }
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class AsientoActionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AsientoActionView = Backbone.View.extend({

        el: '#asiento-content-section',
        // Produccion
        templateOrdenp: _.template( ($('#searchordenp-asiento-tpl').html() || '') ),
        // Proveedores
        templateFacturap: _.template( ($('#rfacturap-asiento-tpl').html() || '') ),
        templateAddFacturap: _.template( ($('#add-rfacturap-asiento-tpl').html() || '') ),
        templateCuotasFacturap: _.template( ($('#add-rfacturap2-asiento-tpl').html() || '') ),
        // Cartera
        templateCartera: _.template( ($('#rcartera-asiento-tpl').html() || '') ),
        templateAddFactura: _.template( ($('#add-facturacartera-asiento-tpl').html() || '') ),
        templateCuotasFactura: _.template( ($('#add-cuotasfacturacartera-asiento-tpl').html() || '') ),
        // Inventario
        templateInventario: _.template( ($('#add-inventario-asiento-tpl').html() || '') ),
        templateAddItemRollo: _.template( ($('#add-itemrollo-asiento-tpl').html() || '') ),
        templateChooseItemsRollo: _.template( ($('#choose-itemrollo-asiento-tpl').html() || '') ),
        templateAddSeries: _.template( ($('#add-series-asiento-tpl').html() || '') ),
        events: {
            // Produccion
            'submit #form-create-ordenp-asiento-component-source': 'onStoreItemOrdenp',
            // Proveedores
            'submit #form-create-asiento-component-source': 'onStoreItemFacturap',
            'change input#facturap1_factura': 'facturapChanged',
            // Cartera
            'change select#factura_nueva': 'facturaNuevaChanged',
            // Inventario
            'submit #form-create-inventario-asiento-component-source': 'onStoreItemInventario',
            'change .evaluate-producto-movimiento-asiento': 'evaluateProductoInventario'
        },
        parameters: {
            data: { },
            actions: { }
        },

        /**
        * Constructor Method
        */
        initialize : function( opts ) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            this.$modalOp = this.$('#modal-asiento-ordenp-component');
            this.$modalFp = this.$('#modal-asiento-facturap-component');
            this.$modalIn = this.$('#modal-inventario-component');
            this.$modalCt = this.$('#modal-asiento-cartera-component');

            // Collection cuotas
            this.cuotasFPList = new app.CuotasFPList();
			// Collection item rollo
            this.itemRolloINList = new app.ItemRolloINList();
            // Collection series producto
			this.productoSeriesINList = new app.ProductoSeriesINList();

			// Events Listeners
            this.listenTo( this.cuotasFPList, 'reset', this.addAllCuotasFacturap );
            this.listenTo( this.itemRolloINList, 'reset', this.addAllItemRolloInventario );

            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.collection, 'sync', this.responseServer );
        },

        /*
        * Render View Element
        */
        render: function() {
    		this.runAction();
		},

    	/**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

		/**
        * Run actions
        */
        runAction: function( ) {
            var resp = this.evaluateNextAction(),
        		_this = this,
	            stuffToDo = {
	                'facturap' : function() {
	                    _this.$modalFp.find('.content-modal').empty().html( _this.templateFacturap( _this.parameters.data ) );

	                    // Reference facturap
	                   	_this.referenceFacturap();

	                },

                    'cartera' : function() {
                        _this.$modalCt.find('.content-modal').empty().html( _this.templateCartera( _this.parameters.data ) );

                        // Reference cartera
                        _this.referenceCartera();
                    },

	                'ordenp' : function() {
                        _this.$modalOp.find('.content-modal').empty().html( _this.templateOrdenp( _this.parameters.data ) );
                        // Reference ordenp
                        _this.referenceOrdenp();
                    },

                    'inventario' : function() {
                        _this.$modalIn.find('.content-modal').empty().html( _this.templateInventario( _this.parameters.data ) );
	                 	// Reference inventario
	            		_this.referenceInventario();
	                },

	                'store' : function() {
                        _this.onStoreItem();
	                }
	            };

            if (stuffToDo[resp.action]) {
                stuffToDo[resp.action]();
            }
        },

        /**
        * Evaluate first action account
        */
        evaluateNextAction: function() {
            var index;
            for (index = this.parameters.actions.length - 1; index >= 0; --index) {
                action = this.parameters.actions[index];

                if(action.success == false) {
                    return action;
                }
            }

            return { action :'store' };
        },

        /**
        * Set success action
        */
        setSuccessAction: function(action) {
            var index;
            for (index = this.parameters.actions.length - 1; index >= 0; --index) {
                item = this.parameters.actions[index];

                if(item.action == action) {
                    item.success = true;
                }
            }
        },

        /**
        * is last action
        */
        isLastAction: function(action) {
            var index;
            for (index = this.parameters.actions.length - 1; index >= 0; --index) {
                item = this.parameters.actions[index];

                if(item.success == false && item.action != action) {
                    return false;
                }
            }
            return true;
        },

        /**
        * Validate action item asiento2 (facturap, ordenp, inventario)
        */
        validateAction: function ( options ) {

            options || (options = {});

            var defaults = {
                    'callback': null,
                    'action': null
                },
                data = {},
                settings = {}
                _this = this;

            settings = $.extend({}, defaults, options);

            // Prepare global data
            data.action = settings.action;
            data = $.extend({}, this.parameters.data, data);

            // Validate action
            $.ajax({
                url: window.Misc.urlFull(Route.route('asientos.detalle.validate')),
                type: 'POST',
                data: data,
                beforeSend: function() {
                    window.Misc.setSpinner( _this.$wraper );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.$wraper );

                if(!_.isUndefined(resp.success)) {
                    // response success or error
                    var text = resp.success ? '' : resp.errors;
                    if( _.isObject( resp.errors ) ) {
                        text = window.Misc.parseErrors(resp.errors);
                    }

                    if( !resp.success ) {
                        alertify.error(text);
                        return;
                    }

                    // return callback
                    if( ({}).toString.call(settings.callback).slice(8,-1) === 'Function' )
                        settings.callback( resp );
                }

            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( settings.wrap );
                alertify.error(thrownError);
            });
        },

        /**
        * Reference facturap
        */
        referenceFacturap: function( ) {
        	var _this = this;

            this.$wraper = this.$('#modal-asiento-wrapper-facturap');
            this.$wraperFormFp = this.$('#content-invoice');
            this.$wraperErrorFp = this.$('#error-eval-facturap');

            // Hide errors
            this.$wraperErrorFp.hide().empty();

            // Open modal
            this.$modalFp.modal('show');
        },

        /**
        * Reference cartera
        */
        referenceCartera: function( ) {
            var _this = this;

            this.$wraper = this.$('#modal-asiento-wrapper-cartera');
            this.$wraperFormCt = this.$('#content-cartera');
            this.$wraperErrorCt = this.$('#error-eval-cartera');

            // Hide errors
            this.$wraperErrorCt.hide().empty();

            // Open modal
            this.$modalCt.modal('show');
        },


        /**
        * Reference orden
        */
        referenceOrdenp: function( ) {
            var _this = this;

            this.$wraper = this.$('#modal-asiento-wrapper-ordenp');
            this.$wraperFormOp = this.$modalOp.find('.content-modal');
            this.$wraperErrorOp = this.$('#error-search-orden-asiento2');

            // Hide errors
            this.$wraperErrorOp.hide().empty();

            // Open modal
            this.$modalOp.modal('show');
        },

        /**
        * Reference inventario
        */
        referenceInventario: function( ) {
            var _this = this;

            this.$wraper = this.$('#modal-asiento-wrapper-inventario');
            this.$wraperFormIn = this.$modalIn.find('.content-modal');
            this.$wraperDetailIn = this.$modalIn.find('#content-detail-inventory');
            this.$wraperErrorIn = this.$('#error-inventario-asiento2');

            this.$inputInProducto = this.$('#producto_codigo');
            this.$inputInUnidades = this.$('#movimiento_cantidad');
            this.$inputInSucursal = this.$('#movimiento_sucursal');

            // Hide errors
            this.$wraperErrorIn.hide().empty();

            // Open modal
            this.$modalIn.modal('show');
        },

        /**
        * Event add item ordenp
        */
        onStoreItemOrdenp: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                this.parameters.data = $.extend({}, this.parameters.data, window.Misc.formToJson( e.target ));

                // Evaluate account
                this.validateAction({
                    'action': 'ordenp',
                    'callback': (function (_this) {
                        return function ( resp )
                        {
                            if(resp.success) {
                                // Set action success
                                _this.setSuccessAction('ordenp', _this.parameters.actions);

                                if( !_this.isLastAction('ordenp') ){
                                    // Close modal
                                    _this.$modalOp.modal('hide');
                                }
                                // Next action
                                _this.runAction();
                            }
                        }
                    })(this)
                });
            }
        },

        /*
        * Facturap changed
        */
        facturapChanged: function(e) {
        	// Hide errors
            this.$wraperErrorFp.hide().empty();
            // Empty Form
            this.$wraperFormFp.empty();

            // Evaluate account
            window.Misc.evaluateFacturap({
                'facturap': $(e.currentTarget).val(),
                'naturaleza': this.parameters.data.asiento2_naturaleza,
                'tercero': this.parameters.data.tercero_nit,
                'wrap': this.$wraperFormFp,
                'callback': (function (_this) {
                    return function ( resp )
                    {
                        if(resp.actions) {
                            // stuffToDo Response success
                            var stuffToDo = {
                                'add' : function() {
                                    // AddFacturapView
                                    _this.$wraperFormFp.html( _this.templateAddFacturap( ) );
                                    _this.ready();
                                },
                                'quota' : function() {
                                    // QuotaFacturapView
                                    _this.$wraperFormFp.html( _this.templateCuotasFacturap( ) );
                                    _this.$wraperCuotasFp = _this.$('#browse-rfacturap2-list');

                                    // Get cuotas list
                                    _this.cuotasFPList.fetch({ reset: true, data: { facturap1: resp.facturap } });
                                }
                            };

                            if (stuffToDo[resp.action]) {
                                stuffToDo[resp.action]();
                            }

                        }else{
                            // No actions
                            if(!_.isUndefined(resp.message) && !_.isNull(resp.message) && resp.message != '') {
                                _this.$wraperErrorFp.empty().append(resp.message);
                                _this.$wraperErrorFp.show();
                            }
                        }
                    }
                })(this)
            });
        },

        /**
        * Render view task by model
        * @param Object Facturap2Model Model instance
        */
        addOneCuotaFacturap: function (Facturap2Model) {
            var view = new app.CuotasFPListView({
                model: Facturap2Model
            });

            this.$wraperCuotasFp.append( view.render().el );

            this.ready();
        },

        /**
        * Render all view tast of the collection
        */
        addAllCuotasFacturap: function () {
            this.cuotasFPList.forEach( this.addOneCuotaFacturap, this );
        },

        /**
        * Event add item facturap
        */
        onStoreItemFacturap: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                this.parameters.data = $.extend({}, this.parameters.data, window.Misc.formToJson( e.target ));

                // Evaluate account
                this.validateAction({
                    'action': 'facturap',
                    'callback': (function (_this) {
                        return function ( resp )
                        {
                            if(resp.success) {
                                // Set action success
                                _this.setSuccessAction('facturap', _this.parameters.actions);

                                if( !_this.isLastAction('facturap') ){
                                    // Close modal
                                    _this.$modalFp.modal('hide');
                                }

                                // Next action
                                _this.runAction();
                            }
                        }
                    })(this)
                });
            }
        },

        /**
        * Render view task by model
        * @param Object ItemRolloModel Model instance
        */
        addOneItemRolloInventario: function (ItemRolloModel, choose) {
            choose || (choose = false);

            var view = new app.ItemRolloINListView({
                model: ItemRolloModel,
                parameters: {
                    choose: choose

                }
            });

            this.$wraperItemRollo.append( view.render().el );

            this.ready();
        },

        /**
        * Render all view tast of the collection
        */
        addAllItemRolloInventario: function () {
            var _this = this;
            this.itemRolloINList.forEach(function(model, index) {
                _this.addOneItemRolloInventario(model, true)
            });
        },

        /**
        * Render view task by model
        * @param Object Producto Model instance
        */
        addOneSerieInventario: function (ProductoModel) {
            var view = new app.ProductoSeriesINListView({
                model: ProductoModel
            });

            this.$wraperSeries.append( view.render().el );

            this.ready();
        },

        /*
        * Evaluar producto inventario
        */
        evaluateProductoInventario: function(e) {
            var _this = this,
                producto = this.$inputInProducto.val(),
                sucursal = this.$inputInSucursal.val(),
                unidades = this.$inputInUnidades.val();

            // Empty wrapper detail
            this.$wraperDetailIn.empty();

            if(producto && sucursal && unidades)
            {
                // Search producto
                $.ajax({
                    url: window.Misc.urlFull( Route.route('productos.search') ),
                    type: 'GET',
                    data: { producto_codigo: producto },
                    beforeSend: function() {
                        _this.$wraperErrorIn.hide().empty();
                        window.Misc.setSpinner( _this.$wraperFormIn );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.$wraperFormIn );

                    if(resp.success) {
                        if(!resp.producto_unidades) {
                            // Unidades
                            _this.$wraperErrorIn.empty().append( 'No es posible realizar movimientos para productos que no manejan unidades' );
                            _this.$wraperErrorIn.show();
                            return;

                        }else if( resp.producto_metrado ){
                            // Metrado
                            if(_this.parameters.data.asiento2_naturaleza == 'D') {
                                // Items rollo view
                                _this.$wraperDetailIn.html( _this.templateAddItemRollo( ) );
                                _this.$wraperItemRollo = _this.$('#browse-itemtollo-list');

                                var item = 1;
                                for (; item <= unidades; item++) {
                                    _this.addOneItemRolloInventario( new app.ItemRolloModel({ id: item }) )
                                }

                            }else{
                                // Items rollo view
                                _this.$wraperDetailIn.html( _this.templateChooseItemsRollo( ) );
                                _this.$wraperItemRollo = _this.$('#browse-chooseitemtollo-list');

                                // Get item rollo list
                                _this.itemRolloINList.fetch({ reset: true, data: { producto: resp.id, sucursal: sucursal } });
                            }
                        }else if( resp.producto_serie ){
                            // Series
                            if(_this.parameters.data.asiento2_naturaleza == 'D') {
                                // Items series view
                                _this.$wraperDetailIn.html( _this.templateAddSeries( ) );
                                _this.$wraperSeries = _this.$('#browse-series-list');

                                var item = 1;
                                for (; item <= unidades; item++) {
                                    _this.addOneSerieInventario( new app.ProductoModel({ id: item }) )
                                }

                            }
                        }
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    _this.$wraperErrorIn.empty().append( thrownError );
                    _this.$wraperErrorIn.show();
                });
            }
        },

        /**
        * Event add item inventario
        */
        onStoreItemInventario: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                this.parameters.data = $.extend({}, this.parameters.data, window.Misc.formToJson( e.target ));

                // Evaluate account
                this.validateAction({
                    'action': 'inventario',
                    'callback': (function (_this) {
                        return function ( resp )
                        {
                            if(resp.success) {
                                // Set action success
                                _this.setSuccessAction('inventario', _this.parameters.actions);

                                if( !_this.isLastAction('inventario') ){
                                    // Close modal
                                    _this.$modalIn.modal('hide');
                                }

                                // Inventario modifica valor item asiento por el valor del costo del movimiento
                                if(!_.isUndefined(resp.asiento2_valor) && !_.isNull(resp.asiento2_valor) && resp.asiento2_valor != _this.parameters.data.asiento2_valor) {
                                    _this.parameters.data.asiento2_valor = resp.asiento2_valor;
                                }

                                // Next action
                                _this.runAction();
                            }
                        }
                    })(this)
                });
            }
        },

        /*
        * Factura nueva cartera changed
        */
        facturaNuevaChanged: function(e) {
            // Hide errors
            this.$wraperErrorCt.hide().empty();
            // Empty Form
            this.$wraperFormCt.empty();

            if($(e.currentTarget).val() == 'N') {
                this.$wraperFormCt.html( this.templateAddFactura( ) );
            }else{
                this.$wraperFormCt.html( this.templateCuotasFactura( ) );
            }

            this.ready();
        },

        /**
        * Event add item Asiento Cuentas
        */
        onStoreItem: function (e) {
            // Model exist
            if( this.model.id != undefined ) {
                // Insert item
                this.collection.trigger( 'store', this.parameters.data );
            }else{
                // Create model
                this.model.save( this.parameters.data, {patch: true, silent: true} );
            }
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            if(!_.isUndefined(resp.success)) {
                if( resp.success ) {
                    // Close modals
                    this.$modalOp.modal('hide');
                    this.$modalIn.modal('hide');
                    this.$modalFp.modal('hide');
                }
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class AsientoCuentasListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AsientoCuentasListView = Backbone.View.extend({

        el: '#browse-detalle-asiento-list',
        events: {
            'click .item-asiento2-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // References
            this.$debitos = this.$('#total-debitos');
            this.$creditos = this.$('#total-creditos');
            this.$diferencia = this.$('#total-diferencia');

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer );

            /* if was passed asiento code */
            if( !_.isUndefined(this.parameters.dataFilter.asiento) && !_.isNull(this.parameters.dataFilter.asiento) ){
                 this.confCollection.data.asiento = this.parameters.dataFilter.asiento;

                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view task by model
        * @param Object mentoringTaskModel Model instance
        */
        addOne: function (Asiento2Model) {
            var view = new app.AsientoCuentasItemView({
                model: Asiento2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            Asiento2Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view tast of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * storescuenta
        * @param form element
        */
        storeOne: function (data) {
            var _this = this

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Add model in collection
            var asiento2Model = new app.Asiento2Model();
            asiento2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }
                        
                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.collection.get(resource),
                _this = this;

            if ( model instanceof Backbone.Model ) {
                model.destroy({
                    success : function(model, resp) {
                        if(!_.isUndefined(resp.success)) {
                            window.Misc.removeSpinner( _this.parameters.wrapper );

                            if( !resp.success ) {
                                alertify.error(resp.errors);
                                return;
                            }

                            model.view.remove();
                            _this.collection.remove(model);

                            // Update total
                            _this.totalize();
                        }
                    }
                });

            }
        },

        /**
        * Render totalize debitos and creditos
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$debitos.length) {
                this.$debitos.html( window.Misc.currency(data.debitos) );
            }

            if(this.$creditos.length) {
                this.$creditos.html( window.Misc.currency(data.creditos) );
            }

            if(this.$diferencia.length) {
                this.$diferencia.html( window.Misc.currency(data.diferencia) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class AsientoCuentasItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AsientoCuentasItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-asiento2-item-tpl').html() || '') ),
        templateInfo: _.template( ($('#show-info-asiento2-tpl').html() || '') ),
        templateInfoInsumo: _.template( ($('#show-info-asiento2-movimientos-insumo-tpl').html() || '') ),

        events: {
            'click .item-asiento2-show-info': 'showInfo'
        },
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.$modalInfo = $('#modal-asiento-show-info-component');
            this.asientoMovimientosList = new app.AsientoMovimientosList();

            // Events Listener
            this.listenTo( this.model, 'change', this.render );

            this.listenTo( this.asientoMovimientosList, 'request', this.loadSpinner );
            this.listenTo( this.asientoMovimientosList, 'sync', this.responseServer );
            this.listenTo( this.asientoMovimientosList, 'reset', this.addAll );
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;

            this.$el.html( this.template(attributes) );

            return this;
        },

        /**
        * Show info asiento
        */
        showInfo: function () {
            var attributes = this.model.toJSON();

            // Render info
            this.$modalInfo.find('.content-modal').empty().html( this.templateInfo( attributes ) );

            this.$wrapperList = this.$modalInfo.find('#browse-showinfo-asiento-list');
            this.$wrapperInsumo = this.$modalInfo.find('#browse-showinfo-asiento-insumo');

            // Get movimientos list
            this.asientoMovimientosList.fetch({ reset: true, data: { asiento2: this.model.get('id') } });

            // Open modal
            this.$modalInfo.modal('show');
        },

        /**
        * Render view task by model
        * @param Object mentoringTaskModel Model instance
        */
        addOne: function (AsientoMovModel) {
            // var attributes = AsientoMovModel.toJSON();

            // if( $.inArray( AsientoMovModel.get('movimiento_tipo'), ['IP'] ) != -1 ) {
            //     this.$wrapperInsumo.empty().html(  this.templateInfoInsumo( attributes ) );

            // }else if( $.inArray( AsientoMovModel.get('movimiento_tipo'), ['IH', 'FP'] ) != -1 ) {
                var view = new app.AsientoMovimientosItemView({
                    model: AsientoMovModel,
                });

                this.$wrapperList.append( view.render().el );
            // }
        },

        /**
        * Render all view tast of the collection
        */
        addAll: function () {
            this.asientoMovimientosList.forEach( this.addOne, this );
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.$wrapperList );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.$wrapperList );
        }
    });

})(jQuery, this, this.document);
/**
* Class AsientoMovimientosItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AsientoMovimientosItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#show-info-asiento2-movimientos-tpl').html() || '') ),

        /**
        * Constructor Method
        */
        initialize: function() {
            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateAsientoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateAsientoView = Backbone.View.extend({

        el: '#asientos-create',
        template: _.template( ($('#add-asiento-tpl').html() || '') ),
        templateFp: _.template( ($('#add-rfacturap-tpl').html() || '') ),
        events: {
            'change select#asiento1_documento': 'documentoChanged',
            'change input#asiento2_base': 'baseChanged',
            'submit #form-asientos': 'onStore',
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$modalFactura = $('#modal-facturap-component');
            this.$wraperForm = this.$('#render-form-asientos');

            this.asientoCuentasList = new app.AsientoCuentasList();

            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            attributes.edit = false;
            this.$wraperForm.html( this.template(attributes) );

            this.$numero = this.$('#asiento1_numero');
            this.$form = this.$('#form-asientos');
            this.$formItem = this.$('#form-item-asiento');
            this.$inputTasa = this.$("#asiento2_tasa");
            this.$inputValor = this.$("#asiento2_valor");
            this.$inputBase = this.$("#asiento2_base");

            // Reference views
            this.referenceViews();

            // to fire plugins
            this.ready();
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle asiento list
            this.cuentasListView = new app.AsientoCuentasListView({
                collection: this.asientoCuentasList,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'asiento': this.model.get('id')
                    }
                }
            });
        },

        documentoChanged: function(e) {
            var _this = this,
                documento = $(e.currentTarget).val();

            // Clear numero
            _this.$numero.val('');

            if(!_.isUndefined(documento) && !_.isNull(documento) && documento != '') {
                $.ajax({
                    url: window.Misc.urlFull(Route.route('documentos.show', { documentos: documento })),
                    type: 'GET',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.el );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.el );
                    if( _.isObject( resp ) ) {
                        if(!_.isUndefined(resp.documento_tipo_consecutivo) && !_.isNull(resp.documento_tipo_consecutivo)) {
                            _this.$numero.val(resp.documento_consecutivo + 1);
                            if(resp.documento_tipo_consecutivo == 'M') {
                                _this.$numero.prop('readonly', false);
                            }else if (resp.documento_tipo_consecutivo == 'A'){
                                _this.$numero.prop('readonly', true);
                            }
                        }
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.el );
                    alertify.error(thrownError);
                });
            }
        },

        /**
        * Event Create Cuenta
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                var data = window.Misc.formToJson( e.target );
                data.asiento1_id = this.model.get('id');

                // Definir tercero
                data.tercero_nit = data.tercero_nit ? data.tercero_nit : data.asiento1_beneficiario;
                data.tercero_nombre = data.tercero_nombre ? data.tercero_nombre : data.asiento1_beneficiario_nombre;

                window.Misc.evaluateActionsAccount({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( actions )
                        {
                            if( Array.isArray( actions ) && actions.length > 0 ) {
                                // Open AsientoActionView
                                if ( _this.asientoActionView instanceof Backbone.View ){
                                    _this.asientoActionView.stopListening();
                                    _this.asientoActionView.undelegateEvents();
                                }

                                _this.asientoActionView = new app.AsientoActionView({
                                    model: _this.model,
                                    collection: _this.asientoCuentasList,
                                    parameters: {
                                        data: data,
                                        actions: actions
                                    }
                                });
                                _this.asientoActionView.render();
                            }else{
                                // Default insert
                                _this.model.save( data, {patch: true, silent: true} );
                            }
                        }
                    })(this)
                });
            }
        },

        /**
        * Change base
        */
        baseChanged: function(e) {
            var _this = this;

            var tasa = this.$inputTasa.val();
            var base = this.$inputBase.inputmask('unmaskedvalue');

            // Set valor
            if(!_.isUndefined(tasa) && !_.isNull(tasa) && tasa > 0) {
                this.$inputValor.val( (tasa * base) / 100 );
            }else{
                // Case without plancuentas_tasa
                this.$inputValor.val('');
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // FacturapView undelegateEvents
                if ( this.createFacturapView instanceof Backbone.View ){
                    this.createFacturapView.stopListening();
                    this.createFacturapView.undelegateEvents();
                }

                // Redirect to Content Course
                Backbone.history.navigate(Route.route('asientos.edit', { asientos: resp.id}), { trigger:true });
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class EditAsientoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.EditAsientoView = Backbone.View.extend({

        el: '#asientos-create',
        template: _.template( ($('#add-asiento-tpl').html() || '') ),
        templateFp: _.template( ($('#add-rfacturap-tpl').html() || '') ),
        events: {
            'change select#asiento1_documento': 'documentoChanged',
            'submit #form-item-asiento': 'onStoreItem',
            'change input#asiento2_base': 'baseChanged',
            'click .submit-asiento': 'submitAsiento',
            'submit #form-asientos': 'onStore',
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$wraperForm = this.$('#render-form-asientos');
            this.asientoCuentasList = new app.AsientoCuentasList();

            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            attributes.edit = true;
            this.$wraperForm.html( this.template(attributes) );

            this.$numero = this.$('#asiento1_numero');
            this.$form = this.$('#form-asientos');
            this.$formItem = this.$('#form-item-asiento');
            this.$inputTasa = this.$("#asiento2_tasa");
            this.$inputValor = this.$("#asiento2_valor");
            this.$inputBase = this.$("#asiento2_base");
            this.$inputDocumento = this.$("#asiento1_documento");

            // Reference views
            this.referenceViews();

            // to fire plugins
            this.ready();

            // to change document
            if(this.model.get('documento_tipo_consecutivo') == 'A'){
                this.$inputDocumento.change();
            }
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle asiento list
            this.cuentasListView = new app.AsientoCuentasListView({
                collection: this.asientoCuentasList,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'asiento': this.model.get('id')
                    }
                }
            });
        },

        documentoChanged: function(e) {
            var _this = this,
                documento = $(e.currentTarget).val();

            // Clear numero
            _this.$numero.val('');

            if(!_.isUndefined(documento) && !_.isNull(documento) && documento != '') {
                $.ajax({
                    url: window.Misc.urlFull(Route.route('documentos.show', { documentos: documento })),
                    type: 'GET',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.el );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.el );
                    if( _.isObject( resp ) ) {
                        if(!_.isUndefined(resp.documento_tipo_consecutivo) && !_.isNull(resp.documento_tipo_consecutivo)) {
                            _this.$numero.val(resp.documento_consecutivo + 1);
                            if(resp.documento_tipo_consecutivo == 'M') {
                                _this.$numero.prop('readonly', false);
                            }else if (resp.documento_tipo_consecutivo == 'A'){
                                _this.$numero.prop('readonly', true);
                            }
                        }
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.el );
                    alertify.error(thrownError);
                });
            }
        },

        /**
        * Event submit Asiento
        */
        submitAsiento: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Cuenta
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * Event add item Asiento Cuentas
        */
        onStoreItem: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                var data = window.Misc.formToJson( e.target );
                data.asiento1_id = this.model.get('id');

                // Definir tercero
                data.tercero_nit = data.tercero_nit ? data.tercero_nit : this.model.get('tercero_nit');
                data.tercero_nombre = data.tercero_nombre ? data.tercero_nombre : this.model.get('tercero_nombre');

                // Evaluate account
                window.Misc.evaluateActionsAccount({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( actions )
                        {
                            if( Array.isArray( actions ) && actions.length > 0 ) {
                                // Open AsientoActionView
                                if ( _this.asientoActionView instanceof Backbone.View ){
                                    _this.asientoActionView.stopListening();
                                    _this.asientoActionView.undelegateEvents();
                                }

                                _this.asientoActionView = new app.AsientoActionView({
                                    model: _this.model,
                                    collection: _this.asientoCuentasList,
                                    parameters: {
                                        data: data,
                                        actions: actions
                                    }
                                });
                                _this.asientoActionView.render();
                            }else{
                                // Default insert
                                _this.asientoCuentasList.trigger( 'store', data );
                            }
                        }
                    })(this)
                });
            }
        },

        /**
        * Change base
        */
        baseChanged: function(e) {
            var _this = this;

            var tasa = this.$inputTasa.val();
            var base = this.$inputBase.inputmask('unmaskedvalue');

            // Set valor
            if(!_.isUndefined(tasa) && !_.isNull(tasa) && tasa > 0) {
                this.$inputValor.val( (tasa * base) / 100 );
            }else{
                // Case without plancuentas_tasa
                this.$inputValor.val('');
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // Redirect to show view
                window.Misc.redirect( window.Misc.urlFull( Route.route('asientos.edit', { asientos: resp.id}) ) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class CuotasFPListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CuotasFPListView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-rfacturap2-item-tpl').html() || '') ),

        /**
        * Constructor Method
        */
        initialize: function() {
            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class MainAsientosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainAsientosView = Backbone.View.extend({

        el: '#asientos-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            this.$asientosSearchTable = this.$('#asientos-search-table');

            this.$asientosSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('asientos.index') ),
                columns: [
                    { data: 'asiento1_numero', name: 'asiento1_numero' },
                    { data: 'asiento1_ano', name: 'asiento1_ano' },
                    { data: 'asiento1_mes', name: 'asiento1_mes' },
                    { data: 'tercero_nit', name: 'tercero_nit' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'tercero_razonsocial', name: 'tercero_razonsocial'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                    { data: 'asiento1_preguardado', name: 'asiento1_preguardado' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nueva asiento',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('asientos.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            if( full.asiento1_preguardado && parseInt(full.asiento1_preguardado) ) {
                                return '<a href="'+ window.Misc.urlFull( Route.route('asientos.edit', {asientos: full.id }) )  +'">' + data + ' <span class="label label-warning">PRE</span></a>';
                            }else{
                                return '<a href="'+ window.Misc.urlFull( Route.route('asientos.show', {asientos: full.id }) )  +'">' + data + '</a>';
                            }
                        }
                    },
                    {
                        targets: [1, 2],
                        width: '10%'
                    },
                    {
                        targets: 3,
                        width: '15%'
                    },
                    {
                        targets: 4,
                        searchable: false
                    },
                    {
                        targets: [5, 6, 7, 8, 9],
                        visible: false
                    },
                    {
                        targets: 10,
                        visible: false,
                        searchable: false
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class ShowAsientoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowAsientoView = Backbone.View.extend({

        el: '#asientos-show',

        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {
             
                this.asientoCuentasList = new app.AsientoCuentasList();

                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle asiento list
            this.cuentasListView = new app.AsientoCuentasListView({
                collection: this.asientoCuentasList,
                parameters: {
                    wrapper: this.el,
                    dataFilter: {
                        'asiento': this.model.get('id')
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateAutorizacionCaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateAutorizacionCaView = Backbone.View.extend({

        el: '#autorizacionesca-create',
        template: _.template(($('#add-autorizaca-tpl').html() || '') ),
        events: {
            
            'submit #form-autorizaca' :'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-autorizacionesca');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
        },


        /*
        * Render View Element
        */
        render: function() {
                        
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready(); 
        },

        /**
        * Event Create Ajuste
        */
        onStore: function (e) {
            
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }   
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('autorizacionesca.show', { autorizacionesca: resp.id})) );
        }
    });

})(jQuery, this, this.document);

/**
* Class MainAutorizacionesCaView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainAutorizacionesCaView = Backbone.View.extend({

        el: '#autorizacionesca-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$ajustesSearchTable = this.$('#autorizacionesca-search-table');
            
            this.$ajustesSearchTable.DataTable({
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('autorizacionesca.index') ),
                columns: [ 
                    { data: 'id', name: 'id' },
                    { data: 'autorizaca_tercero', name: 'autorizaca_tercero' },
                    { data: 'autorizaca_vencimiento', name: 'autorizaca_vencimiento' },
                    { data: 'autorizaca_plazo', name: 'autorizaca_plazo' },
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('autorizacionesca.show', {autorizacionesca: full.id }) )  +'">' + data + '</a>';
                        },
                       
                    }, 
                ]
            });
        }
    });
})(jQuery, this, this.document);


/**
* Class CreateBancoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateBancoView = Backbone.View.extend({

        el: '#banco-create',
        template: _.template( ($('#add-banco-tpl').html() || '') ),
        events: {
            'submit #form-banco': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-banco');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('bancos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainBancosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainBancosView = Backbone.View.extend({

        el: '#bancos-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$bancosSearchTable = this.$('#bancos-search-table');

            this.$bancosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('bancos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'banco_nombre', name: 'banco_nombre' },
                    { data: 'banco_activo', name: 'banco_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo banco',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('bancos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('bancos.show', {bancos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateCategoriaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateCategoriaView = Backbone.View.extend({

        el: '#categoria-create',
        template: _.template( ($('#add-categoria-tpl').html() || '') ),
        events: {
            'submit #form-categoria': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-categoria');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('categorias.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainCategoriasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainCategoriasView = Backbone.View.extend({

        el: '#categorias-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$marcasSearchTable = this.$('#categorias-search-table');

            this.$marcasSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('categorias.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'categoria_nombre', name: 'categoria_nombre' },
                    { data: 'categoria_activo', name: 'categoria_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva categoría',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('categorias.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('categorias.show', {categorias: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateCausaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateCausaView = Backbone.View.extend({

        el: '#causal-create',
        template: _.template( ($('#add-causa-tpl').html() || '') ),
        events: {
            'submit #form-causal': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-causal');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('causas.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainCausasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainCausasView = Backbone.View.extend({

        el: '#causas-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$causasSearchTable = this.$('#causas-search-table');

            this.$causasSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('causas.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'causal_nombre', name: 'causal_nombre' },
                    { data: 'causal_activo', name: 'causal_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo causa',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('causas.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('causas.show', {causas: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateCentroCostoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateCentroCostoView = Backbone.View.extend({

        el: '#centrocosto-create',
        template: _.template( ($('#add-centrocosto-tpl').html() || '') ),
        events: {
            'submit #form-centrocosto': 'onStore'
        },
        parameters: {
            callback : ''
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {      
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
            
            // Attributes 
            this.msgSuccess = 'Centro de costo guardado con exito!'; 
            this.$wraperForm = this.$('#render-form-centrocosto');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Forum Post
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
            
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );                
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();  
        },
        
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // stuffToDo Callback
                var _this = this,
                    stuffToDo = {
                        'toShow' : function() {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('centroscosto.show', { centroscosto: resp.id})) );            
                        },

                        'default' : function() {
                            alertify.success(_this.msgSuccess);
                        }
                    };

                if (stuffToDo[this.parameters.callback]) {
                    stuffToDo[this.parameters.callback]();
                } else {
                    stuffToDo['default']();
                }
            }
        }
    });

})(jQuery, this, this.document);
/**
* Class MainCentrosCostoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainCentrosCostoView = Backbone.View.extend({

        el: '#centroscosto-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$centroscostoSearchTable = this.$('#centroscosto-search-table');

            this.$centroscostoSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('centroscosto.index') ),
                columns: [
                    { data: 'centrocosto_codigo', name: 'centrocosto_codigo' },
                    { data: 'centrocosto_centro', name: 'centrocosto_centro' },
                    { data: 'centrocosto_nombre', name: 'centrocosto_nombre' },
                    { data: 'centrocosto_estructura', name: 'centrocosto_estructura' },
                    { data: 'centrocosto_activo', name: 'centrocosto_activo' }
                ],
				buttons: [
					{ 
						text: '<i class="fa fa-user-plus"></i> Nuevo centro de costo',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('centroscosto.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('centroscosto.show', {centroscosto: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 3,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) == 'S' ? 'Si' : 'No';
                        }
                    },
                    {
                        targets: [4],
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        }
                    },
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateChequesView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateChequesView = Backbone.View.extend({

        el: '#cheque-create',
        template: _.template(($('#add-cheques-tpl').html() || '') ),

        events: {
            'click .submit-cheque1' : 'submitForm',
            'submit #form-cheque1' : 'onStore',
            'change .change-concepto' : 'changeConcepto',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {

            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
           
            // Attributes
            this.$wraperForm = this.$('#render-form-cheque');

            this.detalleChposFechado = new app.DetalleChposFechadoList();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
            
            this.ready(); 
        },

        /*
        * Render View Element
        */
        render: function() {
            
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-cheque1');

            this.referenceView();
        },
        /**
        * Event submit cheque
        */
        submitForm: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create cheques
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                    data.detalle = this.detalleChposFechado.toJSON();
                this.model.save( data, {patch: true, silent: true} );
            }   
        },  
        /**
        * Reference view collection
        */
        referenceView:function(){

          //DetalleChequesList
            this.detalleChequesView = new app.DetalleChequesView( {
                collection: this.detalleChposFechado,
                parameters: {
                    wrapper: this.$('#detail-chposfechado'),
                    edit: true,
                    dataFilter: {
                        'chposfechado2': this.model.get('id')
                    }
               }
            });
        },

        changeConcepto:function(e){
            var data = window.Misc.formToJson( e.target );
                data.tercero = this.$(e.currentTarget).attr('data-tercero');
                data.call = 'chposfechado';

            if( !_.isUndefined(data.chposfechado2_conceptosrc) && !_.isNull(data.chposfechado2_conceptosrc) && data.chposfechado2_conceptosrc != ''){
                window.Misc.evaluateActionsCartera({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action )
                        {      
                            // Open CarteraActionView
                            if ( _this.carteraActionView instanceof Backbone.View ){
                                _this.carteraActionView.stopListening();
                                _this.carteraActionView.undelegateEvents();
                            }

                            _this.carteraActionView = new app.CarteraActionView({
                                model: _this.model,
                                collection: _this.detalleChposFechado,
                                parameters: {
                                    data: data,
                                    action: action,
                                }
                            });
                            _this.carteraActionView.render();
                        }
                    })(this)
                });
            }
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('cheques.show', { cheques: resp.id})) );
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleChequeItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleChequeItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: null,
        parameters: {
            edit: false,
            call:false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            this.template = _.template( ($( !this.parameters.call ? '#add-cheque-item-tpl' : '#choose-cheque-item-tpl' ).html() || '') );
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class DetalleChequesView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleChequesView = Backbone.View.extend({

        el: '#browse-cheque-list',
        events: {
            'click .item-cheque-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.parameters.wrapper

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$valor = this.$('#total');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.chposfechado2) && !_.isNull(this.parameters.dataFilter.chposfechado2) ){
                this.confCollection.data.chposfechado2 = this.parameters.dataFilter.chposfechado2;
                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view contact by model
        * @param Object detalleReciboModel Model instance
        */
        addOne: function (chposfechado2) {
            var view = new app.DetalleChequeItemView({
                model: chposfechado2,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            chposfechado2.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores cheque
        * @param form element
        */
        storeOne: function ( data ) {    
            var _this = this;

            if( !_.isUndefined(data.factura3_id) ){
                var valid = this.collection.validar(data);
                if(!valid.success){
                    this.totalize();
                    return;
                }
            }
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Add model in collection
            var chposfechado2 = new app.ChposFechado2Model();
            chposfechado2.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
                
                // Update total
                this.totalize();
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$valor.length) {
                this.$valor.html( window.Misc.currency(data.valor) );
            }
            $('#chposfechado1_valor').val(data.valor);
            $('#chposfechado2_conceptosrc').val('').trigger('change.select2');
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( model, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });
})(jQuery, this, this.document);

/**
* Class MainChequesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainChequesView = Backbone.View.extend({

        el: '#cheques-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$chequesSearchTable = this.$('#cheques-search-table');
            
            this.$chequesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('cheques.index') ),
                columns: [ 
                    { data: 'chposfechado1_ch_numero', name: 'chposfechado1_ch_numero' },
                    { data: 'banco_nombre', name: 'chposfechado1_banco' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'tercero_nombre', name: 'chposfechado1_tercero' },
                    { data: 'chposfechado1_fecha', name: 'chposfechado1_fecha' },
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo cheque posfechado',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('cheques.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('cheques.show', {cheques: full.id }) )  +'">' + data + '</a>';
                        },
                    },
                    {
                        targets: [5,6,7,8],
                        visible: false
                    }
                ]
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ShowChequeView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowChequeView = Backbone.View.extend({

        el: '#content-show',

        events:{
            'click .devolver-cheque': 'devolverCheque',
            'click .anular-cheque': 'anularCheque',
            'submit #form-causal-choise': 'onStoreChequeDevuelto'
        },
        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {
                
                this.detalleChposFechado = new app.DetalleChposFechadoList();

                // Prepare modal causa
                this.$modal = this.$('#modal-causa');


                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            //detalleChequesView
            this.detalleChequesView = new app.DetalleChequesView( {
                collection: this.detalleChposFechado,
                parameters: {
                    wrapper: this.$('#detail-chposfechado'),
                    edit: false,
                    dataFilter: {
                        'chposfechado2': this.model.get('id')
                    }
               }
            });
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
        },
        /**
        *
        */
        anularCheque: function(e){
            e.preventDefault();
            var _this = this;
            var anularConfirm = new window.app.ConfirmWindow({
                parameters: {
                    dataFilter: { id: _this.model.get('id') },
                    template: _.template( ($('#cheque-anular-confirm-tpl').html() || '') ),
                    titleConfirm: 'Anular cheque posfechado',
                    onConfirm: function () {
                        // Anular cheque
                        $.ajax({
                            url: window.Misc.urlFull( Route.route('cheques.anular', { cheques: _this.model.get('id') }) ),
                            type: 'GET',
                            beforeSend: function() {
                                window.Misc.setSpinner( _this.el );
                            }
                        })
                        .done(function(resp) {
                            window.Misc.removeSpinner( _this.el );

                            if(!_.isUndefined(resp.success)) {
                                // response success or error
                                var text = resp.success ? '' : resp.errors;
                                if( _.isObject( resp.errors ) ) {
                                    text = window.Misc.parseErrors(resp.errors);
                                }

                                if( !resp.success ) {
                                    alertify.error(text);
                                    return;
                                }

                                window.Misc.successRedirect( resp.msg, window.Misc.urlFull(Route.route('cheques.show', { cheques: _this.model.get('id') })) );
                            }
                        })
                        .fail(function(jqXHR, ajaxOptions, thrownError) {
                            window.Misc.removeSpinner( _this.el );
                            alertify.error(thrownError);
                        });
                    }
                }
            });
            anularConfirm.render();
        },
        /*
        *
        */
        devolverCheque: function(e){
            e.preventDefault();
            var _this = this;
            var anularConfirm = new window.app.ConfirmWindow({
                parameters: {
                    dataFilter: { id: _this.model.get('id') },
                    template: _.template( ($('#cheque-devolver-confirm-tpl').html() || '') ),
                    titleConfirm: 'Devolver cheque posfechado',
                    onConfirm: function () {
                        _this.templateCausal = _.template(($('#koi-select-causa').html() || '') );
                        _this.$modal.find('.inner-title-modal').html('Causal devolucion cheque');
                        _this.$modal.find('.content-modal').empty().html( _this.templateCausal() );
                        _this.$modal.modal('show');
                        _this.ready();

                    }
                }
            });
            anularConfirm.render();
        },
        /*
        *
        */
        onStoreChequeDevuelto: function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var _this = this;
                var data =  window.Misc.formToJson( e.target );
                    data.id = this.model.get('id');
                // Devolver cheque
                $.ajax({
                    url: window.Misc.urlFull( Route.route('chequesdevueltos.store') ),
                    data: data,
                    type: 'POST',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.el );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.el );

                    if(!_.isUndefined(resp.success)) {
                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }
                        _this.$modal.modal('hide');
                        window.Misc.successRedirect( resp.msg, window.Misc.urlFull(Route.route('cheques.show', { cheques: _this.model.get('id') })) );
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.el );
                    alertify.error(thrownError);
                });
            }
        }
    });
})(jQuery, this, this.document);

/**
* Class MainChequesDevueltosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainChequesDevueltosView = Backbone.View.extend({

        el: '#chequesdevueltos-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$chequesdevueltosSearchTable = this.$('#chequesdevueltos-search-table');
            
            this.$chequesdevueltosSearchTable.DataTable({
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('chequesdevueltos.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [ 
                    { data: 'id', name: 'id' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'banco_nombre', name: 'chposfechado1_banco' },
                    { data: 'tercero_nombre', name: 'chposfechado1_tercero' },
                    { data: 'chdevuelto_fecha', name: 'chdevuelto_fecha' },
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                ],
                columnDefs: [
                    {
                        targets: 0,
                        searchable: false,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('chequesdevueltos.show', {chequesdevueltos: full.id }) )  +'">' + data + '</a>';
                        },
                    },
                    {
                        targets: [5,6,7,8],
                        visible: false
                    }
                ]
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ComponentAddressView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentAddressView = Backbone.View.extend({

      	el: 'body',
        template: _.template( ($('#koi-address-component-tpl').html() || '') ),
        templateSelect: _.template( ($('#koi-component-select-tpl').html() || '') ),
		events: {
        	'focus input.address-koi-component': 'addressChanged',
            'click .btn-address-koi-component': 'focusComponent',
            'submit #form-address-component': 'addAddress',
            'change #component-select': 'ChangeSelect',
            'click .koi-component-remove-last': 'removeLastItem',
            'click .koi-component-remove': 'removeItem',
            'click .koi-component-add': 'listeningAddress'
        },

        /**
        * Constructor Method
        */
        initialize: function() {
            // Initialize
            this.$modalComponent = this.$('#modal-address-component');
            this.$modalComponentValidacion = this.$('#modal-address-component-validacion');
        },

        focusComponent: function(e) {
            $("#"+$(e.currentTarget).attr("data-field")).focus();
        },

        addressChanged: function(e) {
            this.inputContent = $(e.currentTarget);
            this.inputContentNm = this.$("#"+this.inputContent.attr("data-nm-name"));
            this.inputContentNmValue = this.$("#"+this.inputContent.attr("data-nm-value"));

            this.$modalComponent.find('.content-modal').html( this.template({ }) );

            // References
            this.$addressField = this.$modalComponent.find('#koi_direccion');
            this.$addressNomenclaturaField = this.$modalComponent.find('#koi_direccion_nm');
            this.$formComponent = this.$modalComponent.find('#form-address-component');

            // Initialize
            this.addressData = new Array();
            this.addressDataNm = new Array();
            this.num = new Array();

            // Validate nomenclaturas
            this.validaciones = ['Agencia','Agrupación','Almacen','Autopista','Avenida','Avenida Carrera','Barrio','Boulevar','Calle','Camino','Carrera','Carretera','Casa','Celula','Centro Comercial','Ciudadela','Conjunto','Conjunto Residencial','Corregimiento','Departamento','Deposito','Edificio','Entrada','Etapa','Finca','Hacienda','Lote','Modulo','Municipio','Parcela','Parque','Parqueadero','Pasaje','Paseo','Predio','Puente','Puesto','Salón','Salón Comunal','Sector','Suite','Terminal','Terraza','Torre','Unidad','Unidad Residencial','Urbanización','Variante','Vereda','Zona','Zona Franca'];

            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initAlertify == 'function' )
                window.initComponent.initAlertify();

            this.$formComponent.validator();

            // Modal show
            this.$modalComponent.modal('show');
        },

        addAddress: function(e) {
            var _this = this;
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                this.inputContent.val( this.$addressField.val() );
                this.inputContentNm.text( this.$addressNomenclaturaField.val() );
                this.inputContentNmValue.val( this.$addressNomenclaturaField.val() );
                this.$modalComponent.modal('hide');
            }
        },

        listeningAddress: function(e){  
            if( parseInt($(e.target).text().trim()) > 0 || parseInt($(e.target).text().trim()) < 9 ){
                this.num = $(e.target).text().trim();
                if( parseInt(this.addressData[this.addressData.length-1]) > 0 || parseInt(this.addressData[this.addressData.length-1]) < 9){
                    this.addressData[this.addressData.length-1] += this.num;
                    this.addressDataNm[this.addressDataNm.length-1] += this.num;
                }else{
                    this.addressData.push( this.num );
                    this.addressDataNm.push( this.num );
                }
            }else{
                this.num = [];
                if( this.addressData[this.addressData.length-1] != $(e.target).text().trim() ){
                    for (var i = 0; i < this.validaciones.length; i++) {
                        if($(e.target).text().trim() == this.validaciones[i]){
                            this.$modalComponentValidacion.find('.modal-content').html( this.templateSelect( { } ));
                            this.$modalComponentValidacion.find('.modal-title').text( $(e.target).text().trim() );
                            this.$modalComponentValidacion.modal('show');
                        }
                    }
                    
                    if($(e.target).text().trim() == '#' || $(e.target).text().trim() == '-'){
                        this.addressData.push( $(e.target).text().trim() );
                        this.addressDataNm.push( ' ' );
                    }else{
                        this.addressData.push( $(e.target).text().trim() );
                        this.addressDataNm.push( $(e.target).attr('data-key') );
                    }
                }else{
                    alertify.error('No puede seleccionar dos nomenclaturas iguales ni más de dos letras seguidas');
                }
            }
            this.buildAddress();
        },

        ChangeSelect: function(e){
            var _this = this;
            this.$component = this.$('#component-input').hide();
            var valor = '';

            if($(e.target).val() == 'si'){
                _this.$component.show();
                $('input#component-input-text').change(function(){
                    var dato = $(this).val( $(this).val().toUpperCase() );
                    var reg = /[^A-Za-z0-9&ÑñáéíóúÁÉÍÓÚ/\s/]/i;
                    for(var i=0; i <= dato.val().length-1; i++){
                        if( !reg.test(dato.val().charAt(i)) ){
                            dato.val().replace(reg,'');
                            valor += dato.val().charAt(i);
                        }
                    }

                    _this.addressData.push( valor );
                    _this.addressDataNm.push( valor );
                    _this.buildAddress();
                    _this.$modalComponentValidacion.modal('hide');
                });
            }else if($(e.target).val() == 'no'){
                _this.$modalComponentValidacion.modal('hide');
            }else{
                return false;
            }
        },

        /**
        * remove last item
        */
        removeLastItem: function(e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                this.addressData.pop();
                this.addressDataNm.pop();
                this.buildAddress();
            }
        },

        /**
        * remove item
        */
        removeItem: function(e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                this.addressData.length = 0;
                this.addressDataNm.length = 0;
                this.num.length = 0;
                this.buildAddress();
            }
        },

     	/**
        * Built address
        */
		buildAddress: function() {
            var addreess = $.grep(this.addressData, Boolean).join(' ').trim();
            this.$addressField.val( addreess );

            var addreessNm = $.grep(this.addressDataNm, Boolean).join(' ').trim();
            this.$addressNomenclaturaField.val( addreessNm );
		}
    });
})(jQuery, this, this.document);
/**
* Class AnticipoItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AnticipoItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#choose-anticipo-item-tpl').html() || '') ),
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.call = this.parameters.call;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class BitacoraView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.BitacoraView = Backbone.View.extend({

        el: '#browse-bitacora-list',
        events: {
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: {document_id: this.parameters.dataFilter.document_id , document_type: this.parameters.dataFilter.document_type}, reset: true });
            
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object bitacoraModel Model instance
        */
        addOne: function (bitacoraModel) {
            
            var view = new app.BitacoraItemView({
                model: bitacoraModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            bitacoraModel.view = view;
            this.$el.prepend( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },
    
        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class BitacoraItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.BitacoraItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-bitacora-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){

            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class CarteraActionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});
(function ($, window, document, undefined) {
    app.CarteraActionView = Backbone.View.extend({
    	el: 'body',

        template: _.template( ($('#add-concepto-factura-tpl').html() || '') ),
        templateMedioCh: _.template( ($('#add-ch-recibo-tpl').html() || '') ),
        templateChd: _.template( ($('#add-ch-devuelto-tpl').html() || '') ),
        templateAnticipo: _.template( ($('#add-anticipo-cartera-tpl').html() || '') ),
    	events:{ 
            'submit #form-concepto-cartera-component': 'onStore',
            'ifClicked .change-check': 'changeCheck',
            'ifClicked .change-check-medio': 'changeCheckMedio',
            'ifClicked .click-check-anti-koi': 'changeCheckAnti',
            'ifClicked .click-concepto-chd': 'changeCheckChd',
            'ifClicked .change-naturaleza': 'changeNaturaleza',
            'ifClicked .change-naturalezachd': 'changeNaturalezaChd',
            'ifClicked .change-naturalezaanti': 'changeNaturalezaAnti',
            'change .change-pagar': 'changePagar',
            'change .change-pagar-chd': 'changePagarChd',
            'change .change-pagar-anti': 'changePagarAnti',
        },
        parameters: {
            data: { },
        },

        /**
        * Constructor Method
        */
        initialize : function( opts ) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            if( this.parameters.data.call == 'ajustesc'){
                this.template = this.parameters.template;
            }

            this.$modal = this.$('#modal-concepto-cartera-component');
            
            // Collection 
            this.detalleFacturaList = new app.DetalleFactura3List();
            this.detalleChposFechado = new app.DetalleChposFechadoList();
            this.chDevueltoList = new app.ChDevueltoList();
            this.anticiposlist = new app.AnticiposList();

            this.$concepto = this.parameters.data.call == 'recibo' ? this.$('#recibo2_conceptosrc') : this.$('#nota1_conceptonota');

            this.listenTo( this.detalleFacturaList, 'add', this.addOne );
            this.listenTo( this.detalleFacturaList, 'reset', this.addAll );

            this.listenTo( this.detalleChposFechado, 'add', this.addOneCh );
            this.listenTo( this.detalleChposFechado, 'reset', this.addAllCh );

            this.listenTo( this.chDevueltoList, 'add', this.addOneChd );
            this.listenTo( this.chDevueltoList, 'reset', this.addAllChd );

            this.listenTo( this.anticiposlist, 'add', this.addOneAnticipo );
            this.listenTo( this.anticiposlist, 'reset', this.addAllAnticipo );

            this.ready();
        },

        /*
        * Render View Element
        */
        render: function() {
            var resp = this.parameters,
                _this = this,
                stuffToDo = {
                    'modalCartera': function() {
                        _this.$modal.find('.content-modal').empty().html( _this.template() );
                        _this.$modal.find('.modal-title').text('Facturas venta - Tercero');

                        // Reference 
                        _this.referenceFactura(resp);
                    },
                    'modalChequesDevueltos' : function(){
                        _this.$modal.find('.content-modal').empty().html( _this.templateChd( _this.parameters.data ) );
                        _this.$modal.find('.modal-title').text('Cheques devueltos - Tercero');

                        // Reference
                        _this.referenceChDevuelto(resp);
                    },
                    'modalAnticipos':function(){
                        _this.$modal.find('.content-modal').empty().html( _this.templateAnticipo( _this.parameters.data ) );
                        _this.$modal.find('.modal-title').text('Anticipos tercero');

                        // Reference
                        _this.referenceAnticipo(resp);
                    },
                    'mediopago': function(){
                        _this.$modal.find('.content-modal').empty().html( _this.templateMedioCh() );
                        _this.$modal.find('.modal-title').text('Cheques tercero -  Medio de pago');

                        // Reference 
                        _this.referenceMedioPago(resp);
                    },
                    
                };
            if (stuffToDo[resp.action]) {
                stuffToDo[resp.action]();
            }
		},
    	/**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
        },
        /**
        * onStore , hide modal 
        */

        onStore: function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Hide modal && reset select
                if(this.parameters.data.call == 'recibo'){
                    this.$concepto.val('').trigger('change');
                }else if(this.parameters.data.call == 'ajustesc'){
                    this.$('#ajustec2_documentos_doc').val('').change();
                }
                this.$modal.modal('hide');                
            }
        },

        /**
        * Reference Factura venta - Tercero
        */
        referenceFactura: function(atributes) {
            this.$wraperError = this.$('#error-concepto-cartera');
            this.$wraperConcepto = this.$('#browse-concepto-factura-list');
            this.detalleFacturaList.fetch({ reset: true, data: { tercero: atributes.data.tercero } });

            // Hide errors
            this.$wraperError.hide().empty();

            // Open modal
            this.$modal.modal('show');
        },
        /**
        * Reference ChDevuelto
        */
        referenceChDevuelto: function(attributes){
            this.$wraperChd = this.$('#browse-chd-list');
            this.$wraperError = this.$('#error-concepto-cartera');
    
            this.chDevueltoList.fetch({ reset: true, data: { tercero: attributes.data.tercero } });

            // Hide errors
            this.$wraperError.hide().empty();

            // Open modal
            this.$modal.modal('show');
        },
        /**
        * Reference Anticipo tercero
        */
        referenceAnticipo: function(attributes){
            this.$wraperAnticipo = this.$('#browse-anticipo-cartera-list');
            this.$wraperError = this.$('#error-concepto-cartera');
            this.anticiposlist.fetch({ reset: true, data: { tercero: attributes.data.tercero, sucursal:attributes.data.sucursal } });

            // Hide errors
            this.$wraperError.hide().empty();

            // Open modal
            this.$modal.modal('show');
        },
        /**
        * Reference medio de pago cheque 
        */
        referenceMedioPago: function(attributes){
            this.$wraper = this.$('#modal-wrapper-concepto-cartera');
            this.$wraperError = this.$('#error-concepto-cartera');
            this.$wraperCh = this.$('#browse-cheque-list');

            this.detalleChposFechado.fetch({ reset: true, data: { tercero: attributes.data.tercero, sucursal: attributes.data.sucursal }})

            // Hide errors
            this.$wraperError.hide().empty();

            // Open modal
            this.$modal.modal('show');
        },

        // Event change check
        changeCheck: function(e){
            var selected = this.$(e.currentTarget).prop('checked');
            var id = this.$(e.currentTarget).attr('id');
                id = id.split("_");
            if( !selected ) {
                var modelo = this.detalleFacturaList.agregar(id[1], this.parameters.data, undefined);
                this.$('#pagar_'+id[1]).val( modelo.factura3_valor );
                this.collection.trigger('store', modelo );
            }else{
                var modelo = this.detalleFacturaList.eliminar(id[1], this.parameters.data);
                this.collection.trigger('store', modelo );
                this.$('#pagar_'+id[1]).val('');
            }
              
            this.ready();
        },
        // Event change check
        changeCheckAnti: function(e){
            var selected = this.$(e.currentTarget).prop('checked');
            var id = this.$(e.currentTarget).attr('id');
                id = id.split("_");
            if( !selected ) {
                var modelo = this.anticiposlist.agregar(id[1], this.parameters.data, undefined, '');
                this.$('#pagar_'+id[1]).val( modelo.valor );
                this.collection.trigger('store', modelo );
            }else{
                var modelo = this.anticiposlist.eliminar(id[1], this.parameters.data);
                this.collection.trigger('store', modelo );
                this.$('#pagar_'+id[1]).val('');
            }
              
            this.ready();
        },
        // Event change click chd
        changeCheckChd: function(e){
            var selected = this.$(e.currentTarget).prop('checked');
            var id = this.$(e.currentTarget).attr('id');
                id = id.split("_");
            if( !selected ) {
                var modelo = this.chDevueltoList.agregar( id[1], this.parameters.data, undefined, '' );
                this.$('#pagar_'+id[1]).val( modelo.valor );
                this.collection.trigger('store', modelo );
            }else{
                var modelo = this.chDevueltoList.eliminar(id[1], this.parameters.data);
                this.collection.trigger('store', modelo );
                this.$('#pagar_'+id[1]).val('');
            }
              
            this.ready();
        },
        // Evente change click check-box
        changeCheckMedio: function(e){
            var selected = this.$(e.target).is(':checked');
            var id = this.$(e.currentTarget).attr('id');
                id = id.split("_");
            if( !selected ) {
                var modelo = this.detalleChposFechado.findModel(id[1],this.parameters.data.id);
                    modelo.recibo2 = this.parameters.data.recibo2;
                this.collection.trigger('store', modelo );
            }
              
            this.ready();    
        },
        // Event change naturaleza D->debito C->credito
        changeNaturaleza: function (e){
            var selected = this.$(e.currentTarget).is(':checked');
            var id = this.$(e.currentTarget).attr('id');
            var naturaleza = '';
            id = id.split("_");

            if( !selected ){
                if( id[0] == 'debito'){
                    this.$('#credito_'+id[1]).iCheck('uncheck');
                    naturaleza = 'D';
                }else{
                    this.$('#debito_'+id[1]).iCheck('uncheck');
                    naturaleza = 'C';
                }
                var valor = this.$('#pagar_'+id[1]).inputmask('unmaskedvalue');
                var modelo = this.detalleFacturaList.agregar(id[1], this.parameters.data, naturaleza, valor);
                this.$('#pagar_'+id[1]).val( modelo.factura3_valor );
                this.$('#check_'+id[1]).iCheck('check');
                this.collection.trigger('store', modelo );
            }
        },
        // Event change naturaleza D->debito C->credito
        changeNaturalezaChd: function (e){
            var selected = this.$(e.currentTarget).is(':checked');
            var id = this.$(e.currentTarget).attr('id');
            var naturaleza = '';
            id = id.split("_");

            if( !selected ){
                if( id[0] == 'debito'){
                    this.$('#credito_'+id[1]).iCheck('uncheck');
                    naturaleza = 'D';
                }else{
                    this.$('#debito_'+id[1]).iCheck('uncheck');
                    naturaleza = 'C';
                }

                var valor = this.$('#pagar_'+id[1]).inputmask('unmaskedvalue');
                var modelo = this.chDevueltoList.agregar(id[1], this.parameters.data, valor,naturaleza);
                this.$('#pagar_'+id[1]).val( modelo.valor );
                this.$('#check_'+id[1]).iCheck('check');
                this.collection.trigger('store', modelo );
            }
        },
        // Event change naturaleza D->debito C->credito
        changeNaturalezaAnti: function (e){
            var selected = this.$(e.currentTarget).is(':checked');
            var id = this.$(e.currentTarget).attr('id');
            var naturaleza = '';
            id = id.split("_");

            if( !selected ){
                if( id[0] == 'debito'){
                    this.$('#credito_'+id[1]).iCheck('uncheck');
                    naturaleza = 'D';
                }else{
                    this.$('#debito_'+id[1]).iCheck('uncheck');
                    naturaleza = 'C';
                }
                var valor = this.$('#pagar_'+id[1]).inputmask('unmaskedvalue');
                var modelo = this.anticiposlist.agregar(id[1], this.parameters.data, valor, naturaleza);
                this.$('#pagar_'+id[1]).val( modelo.valor );
                this.$('#check_'+id[1]).iCheck('check');
                this.collection.trigger('store', modelo );
            }
        },

        // Event change pagar
        changePagar: function(e){
            var valor = this.$(e.currentTarget).inputmask('unmaskedvalue');
            var id = this.$(e.currentTarget).attr('id');
            id = id.split("_");

            this.$debito = this.$('#debito_'+id[1]).is(':checked');
            var naturaleza = this.$debito ? 'D' : 'C';
                naturaleza == 'C' ? this.$('#credito_'+id[1]).iCheck('check') : '';

            this.$('#check_'+id[1]).iCheck('check');
            var modelo = this.detalleFacturaList.agregar(id[1], this.parameters.data, naturaleza, valor);
            this.collection.trigger('store', modelo );

            this.ready();
        },
        // Event changePagarChd
        changePagarChd: function(e){
            var valor = this.$(e.currentTarget).inputmask('unmaskedvalue');
            var id = this.$(e.currentTarget).attr('id');
            id = id.split("_");

            this.$debito = this.$('#debito_'+id[1]).is(':checked');
            var naturaleza = this.$debito ? 'D' : 'C';
                naturaleza == 'C' ? this.$('#credito_'+id[1]).iCheck('check') : '';
            
            var modelo = this.chDevueltoList.agregar(id[1], this.parameters.data, valor, naturaleza);
            this.$('#check_'+id[1]).iCheck('check');
            this.collection.trigger('store', modelo );

            this.ready();
        },
        // Event changePagarChd
        changePagarAnti: function(e){
            var valor = this.$(e.currentTarget).inputmask('unmaskedvalue');
            var id = this.$(e.currentTarget).attr('id');
            id = id.split("_");

            this.$debito = this.$('#debito_'+id[1]).is(':checked');
            var naturaleza = this.$debito ? 'D' : 'C';
                naturaleza == 'C' ? this.$('#credito_'+id[1]).iCheck('check') : '';

            this.$('#check_'+id[1]).iCheck('check');
            var modelo = this.anticiposlist.agregar(id[1], this.parameters.data, valor, naturaleza);
            this.collection.trigger('store', modelo );

            this.ready();
        },
        /**
        * Render view task by model
        * @param Object Model instance
        */
        addOne: function (factura3Model) {
            var view = new app.Factura3ItemView({
                model: factura3Model,
                parameters:{
                    call: this.parameters.data.call,
                }
            });

            factura3Model.view = view;
            this.$wraperConcepto.append( view.render().el );
            this.ready();
        },

        /*
        * Render all view tast of the collection
        */
        addAll:function(){
            var _this = this;

            if( this.detalleFacturaList.length > 0){
                this.detalleFacturaList.forEach(function(model) {
                    _this.addOne(model);

                    var modelo = _.find(_this.collection.models, function(item){
                        return item.get('factura3_id') == model.get('id');
                    });
                    
                    if (modelo instanceof Backbone.Model ){
                        if( _this.parameters.data.call == 'ajustesc'){
                            if( modelo.get('ajustec2_naturaleza') == 'D' ){
                                _this.$('#debito_'+model.get('id')).iCheck('check');
                            }else if( modelo.get('ajustec2_naturaleza') == 'C' ){
                                _this.$('#credito_'+model.get('id')).iCheck('check');
                            }
                        }
                        _this.$("#check_"+model.get('id')).iCheck('check');
                        _this.$("#pagar_"+model.get('id')).val( modelo.get('factura3_valor') );
                    }
                });
            }else{
                _this.addOne( factura3Model = new app.Factura3Model );
            }
        },
        /**
        * Render view task by model
        * @param Object Model instance
        */
        addOneCh: function(chposfechado2){
            var view = new app.DetalleChequeItemView({
                model: chposfechado2,
                parameters: {
                    call: true
                }
            });
            chposfechado2.view = view;
            this.$wraperCh.append( view.render().el );
            this.ready();
        },
        /**
        * Render all view tast of the collection
        */
        addAllCh:function(){
            this.detalleChposFechado.forEach( this.addOneCh, this );
        },
        /**
        * Render view task by model
        * @param Object Model instance
        */
        addOneChd: function(chdevuelto){
            var view = new app.DetalleChdItemView({
                model: chdevuelto,
                parameters: {
                    call: this.parameters.data.call
                }
            });
            chdevuelto.view = view;
            this.$wraperChd.append( view.render().el );
            this.ready();
        },
        /**
        * Render all view tast of the collection
        */
        addAllChd:function(){
            var _this = this;
            if( this.chDevueltoList.length > 0){
                this.chDevueltoList.forEach(function(model) {
                    _this.addOneChd(model);

                    var modelo = _.find(_this.collection.models, function(item){
                        return item.get('chdevuelto_id') == model.get('id');
                    });
                    
                    if (modelo instanceof Backbone.Model ){
                        if( _this.parameters.data.call == 'ajustesc'){
                            if( modelo.get('ajustec2_naturaleza') == 'D' ){
                                _this.$('#debito_'+model.get('id')).iCheck('check');
                            }else if( modelo.get('ajustec2_naturaleza') == 'C' ){
                                _this.$('#credito_'+model.get('id')).iCheck('check');
                            }
                        }   
                        _this.$("#check_"+model.get('id')).iCheck('check');
                        _this.$("#pagar_"+model.get('id')).val( modelo.get('valor'));
                    }
                });
            }
        },
        /**
        * Render view task by model
        * @param Object Model instance
        */
        addOneAnticipo: function(anticipoModel){
            var view = new app.AnticipoItemView({
                model: anticipoModel,
                parameters: {
                    call: this.parameters.data.call
                }
            });
            anticipoModel.view = view;
            this.$wraperAnticipo.append( view.render().el );
            this.ready();
        },
        /**
        * Render all view tast of the collection
        */
        addAllAnticipo:function(){
            var _this = this;

            if( this.anticiposlist.length > 0){
                this.anticiposlist.forEach(function(model) {
                    _this.addOneAnticipo(model);

                    var modelo = _.find(_this.collection.models, function(item){
                        return item.get('anticipo_id') == model.get('id');
                    });
                    
                    if (modelo instanceof Backbone.Model ){
                        if( _this.parameters.data.call == 'ajustesc'){
                            if( modelo.get('ajustec2_naturaleza') == 'D' ){
                                _this.$('#debito_'+model.get('id')).iCheck('check');
                            }else if( modelo.get('ajustec2_naturaleza') == 'C' ){
                                _this.$('#credito_'+model.get('id')).iCheck('check');
                            }
                        }   
                        _this.$("#check_"+model.get('id')).iCheck('check');
                        _this.$("#pagar_"+model.get('id')).val( modelo.get('valor') );
                    }
                });
            }
            // else{
            //     _this.addOneAnticipo( anticpo = new app.AnticipoModel );
            // }
        },
    });
})(jQuery, this, this.document);
/**
* Class ConfirmWindow
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ConfirmWindow = Backbone.View.extend({

        el: '#modal-confirm-component',
        parameters: {
            template: null,
            titleConfirm: '',
            onConfirm: null,
            callBack: null,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {

            // extends attributtes
            if( opts != undefined && _.isObject(opts.parameters) )
                this.parameters = _.extend({}, this.parameters, opts.parameters );

        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = {};

            // Extend attributes confirm window
           	_.extend(attributes, this.parameters.dataFilter);
            this.$el.find('.content-modal').html( this.parameters.template(attributes) );

            // Change modal title
            this.$el.find('.inner-title-modal').html( this.parameters['titleConfirm'] );
			this.$el.modal('show');

            // delegate events
	        $(this.el).off('click', '.confirm-action');
            this.undelegateEvents();
            this.delegateEvents({ 'click .confirm-action': 'onConfirm' });

            return this;
        },

        /**
        * Confirm
        */
        onConfirm: function (e) {

            e.preventDefault();
            var _this = this;

			this.$el.modal('hide');

            if( typeof this.parameters.onConfirm == 'function' ) {
                this.parameters.onConfirm.call(null, this.parameters.dataFilter );
            }
        }
   });

})(jQuery, this, this.document);

/**
* Class ComponentConsecutiveView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentConsecutiveView = Backbone.View.extend({

      	el: 'body',
		events: {
            'change .change-sucursal-consecutive-koi-component': 'sucursalChange',
            'change .change-puntoventa-consecutive-koi-component': 'puntoVentaChange'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
		},

        sucursalChange: function(e) {
            var _this = this;
        		documents = $(e.currentTarget).attr("data-document");
    			sucursal = $(e.currentTarget).val();

            // Reference to fields
            this.$consecutive = $("#"+$(e.currentTarget).attr("data-field"));
        	this.$wrapperContent = $("#"+$(e.currentTarget).attr("data-wrapper"));

            if (sucursal != '') {

                $.ajax({
                    url: window.Misc.urlFull(Route.route('sucursales.show', {sucursales: sucursal})),
                    type: 'GET',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.$wrapperContent );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.$wrapperContent );
                    
                    // Eval consecutive
                    var consecutive = 0;
                    if(documents == 'pedido') consecutive = resp.sucursal_pedn;
                    if(documents == 'ajuste') consecutive = resp.sucursal_ajus;
                    if(documents == 'traslados') consecutive = resp.sucursal_tras;
                    if(documents == 'pedidoc') consecutive = resp.sucursal_pedidoc;
                    if(documents == 'devolucion') consecutive = resp.sucursal_devo;
                    if(documents == 'trasladosubicaciones') consecutive = resp.sucursal_trau;
                    if(documents == 'recibos') consecutive = resp.regional_reci;
                    if(documents == 'notas') consecutive = resp.regional_nota;
                    if(documents == 'ajustec') consecutive = resp.regional_ajuc;
                    if(documents == 'anticipo') consecutive = resp.regional_anti;
                    if(documents == 'chequepos') consecutive = resp.regional_chp;
                    if(documents == 'orden') consecutive = resp.regional_ord;

                    // Set consecutive
                    _this.$consecutive.val( parseInt(consecutive) + 1);
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.$wrapperContent );
                    alertify.error(thrownError);
                });
            }
        },
        puntoVentaChange: function(e){
            var _this = this;
                puntoVenta = $(e.currentTarget).val();

            // Reference to fields
            this.$consecutive = $("#"+$(e.currentTarget).attr("data-field"));
            this.$wrapperContent = $("#"+$(e.currentTarget).attr("data-wrapper"));

            if (puntoVenta != '') {

                $.ajax({
                    url: window.Misc.urlFull(Route.route('puntosventa.show', {puntosventa: puntoVenta})),
                    type: 'GET',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.$wrapperContent );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.$wrapperContent );
                    // Eval consecutive
                    var consecutive = 0;
                    consecutive = resp.puntoventa_numero;
                    
                    // Set consecutive
                    _this.$consecutive.val( parseInt(consecutive) + 1);
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.$wrapperContent );
                    alertify.error(thrownError);
                });
            }
        }
    });


})(jQuery, this, this.document);

/**
* Class ComponentCreateResourceView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentCreateResourceView = Backbone.View.extend({

      	el: 'body',
		events: {
            'click .btn-add-resource-koi-component': 'addResource',
            'submit #form-create-resource-component': 'onStore'
		},
        parameters: {
        },

        /**
        * Constructor Method
        */
		initialize: function(opts) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

			// Initialize
            this.$modalComponent = this.$('#modal-add-resource-component');
            this.$wraperError = this.$('#error-resource-component');
            this.$wraperContent = this.$('#content-create-resource-component').find('.modal-body');
		},

		/**
        * Display form modal resource
        */
		addResource: function(e) {
            // References
            this.resource = $(e.currentTarget).attr("data-resource");
            this.$resourceField = $("#"+$(e.currentTarget).attr("data-field"));
            this.parameters = {};

            if(this.resource == 'contacto') {
                this.$inputPhone = this.$("#"+$(e.currentTarget).attr("data-phone"));
                this.$inputAddress = this.$("#"+$(e.currentTarget).attr("data-address"));
                this.$inputCity = this.$("#"+$(e.currentTarget).attr("data-city"));
                this.$inputEmail = this.$("#"+$(e.currentTarget).attr("data-email"));
                this.parameters.tcontacto_tercero = $(e.currentTarget).attr("data-tercero");
                if( _.isUndefined(this.parameters.tcontacto_tercero) || _.isNull(this.parameters.tcontacto_tercero) || this.parameters.tcontacto_tercero == '') {
                    alertify.error('Por favor ingrese cliente antes agregar contacto.');
                    return;
                }
            }

            // stuffToDo resource
            var _this = this,
	            stuffToDo = {
                    'contacto' : function() {
                        _this.$resourceName = $("#"+$(e.currentTarget).attr("data-name"));
                        _this.$modalComponent.find('.inner-title-modal').html('Contacto');

                        _this.model = new app.ContactoModel();
                        var template = _.template($('#add-contacto-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'marca' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Marca');

                        _this.model = new app.MarcaModel();
                        var template = _.template($('#add-marca-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'linea' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Linea');

                        _this.model = new app.LineaModel();
                        var template = _.template($('#add-linea-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },

                    'categoria' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Categoria');

                        _this.model = new app.CategoriaModel();
                        var template = _.template($('#add-categoria-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'subcategoria' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('SubCategoria');

                        _this.model = new app.SubCategoriaModel();
                        var template = _.template($('#add-subcategoria-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'tipo' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Tipo');

                        _this.model = new app.TipoModel();
                        var template = _.template($('#add-tipo-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'modelo' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Modelo');

                        _this.model = new app.ModeloModel();
                        var template = _.template($('#add-modelo-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'estado' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Estado');

                        _this.model = new app.EstadoModel();
                        var template = _.template($('#add-estado-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'dano' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Dano');

                        _this.model = new app.DanoModel();
                        var template = _.template($('#add-dano-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },

	                'tercero' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Tercero');

                        _this.model = new app.TerceroModel();
                        var template = _.template($('#add-tercero-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );

                        _this.$formAccounting = _this.$modalComponent.find('#form-accounting');
                    },
                    'producto' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Producto');

                        _this.model = new app.ProductoModel();
                        var template = _.template($('#add-producto-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'centrocosto' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Centros de costo');

                        _this.model = new app.CentroCostoModel();
                        var template = _.template($('#add-centrocosto-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'grupo' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Grupo inventario');

                        _this.model = new app.GrupoModel();
                        var template = _.template($('#add-grupo-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'subgrupo' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Subrupo inventario');

                        _this.model = new app.SubGrupoModel();
                        var template = _.template($('#add-subgrupo-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'unidadmedida' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Unidad de medida');

                        _this.model = new app.UnidadModel();
                        var template = _.template($('#add-unidad-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'unidadnegocio' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Unidad de negocio');

                        _this.model = new app.UnidadNegocioModel();
                        var template = _.template($('#add-unidadnegocio-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'folder' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Folder');

                        _this.model = new app.FolderModel();
                        var template = _.template($('#add-folder-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'tipoorden' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Tipo de orden');

                        _this.model = new app.TipoOrdenModel();
                        var template = _.template($('#add-tipoorden-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'solicitante' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Solicitante');

                        _this.model = new app.SolicitanteModel();
                        var template = _.template($('#add-solicitante-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'prioridad' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Prioridad');

                        _this.model = new app.PrioridadModel();
                        var template = _.template($('#add-prioridad-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'sitio' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Sitio');

                        _this.model = new app.SitioModel();
                        var template = _.template($('#add-sitio-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON()) );
                    },
                    'ubicacion' : function() {
                        _this.$modalComponent.find('.inner-title-modal').html('Ubicación');

                        _this.sucursal = $(e.currentTarget).attr("data-sucursal");
                        _this.parameter = $(e.currentTarget).attr("data-parameter");
                        _this.model = new app.UbicacionModel();
                        _this.model.set('ubicacion_select', _this.parameter);
                        _this.model.set('ubicacion_sucursal', _this.sucursal);
                        var template = _.template($('#add-ubicacion-tpl').html());
                        _this.$modalComponent.find('.content-modal').html( template(_this.model.toJSON() ) );
                    },
	            };

            if (stuffToDo[this.resource]) {
                stuffToDo[this.resource]();

                this.$wraperError.hide().empty();

	            // Events
            	this.listenTo( this.model, 'sync', this.responseServer );
            	this.listenTo( this.model, 'request', this.loadSpinner );

                // to fire plugins
                this.ready();

				this.$modalComponent.modal('show');
            }
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSpinner == 'function' )
                window.initComponent.initSpinner();
        },

        /**
        * Event Create Post
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                this.$wraperError.hide().empty();

                e.preventDefault();
                var data = $.extend({}, this.parameters, window.Misc.formToJson( e.target ));

                if (this.resource == 'tercero') {
                    data = $.extend({}, data, window.Misc.formToJson( this.$formAccounting ));
                }

                this.model.save( data, {patch: true} );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.$wraperContent );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.$wraperContent );

            // response success or error
            var text = resp.success ? '' : resp.errors;
            if( _.isObject( resp.errors ) ) {
                text = window.Misc.parseErrors(resp.errors);
            }

            if( !resp.success ) {
                this.$wraperError.empty().append(text);
                this.$wraperError.show();
                return;
            }

            // stuffToDo Response success
            var _this = this,
                stuffToDo = {
                    'contacto' : function() {
                        _this.$resourceField.val(_this.model.get('id'));
                        _this.$resourceName.val(_this.model.get('tcontacto_nombre'));

                        if(_this.$inputPhone.length) {
                            _this.$inputPhone.val( _this.model.get('tcontacto_telefono') );
                        }

                        if(_this.$inputAddress.length) {
                            _this.$inputAddress.val( _this.model.get('tcontacto_direccion') );
                        }

                        if(_this.$inputEmail.length) {
                            _this.$inputEmail.val( _this.model.get('tcontacto_email') );
                        }

                        if(_this.$inputCity.length) {
                            _this.$inputCity.val( _this.model.get('tcontacto_municipio') ).trigger('change');
                        }
                    },
                    'marca' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('marca_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'tipo' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('tipo_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'linea' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('linea_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },

                    'categoria' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('categoria_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'subcategoria' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('subcategoria_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'modelo' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('modelo_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'estado' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('estado_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'dano' : function() {
                       _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('dano_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'tercero' : function() {
                        _this.$resourceField.val(_this.model.get('tercero_nit')).trigger('change');
                    },
                    'producto' : function() {
                        _this.$resourceField.val(_this.model.get('sirvea_codigo')).trigger('change');
                    },
                    'centrocosto' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('centrocosto_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'grupo' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('grupo_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'subgrupo' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('subgrupo_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'unidadmedida' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('unidadmedida_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'unidadnegocio' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('unidadnegocio_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'folder' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('folder_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'tipoorden' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('tipoorden_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'solicitante' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('solicitante_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'prioridad' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('prioridad_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                    'sitio' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('sitio_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');

                    },
                    'ubicacion' : function() {
                        _this.$resourceField.append("<option value="+ _this.model.get('id') +">"+ _this.model.get('ubicacion_nombre') +"</option>");
                        _this.$resourceField.val(_this.model.get('id')).trigger('change');
                    },
                };

            if (stuffToDo[this.resource]) {
                stuffToDo[this.resource]();

                // Fires libraries js
                if( typeof window.initComponent.initSelect2 == 'function' )
                    window.initComponent.initSelect2();

                this.$modalComponent.modal('hide');
            }
        }
    });


})(jQuery, this, this.document);

/**
* Class RolesListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.Factura3ListView = Backbone.View.extend({

        el: '#browse-factura3-list',
        template: _.template( ($('#tfoot-tercero-deuda').html() || '') ),
        parameters: {
            wrapper: null,
            edit: false,
            call: null,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: {tercero: this.parameters.dataFilter.tercero , factura1: this.parameters.dataFilter.factura1}, reset: true });
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view rol by model
        * @param Object contactModel Model instance
        */
        addOne: function (factura3Model) {
            var view = new app.Factura3ItemView({
                model: factura3Model,
                parameters: {
                    edit: this.parameters.edit,
                    call: this.parameters.call,
                    template: this.parameters.template,
                }
            });
            factura3Model.view = view;
            this.$el.prepend( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {

            this.$el.find('tbody').html('');
            this.$el.find('tfoot').html( this.template() );

            // References
            this.$saldo = this.$('#total');
            this.$valor = this.$('#valor');
            this.$totalCount = this.$('#total_count');

            // Info adicional
            this.$porvencer = this.$('#porvencer');
            this.$porvencer_saldo = this.$('#porvencer_saldo');
            this.$menor30 = this.$('#menor30');
            this.$menor30_saldo = this.$('#menor30_saldo');
            this.$menor60 = this.$('#menor60');
            this.$menor60_saldo = this.$('#menor60_saldo');
            this.$menor90 = this.$('#menor90');
            this.$menor90_saldo = this.$('#menor90_saldo');
            this.$menor180 = this.$('#menor180');
            this.$menor180_saldo = this.$('#menor180_saldo');
            this.$menor360 = this.$('#menor360');
            this.$menor360_saldo = this.$('#menor360_saldo');
            this.$mayor360 = this.$('#mayor360');
            this.$mayor360_saldo = this.$('#mayor360_saldo');

            this.collection.forEach( this.addOne, this );
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();
            if(this.$saldo.length > 0 && this.$valor.length > 0 ) {
                this.$saldo.html( window.Misc.currency(data.saldo) );
                this.$valor.html( window.Misc.currency(data.valor) );
            }

            if(this.$porvencer.length) {
                this.$totalCount.html( data.tcount );
                this.$porvencer.html( data.porvencer.count );
                this.$porvencer_saldo.html( window.Misc.currency( data.porvencer.saldo ) );
            }

            if(this.$menor30.length) {
                this.$menor30.html( data.menor30.count );
                this.$menor30_saldo.html( window.Misc.currency( data.menor30.saldo ) );
            }

            if(this.$menor60.length) {
                this.$menor60.html( data.menor60.count );
                this.$menor60_saldo.html( window.Misc.currency( data.menor60.saldo ) );
            }

            if(this.$menor90.length) {
                this.$menor90.html( data.menor90.count );
                this.$menor90_saldo.html( window.Misc.currency( data.menor90.saldo ) );
            }

            if(this.$menor180.length) {
                this.$menor180.html( data.menor180.count );
                this.$menor180_saldo.html( window.Misc.currency( data.menor180.saldo ) );
            }

            if(this.$menor360.length) {
                this.$menor360.html( data.menor360.count );
                this.$menor360_saldo.html( window.Misc.currency( data.menor360.saldo ) );
            }

            if(this.$mayor360.length) {
                this.$mayor360.html( data.mayor360.count );
                this.$mayor360_saldo.html( window.Misc.currency( data.mayor360.saldo ) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class FacturaItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.Factura3ItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-concepto-item-tpl').html() || '') ),
        parameters: {
            edit: false,
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            if(this.parameters.call == 'ajustesc'){
                this.template = _.template( ($('#add-item-ajustec-tpl').html() || '') );
            }

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            attributes.call = this.parameters.call;

            if( attributes.call == 'tercero' ){
                if( attributes.days <= 0 && attributes.days >= -30 ){
                    this.$el.addClass('bg-menor30');
                }else if ( attributes.days <= -31 && attributes.days >= -60 ){
                    this.$el.addClass('bg-menor60');
                }else if ( attributes.days <= -61 && attributes.days >= -90 ){
                    this.$el.addClass('bg-menor90');
                }else if ( attributes.days <= -91 && attributes.days >= -180 ){
                    this.$el.addClass('bg-menor180');
                }else if ( attributes.days <=   -181 && attributes.days >= -360 ){
                    this.$el.addClass('bg-menor360');
                }else if ( attributes.days < -360 ){
                    this.$el.addClass('bg-mayor360');
                }
                this.$el.html( this.parameters.template(attributes) );
            }else if( attributes.call == 'detalle' ){
                this.$el.html( this.parameters.template(attributes) );
            }else{
                this.$el.html( this.template(attributes) );
            }
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class ComponentGlobalView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentGlobalView = Backbone.View.extend({

      	el: 'body',
		events: {
            'click .sidebar-toggle': 'clickSidebar',
            'click .history-back': 'clickHistoryBack',
            'hidden.bs.modal': 'multiModal'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
		},

		clickSidebar: function(e) {
			e.preventDefault();

			var expiration = new Date();
			expiration.setFullYear(expiration.getFullYear() + 1);

			// Create or update the cookie:
			document.cookie = "sidebar_toggle=" + (this.$el.hasClass('sidebar-collapse') ? '' : 'sidebar-collapse') + "; path=/; expires=" + expiration.toUTCString();
		},

		clickHistoryBack: function(e) {
            e.preventDefault();

            window.history.back();
        },

		multiModal: function(){
            if( $('.modal.in').length > 0){
                $('body').addClass('modal-open');
            }
        },
    });


})(jQuery, this, this.document);

/**
* Class InventarioActionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});
(function ($, window, document, undefined) {

    app.InventarioActionView = Backbone.View.extend({
    	el: 'body',

        templateAddSeries: _.template( ($('#add-series-tpl').html() || '') ),
    	templateSeriesLotes: _.template( ($('#add-series-lotes-tpl').html() || '') ),
        templateAddItemRollo: _.template( ($('#add-itemrollo-tpl').html() || '') ),
        templateAddISerieFactu: _.template( ($('#add-series-factu-tpl').html() || '') ),
        templateChooseItemsRollo: _.template( ($('#choose-itemrollo-tpl').html() || '') ),
        templateAddItemsProductVence: _.template( ($('#product-vence-tpl').html() || '') ),
        templateChooseItemsProductVence: _.template( ($('#product-choose-vence-tpl').html() || '') ),

    	events:{ 
            'submit #form-create-inventario-entrada-component-source': 'onStoreItemInventario',
            'change .cantidad-salidau-koi-inventario': 'changedCantidadUnidadesSalida',
            'change .unidades-vence-koi-inventario': 'changeUnidadeVeceEntrada',
            'click #btn-itemrollo-entradau-koi-inventario': 'clickAddItemRollo',
            'click .btn-remove-itemrollo-koi-inventario': 'clickRemoveItemRollo',
            'click #btn-vencimiento-entradau-koi-inventario': 'clickAddVencimiento',
            'click .btn-remove-itemvencimiento-koi-inventario': 'clickRemoveItemVencimiento',
    	},

        parameters: {
            data: { },
        },

        /**
        * Constructor Method
        */
        initialize : function( opts ) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            this.$modalIn = this.$('#modal-inventario-component');
            // Collection item rollo
            this.itemRolloINList = new app.ItemRolloINList();
            //Collectio lotes
            this.LotesProducto = new app.ProductoLote();
            // Collection prodbode
            this.prodbodeList = new app.ProdbodeList();

            // Events Listeners
            this.listenTo( this.LotesProducto, 'reset', this.addAllProductoLote );
            this.listenTo( this.LotesProducto, 'add', this.addOneVencimientoInventario );

            this.listenTo( this.itemRolloINList, 'add', this.addOneItemRolloInventario );
            this.listenTo( this.itemRolloINList, 'reset', this.addAllItemRolloInventario );

            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.collection, 'sync', this.responseServer );
            this.ready();
        },

        /*
        * Render View Element
        */
        render: function() {
            var resp = this.parameters,
                _this = this,
                stuffToDo = {
                    'modalSerie': function() {
                        if (resp.tipo == 'E') {
                            _this.$modalIn.find('.content-modal').empty().html(_this.templateAddSeries( ));
                            _this.$modalIn.find('.modal-title').text('Inventario, Entradas De Productos ');

                            // Reference inventario
                            _this.referenceSerie(resp);
                        }else{
                            // Reference inventario
                            _this.referenceSerie(resp);
                        }

                    },
                    'ProductoMetrado': function(){
                        if (resp.tipo  == 'E') {
                            _this.$modalIn.find('.content-modal').empty().html(_this.templateAddItemRollo(resp) );
                            _this.$modalIn.find('.modal-title').text('Inventario - Entradas de productos metrados'); 
                            _this.referenceMetrado(resp);
                        }else{
                            _this.$modalIn.find('.content-modal').empty().html(_this.templateChooseItemsRollo(resp) );
                            _this.$modalIn.find('.modal-title').text('Inventario - Salidas de productos metrados');
                            _this.referenceMetrado(resp);
                        }
                    },
                    'ProductoVence': function(){
                        if (resp.tipo  == 'E') {
                            _this.$modalIn.find('.content-modal').empty().html(_this.templateAddItemsProductVence(resp) );
                            _this.$modalIn.find('.modal-title').text('Inventario - Entradas de productos con fecha de vencimiento '); 
                            _this.referenceVencimiento(resp);
                        }
                        else{
                            _this.$modalIn.find('.content-modal').empty().html(_this.templateChooseItemsProductVence(resp) );
                            _this.$modalIn.find('.modal-title').text('Inventario - Salida de productos con fecha de vencimiento');
                            _this.referenceVencimiento(resp);
                        }
                    },
                    'NoSerieNoMetros': function(){
                        if (resp.tipo == 'E') {
                            _this.collection.trigger('store',resp.data);
                        }else{
                            _this.$modalIn.find('.content-modal').empty().html(_this.templateSeriesLotes(resp));
                            _this.$modalIn.find('.modal-title').text('Inventario - Salidas de productos ');

                             // Reference inventario
                            _this.referenceNoSerie(resp);
                        }
                    }
                };
            if (stuffToDo[resp.action]) {
                stuffToDo[resp.action]();
            }
		},
    	/**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },
        /**
        * Reference add Series
        */
        referenceSerie: function(atributes) {
            this.$wraper = this.$('#modal-wrapper-inventario');
            this.$wraperFormIn = this.$modalIn.find('.content-modal');
            this.$wraperErrorIn = this.$('#error-inventario');

            if(atributes.tipo == 'E' ){
                this.$wraperSeries = this.$('#browse-series-list');
                for (var i = 1; i <= atributes.data.ajuste2_cantidad_entrada; i++) {
                    this.addOneSerieInventario( new app.ProductoModel({ id: i }) )
                }
                // Hide errors
                this.$wraperErrorIn.hide().empty();
                // Open modal
                this.$modalIn.modal('show');
            }else{
                this.parameters.data = $.extend({}, this.parameters.data);
                this.collection.trigger('store', this.parameters.data);
            }

        },
        /**
        * Reference add No series No metros
        */
        referenceNoSerie: function(atributes) {
            this.$wraper = this.$('#modal-wrapper-inventario');
            this.$wraperFormIn = this.$modalIn.find('.content-modal');
            this.$wraperErrorIn = this.$('#error-inventario');
            
            this.$wraperSeries = this.$('#browse-series-lotes-list');
            this.LotesProducto.fetch({ reset: true, data: { producto: atributes.data.producto_serie, sucursal: atributes.data.sucursal } });

            // Hide errors
            this.$wraperErrorIn.hide().empty();

            // Open modal
            this.$modalIn.modal('show');
  
        },

      	/**
        * Reference add RolloMetrado
        */
        referenceMetrado: function(atributes) {
            this.$wraper = this.$('#modal-wrapper-inventario');
            this.$wraperFormIn = this.$modalIn.find('.content-modal');
            this.$wraperErrorIn = this.$('#error-inventario');

            if(atributes.tipo == 'E' ){
                // Items rollo view
                this.$wraperItemRollo = this.$('#browse-itemtollo-list');
                this.itemRolloINList.add( new app.ItemRolloModel({ id: shortid.uuid() }) );

            }else{
                //salidas
                this.$wraperItemRollo = this.$('#browse-chooseitemtollo-list');
                this.itemRolloINList.fetch({ reset: true, data: { producto: atributes.data.producto_serie,   sucursal: atributes.data.sucursal } });
            }

            // Hide errors
            this.$wraperErrorIn.hide().empty();

            // Open modal
            this.$modalIn.modal('show');

        },
        /**
        *Reference add fecha lote vencimiento
        */
        referenceVencimiento: function(atributes){
            this.$wraper = this.$('#modal-wrapper-inventario');
            this.$wraperFormIn = this.$modalIn.find('.content-modal');
            this.$wraperErrorIn = this.$('#error-inventario');

            if(atributes.tipo == 'E' ){
                // Items vence view
                this.$wraperVence = this.$('#browse-product-vence-list');
                this.LotesProducto.add( new app.LoteModel({ id: shortid.uuid() }) );
             }else{
                //salidas
                this.$wraperSeries = this.$('#browse-chooseproduct-vence-list');
                this.LotesProducto.fetch({reset: true, data: { producto: atributes.data.producto_serie, sucursal: atributes.data.sucursal } } );
             }
            // Hide errors
            this.$wraperErrorIn.hide().empty();

            // Open modal
            this.$modalIn.modal('show');
        },

        /**
        * Render view task by model
        * @param Object ProductoLote Model instance
        */
        addOneProductoLote: function (ProductoLote) {
            var view = new app.ProductoLotesINListView({
                model: ProductoLote,
            });
            this.$wraperSeries.append( view.render().el );
            this.ready();
            
        },

        /**
        * Render all view tast of the collection
        */
        addAllProductoLote: function () {
            var _this = this; 
            this.LotesProducto.forEach(function(model, index) {
                _this.addOneProductoLote(model)
            });
        },

        /**
        * Render view task by model
        * @param Object Producto Model instance
        */
        addOneSerieInventario: function (ProductoModel) {
            var view = new app.ProductoSeriesINListView({
                model: ProductoModel
            });
            this.$wraperSeries.append( view.render().el );
            this.ready();
        },

        /**
        * Render view task by model
        * @param Object Producto Model instance
        */
        addOneVencimientoInventario: function (productoModel) {
            // prepare lote encabezado
            productoModel.set({lote_numero: this.parameters.data.lote});
            var view = new app.ProductoVenceINListView({
                model: productoModel,
                parameters:{
                    type: this.parameters.tipo
                }
            });
            
            productoModel.view = view;
            this.$wraperVence.append( view.render().el );
            this.ready();
        },

        /**
        * Render all view tast of the collection
        */
        addAllItemRolloInventario: function () {
            var _this = this;
            this.itemRolloINList.forEach(function(model) {
                _this.addOneItemRolloInventario(model)
            });
        },

        /**
        * Render view task by model
        * @param Object ItemRolloModel Model instance
        */
        addOneItemRolloInventario: function (itemRolloModel) {
            // Prepare lote encabezado
            if (this.parameters.tipo == 'E') 
                itemRolloModel.set({rollo_lote: this.parameters.data.lote});

            var view = new app.ItemRolloINListView({
                model: itemRolloModel,
                parameters: {
                    type: this.parameters.tipo
                }
            });
            itemRolloModel.view = view;
            this.$wraperItemRollo.append( view.render().el );
            this.ready();
        },
        /*
        * Validate Carro temporal
        */
        onStoreItemInventario: function (e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault(); 
                if (this.parameters.action == 'modalSerie') {
                    this.parameters.data = $.extend({}, this.parameters.data, window.Misc.formToJson(e.target));
                    this.collection.trigger('store', this.parameters.data);

                }else if(this.parameters.action == 'ProductoMetrado' && this.parameters.tipo == 'E') {
                    var metros = 0,
                        cantidad = 0;

                    //Prepare and setter models of collection
                    _.each(this.itemRolloINList.models,function(model){
                        metros = this.$('#itemrollo_metros_'+ model.get('id')).val();
                        cantidad = this.$('#rollos_'+ model.get('id')).val();
                        model.set({rollo_metros: metros , rollo_cantidad: cantidad });
                    });
                    this.parameters.data = $.extend({}, this.parameters.data);
                    this.parameters.data.items = this.itemRolloINList;
                    this.collection.trigger('store', this.parameters.data);

                }else if(this.parameters.action == 'ProductoVence' && this.parameters.tipo == 'E'){
                    var lote = 0,
                        unidades = 0;
                        fecha = 0;

                    //Prepare and setter models of collection
                    _.each(this.LotesProducto.models,function(model){
                        lote = this.$('#prodbodevence_lote_'+ model.get('id')).val();
                        unidades = this.$('#prodbodevence_unidades_'+ model.get('id')).val();
                        fecha = this.$('#prodbodevence_fecha_'+ model.get('id')).val();
                        model.set({lote_numero: lote , lote_cantidad: unidades, lote_fecha: fecha });
                    });
                    this.parameters.data = $.extend({}, this.parameters.data);
                    this.parameters.data.items = this.LotesProducto;
                    this.collection.trigger('store', this.parameters.data);
                }else{
                    var items = [];
                    items =  window.Misc.formToJson( e.target );
                    this.parameters.data = $.extend({}, this.parameters.data);
                    this.parameters.data.items =  items;
                    this.collection.trigger('store', this.parameters.data);
                }
            }
        },
        /*
        *changed unidades de salidas
        */
        changedCantidadUnidadesSalida: function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                
                if (this.parameters.action == 'ProductoMetrado' ) {
                     // Valid total
                    var ingresadas = 0;
                    var result =_.every(this.itemRolloINList.models, function(itemRolloModel) { 
                        if( itemRolloModel.get('rollo_saldo') < parseFloat( this.$('#item_'+itemRolloModel.get('id')).val() ) ) {
                            alertify.error("Cantidad insuficiente para este item, (" + itemRolloModel.get('rollo_saldo') + ") SALDO, (" + this.$('#item_'+itemRolloModel.get('id')).val() + ") INGRESADAS, por favor verifique información.");
                            return false;
                        }
                        return  true; 
                    });
                }else{
                     // Valid total
                    var ingresadas = 0;
                    var result =_.every(this.LotesProducto.models, function(lote) { 
                        if( lote.get('lote_saldo') < parseFloat( this.$('#item_'+lote.get('id')).val() ) ) {
                            alertify.error("Cantidad insuficiente para este item, (" + lote.get('lote_saldo') + ") SALDO, (" + this.$('#item_'+lote.get('id')).val() + ") INGRESADAS, por favor verifique información.");
                            return false;
                        }
                        return  true; 
                    });
                }   
            }
        },

        /*
        * Add item unidades de entrada
        */
        clickAddItemRollo: function(e) {
            e.preventDefault();

            // Valid total
            var ingresadas = 0;
            _.each(this.itemRolloINList.models, function(itemRolloModel){ 
                ingresadas+= parseFloat( this.$('#itemrollo_metros_'+itemRolloModel.get('id')).val() * this.$('#rollos_'+itemRolloModel.get('id')).val() );
            });
            
            if(ingresadas >= this.parameters.data.ajuste2_cantidad_entrada) {
                alertify.error("No puede superar la cantidad de metros(" + this.parameters.data.ajuste2_cantidad_entrada +") a ingresar, por favor verifique información.");
                return;
            }
         
            this.itemRolloINList.add( new app.ItemRolloModel({ id: shortid.uuid() }) );
        },
        /*
        *Add item unidades de entrada productos que vencen
        */
        clickAddVencimiento: function(e){
            e.preventDefault();
            var data = this.LotesProducto.validEntrada(this.parameters.data.ajuste2_cantidad_entrada);
            if (data.success == true) {
                this.LotesProducto.add( new app.LoteModel({ id: shortid.uuid() }) );
                return;
            }
            return alertify.error(data.success);
        },
        /*
        * Remove item unidades de entrada
        */
        clickRemoveItemVencimiento: function(e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.LotesProducto.get(resource);

            if ( model instanceof Backbone.Model ) {
                this.LotesProducto.remove(model);                
                model.view.remove();
            }
        },
        /*
        * Remove item unidades de entrada
        */
        clickRemoveItemRollo: function(e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.itemRolloINList.get(resource);

            if ( model instanceof Backbone.Model ) {
                this.itemRolloINList.remove(model);                
                model.view.remove();
            }
        },
        /**
        * Unidades vence
        */
        changeUnidadeVeceEntrada:function(e){
            e.preventDefault();
            var data = this.LotesProducto.validEntrada(this.parameters.data.ajuste2_cantidad_entrada);
            if (data.unidades <= this.parameters.data.ajuste2_cantidad_entrada) {
                this.$('#total-vencimiento').html(data.unidades);
                return;
            }
            return alertify.error(data.success);
        },
        responseServer: function ( model, resp, opts ) {
            if(!_.isUndefined(resp.success)) {
                if( resp.success ) {
                    // Close modals
                    this.$modalIn.modal('hide');

                    // Clear Form of car temp
                    if (!_.isUndefined(this.parameters.form)) 
                        window.Misc.clearForm(this.parameters.form);
                }
            }
        }

    });
})(jQuery, this, this.document);
/**
* Class DetalleChdItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleChdItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#choose-chd-item-tpl').html() || '') ),
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.call = this.parameters.call;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class ItemRolloINListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ItemRolloINListView = Backbone.View.extend({

        tagName: 'tr',
        template: null,
        parameters: { 
            type: 'E'   
        },

        /**
        * Constructor Method
        */
        initialize: function( opts ) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            this.template = _.template( ($( this.parameters.type == 'E' ? '#add-itemsrollos-tpl' : '#chooses-itemsrollos-tpl' ).html() || '') );

            var attributes = this.model.toJSON();
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);

/**
* Class ProductoLotesINListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ProductoLotesINListView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#exit-lotes-tpl').html() || '') ),

        /**
        * Constructor Method
        */
        initialize: function() {
            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class ComponentReporteView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentReporteView = Backbone.View.extend({

      	el: 'body',
		events: {
			'click .btn-export-pdf-koi-component': 'onPdf',
			'click .btn-export-xls-koi-component': 'onXls'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
		},

		onPdf: function(e) {
			this.$("#type-reporte-koi-component").val('pdf');
		},

		onXls: function(e) {
			this.$("#type-reporte-koi-component").val('xls');
		}
    });


})(jQuery, this, this.document);

/**
* Class ComponentSearchContactoView of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/
//Global App Backbone
app || (app = {});
(function ($, window, document, undefined) {
    app.ComponentSearchContactoView = Backbone.View.extend({
        el: 'body',
        template: _.template( ($('#koi-search-contacto-component-tpl').html() || '') ),
        events: {
            'click .btn-koi-search-contacto-component-table': 'searchContacto',
            'click .btn-search-koi-search-contacto-component': 'search',
            'click .btn-clear-koi-search-contacto-component': 'clear',
            'click .a-koi-search-contacto-component-table': 'setContacto'
        },
        /**
        * Constructor Method
        */
        initialize: function() {
            // Initialize
            this.$modalComponent = this.$('#modal-search-contacto-component');
        },
        
        searchContacto: function(e) {
            e.preventDefault();
            var _this = this;
            // Render template
            this.$modalComponent.find('.content-modal').html( this.template({ }) );
            // References
            this.$searchContactoNombres = this.$('#koi_search_contacto_nombres');
            this.$searchContactoApellidos = this.$('#koi_search_contacto_apellidos');
            
            // Validate tercero
            var tercero =  this.$resourceTercero = this.$('#btn-add-contact').attr("data-tercero");
            if( _.isUndefined(tercero) || _.isNull(tercero) || tercero == '') {
                alertify.error('Por favor ingrese cliente antes agregar contacto.');
                return;
            }
            
            this.$contactoSearchTable = this.$modalComponent.find('#koi-search-contacto-component-table');
            this.$inputContent = this.$("#"+$(e.currentTarget).attr("data-field"));
            this.$inputName = this.$("#"+$(e.currentTarget).attr("data-name"));
            this.$inputPhone = this.$("#"+$(e.currentTarget).attr("data-phone"));
            this.$inputAddress = this.$("#"+$(e.currentTarget).attr("data-address"));
            this.$inputCity = this.$("#"+$(e.currentTarget).attr("data-city"));
            this.$inputEmail = this.$("#"+$(e.currentTarget).attr("data-email"));

            this.contactoSearchTable = this.$contactoSearchTable.DataTable({
                dom: "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('terceros.contactos.index') ),
                    data: function( data ) {
                        data.tcontacto_nombres = _this.$searchContactoNombres.val(),
                        data.tcontacto_apellidos = _this.$searchContactoApellidos.val(),
                        data.tcontacto_tercero = tercero
                    }
                },
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'tcontacto_nombres', name: 'tcontacto_nombres' },
                    { data: 'tcontacto_apellidos', name: 'tcontacto_apellidos' },
                    { data: 'tcontacto_nombre', name: 'tcontacto_nombre' },
                    { data: 'tcontacto_telefono', name: 'tcontacto_telefono' },
                    { data: 'municipio_nombre', name: 'municipio_nombre' },
                    { data: 'tcontacto_direccion', name: 'tcontacto_direccion' },
                    { data: 'tcontacto_municipio', name: 'tcontacto_municipio' },
                    { data: 'tcontacto_email', name: 'tcontacto_email' }
                ],
                columnDefs: [
                    {
                        targets: 3,
                        width: '40%',
                        searchable: false,
                        render: function ( data, type, full, row ) {
                            return '<a href="#" class="a-koi-search-contacto-component-table">' + data + '</a>';
                        }
                    },
                    {
                        targets: [0,1,2,7,8],
                        visible: false
                    }
                ]
            });
            // Modal show
            this.ready();
            this.$modalComponent.modal('show');
        },
        setContacto: function(e) {
            
            e.preventDefault();
            var data = this.contactoSearchTable.row( $(e.currentTarget).parents('tr') ).data();
            this.$inputContent.val( data.id );
            this.$inputName.val( data.tcontacto_nombre );

            if(this.$inputPhone.length) {
                this.$inputPhone.val( data.tcontacto_telefono );
            }
            if(this.$inputAddress.length) {
                this.$inputAddress.val( data.tcontacto_direccion );
            }
            if(this.$inputCity.length) {
                this.$inputCity.val( data.tcontacto_municipio ).trigger('change');
            }
            if(this.$inputEmail.length) {
                this.$inputEmail.val( data.tcontacto_email );
            }
            this.$modalComponent.modal('hide');
        },
        search: function(e) {
           
            e.preventDefault();
            
            this.contactoSearchTable.ajax.reload();
        },
        clear: function(e) {
           
            e.preventDefault();
            this.$searchContactoNombres.val('');
            this.$searchContactoApellidos.val('');
            this.contactoSearchTable.ajax.reload();
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        }
    });
})(jQuery, this, this.document);
/**
* Class ComponentSearchCuentaView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentSearchCuentaView = Backbone.View.extend({

      	el: 'body',
        template: _.template( ($('#koi-search-plancuenta-component-tpl').html() || '') ),

		events: {
			'change input.plancuenta-koi-component': 'cuentaChanged',
            'click .btn-koi-search-plancuenta-component': 'searchCuenta',
            'click .btn-search-koi-search-plancuenta-component': 'search',
            'click .btn-clear-koi-search-plancuenta-component': 'clear',
            'click .a-koi-search-plancuenta-component-table': 'setCuenta'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
            this.$modalComponent = this.$('#modal-search-component');
		},

		searchCuenta: function(e) {
            e.preventDefault();
            var _this = this;

            // Render template
            this.$modalComponent.find('.content-modal').html( this.template({ }) );

            // References
            this.$searchCuenta = this.$('#koi_search_plancuentas_cuenta');
            this.$searchName = this.$('#koi_search_plancuentas_nombre');

            this.$plancuentasSearchTable = this.$modalComponent.find('#koi-search-plancuenta-component-table');
			this.$inputContent = this.$("#"+$(e.currentTarget).attr("data-field"));
			this.$inputName = this.$("#"+this.$inputContent.attr("data-name"));

			this.$inputCentro = this.$("#"+this.$inputContent.attr("data-centro"));
			this.$inputBase = this.$("#"+this.$inputContent.attr("data-base"));
			this.$inputValor = this.$("#"+this.$inputContent.attr("data-valor"));
			this.$inputTasa = this.$("#"+this.$inputContent.attr("data-tasa"));

            this.plancuentasSearchTable = this.$plancuentasSearchTable.DataTable({
				dom: "<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('plancuentas.index') ),
                    data: function( data ) {
                        data.plancuentas_cuenta = _this.$searchCuenta.val();
                        data.plancuentas_nombre = _this.$searchName.val();
                    }
                },
                columns: [
                    { data: 'plancuentas_cuenta', name: 'plancuentas_cuenta' },
                    { data: 'plancuentas_nivel', name: 'plancuentas_nivel' },
                    { data: 'plancuentas_nombre', name: 'plancuentas_nombre' },
                    { data: 'plancuentas_naturaleza', name: 'plancuentas_naturaleza' },
                    { data: 'plancuentas_tercero', name: 'plancuentas_tercero' }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        searchable: false,
                        render: function ( data, type, full, row ) {
                        	return '<a href="#" class="a-koi-search-plancuenta-component-table">' + data + '</a>';
                        }
                    },
                    {
                        targets: 1,
                        width: '10%',
                        searchable: false
                    },
                    {
                        targets: 3,
                        width: '10%',
                        searchable: false,
                        render: function ( data, type, full, row ) {
                            return data == 'D' ? 'Débito' : 'Crédito';
                        }
                    },
                    {
                        targets: 4,
                        width: '10%',
                        searchable: false,
                        render: function ( data, type, full, row ) {
                            return data ? 'Si' : 'No';
                        }
                    }
                ]
			});

        	// Modal show
            this.ready();
			this.$modalComponent.modal('show');
		},

		setCuenta: function(e) {
			e.preventDefault();

	        var data = this.plancuentasSearchTable.row( $(e.currentTarget).parents('tr') ).data();

			this.$inputContent.val( data.plancuentas_cuenta );
			this.$inputName.val( data.plancuentas_nombre );
			this.$inputName.val( data.plancuentas_nombre );

			// Clear centro costo
            if(this.$inputCentro.length) {
        		this.$inputCentro.val('').trigger('change');
            }

            // Clear base
            if(this.$inputBase.length) {
				this.$inputBase.prop('readonly', true);
			}

			this.$modalComponent.modal('hide');

		    // Other actions
            this.actions(data);
		},

		search: function(e) {
			e.preventDefault();

		    this.plancuentasSearchTable.ajax.reload();
		},

		clear: function(e) {
			e.preventDefault();

			this.$searchCuenta.val('');
			this.$searchName.val('');

			this.plancuentasSearchTable.ajax.reload();
		},

		cuentaChanged: function(e) {
			var _this = this;

			// References
			this.$inputContent = $(e.currentTarget);
			this.$inputName = this.$("#"+$(e.currentTarget).attr("data-name"));
			this.$inputBase = this.$("#"+$(e.currentTarget).attr("data-base"));
			this.$inputTasa = this.$("#"+$(e.currentTarget).attr("data-tasa"));

			this.$inputValor = this.$("#"+$(e.currentTarget).attr("data-valor"));
			this.$inputCentro = this.$("#"+$(e.currentTarget).attr("data-centro"));
			this.$wraperConten = this.$("#"+$(e.currentTarget).attr("data-wrapper"));

			var cuenta = this.$inputContent.val();

			// Before eval clear data
			this.$inputName.val('');

			// Clear centro costo
            if(this.$inputCentro.length) {
        		this.$inputCentro.val('').trigger('change');
            }

            // Clear base
            if(this.$inputBase.length) {
				this.$inputBase.prop('readonly', true);
			}

			// Clear tasa
            if(this.$inputTasa.length) {
				this.$inputTasa.val('');
			}

			if(!_.isUndefined(cuenta) && !_.isNull(cuenta) && cuenta != '') {
				// Get plan cuenta
	            $.ajax({
	                url: window.Misc.urlFull(Route.route('plancuentas.search')),
	                type: 'GET',
	                data: { plancuentas_cuenta: cuenta },
	                beforeSend: function() {
						window.Misc.setSpinner( _this.$wraperConten );
	                }
	            })
	            .done(function(resp) {
	                window.Misc.removeSpinner( _this.$wraperConten );
                   if(resp.success) {
	                    // Set name
	                    if(!_.isUndefined(resp.plancuentas_nombre) && !_.isNull(resp.plancuentas_nombre)){
							_this.$inputName.val(resp.plancuentas_nombre);
	                    }

	                    // Other actions
	                    _this.actions(resp);
	                }
	            })
	            .fail(function(jqXHR, ajaxOptions, thrownError) {
	                window.Misc.removeSpinner( _this.$wraperConten );
	                alertify.error(thrownError);
	            });

	     	}
		},

		/**
        * Other actions on set cuenta
        */
		actions: function (data) {
            // Eval base
        	if(this.$inputBase.length) {
            	if(!_.isUndefined(data.plancuentas_tasa) && !_.isNull(data.plancuentas_tasa) && data.plancuentas_tasa > 0) {
            		// Case plancuentas_tasa eval value
        			this.$inputBase.prop('readonly', false);
                    var base = this.$inputBase.inputmask('unmaskedvalue');
     				this.$inputValor.val( (data.plancuentas_tasa * base) / 100);
            	}else{
            		// Case without plancuentas_tasa
            		this.$inputBase.val('');
            	}
            }

            // Eval centro costo
            if(this.$inputCentro.length) {
            	if(!_.isUndefined(data.plancuentas_centro) && !_.isNull(data.plancuentas_centro) && data.plancuentas_centro > 0) {
            		this.$inputCentro.val( data.plancuentas_centro ).trigger('change');
            	}
            }

            // Eval tasa
            if(this.$inputTasa.length) {
            	if(!_.isUndefined(data.plancuentas_tasa) && !_.isNull(data.plancuentas_tasa) && data.plancuentas_tasa > 0) {
            		this.$inputTasa.val( data.plancuentas_tasa );
            	}else{
					this.$inputTasa.val('');
				}
			}
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        }
    });


})(jQuery, this, this.document);

/**
* Class ComponentSearchFacturaView of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentSearchFacturaView = Backbone.View.extend({

        el: 'body',
        template: _.template( ($('#koi-search-producto-component-tpl').html() || '') ),

        events: {
            'change input.factura-koi-component': 'FacturaChanged',
        },

        /**
        * Constructor Method
        */
        initialize: function() {
            // Initialize
        },

        FacturaChanged: function(e) {
            var _this = this;
            this.$inputContent = $(e.currentTarget);
            this.$wraperConten = this.$("#"+$(e.currentTarget).attr("data-wrapper"));
            this.$inputSucursal = this.$("#"+$(e.currentTarget).attr("data-sucursal"));       
            this.$inputName = this.$("#"+$(e.currentTarget).attr("data-name"));       
            this.$inputNit = this.$("#"+$(e.currentTarget).attr("data-nit"));       
   
            var factura = this.$inputContent.val();
                sucursal = this.$inputSucursal.val();

            if ( sucursal == '' ) {
                this.$inputContent.val('');
                alertify.error('Por favor seleccione sucursal antes de buscar una factura');
                return;
            }
            if(!_.isUndefined(factura) && !_.isNull(factura) && factura != '') {
                // Get Producto
                $.ajax({
                    url: window.Misc.urlFull(Route.route('facturas.search')),
                    type: 'GET',
                    data: { factura_numero: factura,
                            factura_sucursal:sucursal },
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.$wraperConten );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.$wraperConten );
                    
                    if(resp.success) {
                        if(!_.isUndefined(resp.cliente) && !_.isNull(resp.cliente)){
                            _this.$inputName.val(resp.cliente);
                        }   
                        if(!_.isUndefined(resp.nit) && !_.isNull(resp.nit)){
                            _this.$inputNit.val(resp.nit);
                        }
                        _this.$inputNit .trigger('change',[resp.id]);
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.$wraperConten );
                    alertify.error(thrownError);
                });
            }
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        }
    });


})(jQuery, this, this.document);

/**
* Class ComponentSearchPedidocView of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentSearchPedidocView = Backbone.View.extend({

      	el: 'body',
        template: _.template( ($('#koi-search-pedidoc-component-tpl').html() || '') ),

		events: {
            'change input.tercero-factura-change-koi': 'searchPedidoc',
            'click .btn-search-koi-search-pedidoc-component': 'search',
            'click .btn-clear-koi-search-pedidoc-component': 'clear',
         	'click .a-koi-search-pedidoc-component-table': 'setPedidoc'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
            this.$modalComponent = this.$('#modal-search-pedidoc-component');
        },

        searchPedidoc: function(e) {
            e.preventDefault();
            var _this = this;
            // Render template
            this.$modalComponent.find('.content-modal').html( this.template({ }) );

            // References
            this.$searchNumeroPedidoc = this.$('#koi_search_pedidoc_numero');
            this.$searchSucursalPedidoc = this.$('#koi_search_pedidoc_sucursal');

            this.$pedidoscSearchTable = this.$modalComponent.find('#koi-search-pedidoc-component-table');

            this.$inputContent = this.$("#"+$(e.currentTarget).attr("id"));
            this.$pago = this.$("#"+$(e.currentTarget).attr("data-formapago"));
            this.$plazo = this.$("#"+$(e.currentTarget).attr("data-plazo"));
            this.$cuotas = this.$("#"+$(e.currentTarget).attr("data-cuotas"));
            this.$primerpago = this.$("#"+$(e.currentTarget).attr("data-primerpago"));
            this.$tname = this.$("#"+$(e.currentTarget).attr("data-nameTC"));
            this.$taddress = this.$("#"+$(e.currentTarget).attr("data-dirTC"));
            this.$sucursal = this.$("#"+$(e.currentTarget).attr("data-sucursalP"));
            this.$vendedor = this.$("#"+$(e.currentTarget).attr("data-vendedorT"));
            this.$observaciones = this.$("#"+$(e.currentTarget).attr("data-obs"));
            this.$numPedido = this.$("#"+$(e.currentTarget).attr("data-numPedido"));
            this.$contact = this.$("#"+this.$inputContent.attr("data-idTC"));
            this.$dataChange = this.$inputContent.attr("data-change");

            var tercero = this.$inputContent.val();

            this.pedidoscSearchTable = this.$pedidoscSearchTable.DataTable({
                dom: "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('pedidosc.index') ),
                    data: function( data ) {
                        data.pedidoc1_numero = _this.$searchNumeroPedidoc.val();
                        data.pedidoc1_sucursal = _this.$searchSucursalPedidoc.val();
                        data.tercero = tercero;
                    }
                },
                columns: [
                    { data: 'pedidoc1_numero', name: 'pedidoc1_numero' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre'},
                    { data: 'pedidoc1_fecha', name: 'pedidoc1_fecha' }, 
                    { data: 'vendedor_nombre', name: 'vendedor_nombre' },
                ],
                columnDefs: [
					{
						targets: 0,
						searchable: false,
						render: function ( data, type, full, row ) {
							return '<a href="#" class="a-koi-search-pedidoc-component-table">' + data + '</a>';
						}
					}
					
                ]
			});

            // Modal show
            this.ready();
			this.$modalComponent.modal('show');
		},

		setPedidoc: function(e) {
			e.preventDefault();
	        var data = this.pedidoscSearchTable.row( $(e.currentTarget).parents('tr') ).data();

            if (this.$dataChange == "true") {
                var select2 = [{id: data.pedidoc1_sucursal , text: data.sucursal_nombre}];
                    select2Vendedor = [{id: data.pedidoc1_vendedor , text: data.vendedor_nombre}];
                this.$plazo.val( data.pedidoc1_plazo );
                this.$cuotas.val( data.pedidoc1_cuotas );
                (this.$cuotas.val()==0) ? this.$pago.val('CONTADO'): this.$pago.val('CREDITO') ;
                this.$primerpago.val( data.pedidoc1_primerpago );
                this.$tname.val( data.tcontacto_nombre );
                this.$taddress.val( data.tcontacto_direccion );
                this.$numPedido.val( data.pedidoc1_numero );
                this.$observaciones.val(data.pedidoc1_observaciones);
                this.$sucursal.select2({ data: select2 });
                this.$vendedor.select2({ data: select2Vendedor });
                this.$contact.val(data.pedidoc1_contacto);
                
                this.$numPedido.trigger('change',[data.id]);
            }
			this.$modalComponent.modal('hide');
		},

		search: function(e) {
			e.preventDefault();

		    this.pedidoscSearchTable.ajax.reload();
		},

		clear: function(e) {
			e.preventDefault();

            this.$searchSerie.val('');
            this.$searchNombre.val('');

            this.pedidoscSearchTable.ajax.reload();
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        }
    });


})(jQuery, this, this.document);
/**
* Class ComponentSearchProductoView of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentSearchProductoView = Backbone.View.extend({

      	el: 'body',
        template: _.template( ($('#koi-search-producto-component-tpl').html() || '') ),

		events: {
			'change input.producto-koi-component': 'productoChanged',
            'click .btn-koi-search-producto-component': 'searchProducto',
            'click .btn-search-koi-search-producto-component': 'search',
            'click .btn-clear-koi-search-producto-component': 'clear',
            'click .a-koi-search-producto-component-table': 'setProducto'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
            this.$modalComponent = this.$('#modal-search-producto-component');
		},

		searchProducto: function(e) {
            e.preventDefault();
            var _this = this;

            // Render template
            this.$modalComponent.find('.content-modal').html( this.template({ }) );

            // References
            this.$searchReferencia = this.$('#koi_search_producto_referencia');
            this.$searchSerie = this.$('#koi_search_producto_serie');
            this.$searchNombre = this.$('#koi_search_producto_nombre');

            this.$productosSearchTable = this.$modalComponent.find('#koi-search-producto-component-table');
			this.$inputContent = this.$("#"+$(e.currentTarget).attr("data-field"));
			this.$inputName = this.$("#"+this.$inputContent.attr("data-name"));
			this.$inputCosto = this.$("#"+this.$inputContent.attr("data-costo"));
			this.$inputPrecio1 = this.$("#"+this.$inputContent.attr("data-price"));			
			this.$inputSucursal = this.$("#"+this.$inputContent.attr("data-office"));

			// Filters
			this.$equalsRef = this.$inputContent.attr("data-ref");
			if((this.$equalsRef == "true" || this.$equalsRef == "false") && this.$inputSucursal.val() == '' ){
				alertify.error('Por favor ingrese sucursal antes agregar producto.');
                return;
			}
			this.productosSearchTable = this.$productosSearchTable.DataTable({
				dom: "<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('productos.index') ),
                    data: function( data ) {
                        data.producto_serie = _this.$searchSerie.val();
                        data.producto_nombre = _this.$searchNombre.val();                     
                        data.producto_referencia = _this.$searchReferencia.val();                                            
                        data.equalsRef = _this.$equalsRef;                                            
                        data.officeSucursal = _this.$inputSucursal.val();                                            
                    }
                },
                columns: [
                    { data: 'producto_referencia', name: 'producto_referencia'},
                    { data: 'producto_serie', name: 'producto_serie' },
                    { data: 'producto_nombre', name: 'producto_nombre' }, 
                ],
                columnDefs: [
					{
						targets: 0,
						width: '10%',
						searchable: false,
						render: function ( data, type, full, row ) {
							return '<a href="#" class="a-koi-search-producto-component-table">' + data + '</a>';
						}
					}
					
                ]
			});

            // Modal show
            this.ready();
			this.$modalComponent.modal('show');
		},

		setProducto: function(e) {
			e.preventDefault();
	        var data = this.productosSearchTable.row( $(e.currentTarget).parents('tr') ).data();
			this.$inputContent.val( data.producto_serie );
			this.$inputName.val( data.producto_nombre );
			(!_.isUndefined( this.$inputCosto )) ? this.$inputCosto.val(window.Misc.currency(data.producto_costo)) : '';
			
			if (! _.isUndefined(this.$inputPrecio1)) {
				this.$inputPrecio1.val(window.Misc.currency(data.producto_precio1));
				this.$('#pedidoc2_iva_porcentaje').val(data.impuesto_porcentaje) ;
			}
			if(!_.isUndefined(data.producto_maneja_serie) && data.producto_maneja_serie == 1){
				this.$('#ajuste2_cantidad_salida').val(1).prop('readonly' , true);
				this.$('#traslado2_cantidad').val(1).prop('readonly' , true);
			}else{
				this.$('#ajuste2_cantidad_salida').val('').prop('readonly' , false);
				this.$('#traslado2_cantidad').val('').prop('readonly' , false);
			}
			this.$modalComponent.modal('hide');
		},

		search: function(e) {
			e.preventDefault();

		    this.productosSearchTable.ajax.reload();
		},

		clear: function(e) {
			e.preventDefault();

            this.$searchSerie.val('');
            this.$searchNombre.val('');

            this.productosSearchTable.ajax.reload();
		},

		productoChanged: function(e) {
			var _this = this;

			this.$inputContent = $(e.currentTarget);
			this.$inputName = this.$("#"+$(e.currentTarget).attr("data-name"));
			this.$inputCosto = this.$("#"+$(e.currentTarget).attr("data-costo"));
			this.$wraperConten = this.$("#"+$(e.currentTarget).attr("data-wrapper"));
			this.$inputPrecio1 = this.$("#"+this.$inputContent.attr("data-price"));			
        	this.equalsRef = this.$inputContent.attr("data-ref");
			if(this.equalsRef == "true" && this.$('#ajuste1_sucursal').val() == '' ){
				alertify.error('Por favor ingrese sucursal antes agregar producto.');
                return;
			}
			var producto = this.$inputContent.val();

            // Before eval clear data
            this.$inputName.val('');
            this.$inputCosto.val('');

			if(!_.isUndefined(producto) && !_.isNull(producto) && producto != '') {
				// Get Producto
	            $.ajax({
	                url: window.Misc.urlFull(Route.route('productos.search')),
	                type: 'GET',
	                data: { producto_serie: producto },
	                beforeSend: function() {
						_this.$inputName.val('');
						_this.$inputCosto.val('');
	                    window.Misc.setSpinner( _this.$wraperConten );
	                }
	            })
	            .done(function(resp) {
	                window.Misc.removeSpinner( _this.$wraperConten );
	                
	                if(resp.success) {
	                    if(!_.isUndefined(resp.producto_nombre) && !_.isNull(resp.producto_nombre)){
							_this.$inputName.val(resp.producto_nombre);
	                    }	
	                    if(!_.isUndefined(resp.producto_costo) && !_.isNull(resp.producto_costo)){
							_this.$inputCosto.val(window.Misc.currency(resp.producto_costo));
	                    }
	                    if(!_.isUndefined(resp.producto_precio1) && !_.isNull(resp.producto_precio1)){
							_this.$inputPrecio1.val(window.Misc.currency(resp.producto_precio1));
							_this.$('#pedidoc2_iva_porcentaje').val(resp.impuesto_porcentaje);
	                    }	                   
	                }
	            })
	            .fail(function(jqXHR, ajaxOptions, thrownError) {
	                window.Misc.removeSpinner( _this.$wraperConten );
	                alertify.error(thrownError);
	            });
	     	}
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        }
    });


})(jQuery, this, this.document);

/**
* Class ComponentSearchTerceroView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentSearchTerceroView = Backbone.View.extend({

      	el: 'body',
        template: _.template( ($('#koi-search-tercero-component-tpl').html() || '') ),

		events: {
			'change input.tercero-koi-component': 'terceroChanged',
            'click .btn-koi-search-tercero-component-table': 'searchTercero',
            'click .btn-search-koi-search-tercero-component': 'search',
            'click .btn-clear-koi-search-tercero-component': 'clear',
            'click .a-koi-search-tercero-component-table': 'setTercero'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
            this.$modalComponent = this.$('#modal-search-component');
		},

		searchTercero: function(e) {
            e.preventDefault();
            var _this = this;

            // Render template
            this.$modalComponent.find('.content-modal').html( this.template({ }) );

            // References
            this.$searchNit = this.$('#koi_search_tercero_nit');
            this.$searchName = this.$('#koi_search_tercero_nombre');

            this.$tercerosSearchTable = this.$modalComponent.find('#koi-search-tercero-component-table');
            
            this.$inputContent = this.$("#"+$(e.currentTarget).attr("data-field"));
            this.$wraperConten = this.$("#"+this.$inputContent.attr("data-wrapper"));
            this.$inputName = this.$("#"+this.$inputContent.attr("data-name"));
            this.$btnContact = this.$("#"+this.$inputContent.attr("data-contacto"));
            this.$inputAddress = this.$("#"+this.$inputContent.attr("data-address"));
            this.$inputPuntoVenta = this.$("#"+this.$inputContent.attr("data-punto"));
            this.$changeIf = this.$inputContent.attr("data-change");
            this.$inputCliente = this.$inputContent.attr("data-cliente");
            this.$inputVendedor = this.$inputContent.attr("data-vendedor");
            this.$inputTecnico = this.$inputContent.attr("data-tecnico");

            this.$concepto = this.$("#"+this.$inputContent.attr("data-concepto"));
            this.$wrap = this.$("#"+this.$inputContent.attr("data-wrap"));

            if (this.$changeIf == "true" && (this.$inputPuntoVenta.val() == ''  && this.$inputPuntoVenta.length > 0)) {
                alertify.error('Por favor ingrese punto de venta antes seleccionar tercero.');
                return;
            }
            
            this.tercerosSearchTable = this.$tercerosSearchTable.DataTable({
                dom: "<'row'<'col-sm-12'tr>>" +
               		"<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('terceros.index') ),
                    data: function( data ) {
                        data.tercero_nit = _this.$searchNit.val();
                        data.tercero_nombre = _this.$searchName.val();
                        data.cliente = _this.$inputCliente;
                        data.vendedor = _this.$inputVendedor;
                        data.tecnico = _this.$inputTecnico;
                    }
                },

                columns: [
                    { data: 'tercero_nit', name: 'tercero_nit' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'tercero_razonsocial', name: 'tercero_razonsocial'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                    { data: 'tercero_direccion', name: 'tercero_direccion' }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        searchable: false,
                        render: function ( data, type, full, row ) {
                        	return '<a href="#" class="a-koi-search-tercero-component-table">' + data + '</a>';
                        }
                    },
                    {
                        targets: 1,
                        width: '85%',
                        searchable: false
                    },
                    {
                        targets: [2, 3, 4, 5, 6, 7],
                        visible: false,
                        searchable: false
                    }
                ]
            });

            // Modal show
            this.ready();
			this.$modalComponent.modal('show');
		},

		setTercero: function(e) {
			e.preventDefault();
	        var data = this.tercerosSearchTable.row( $(e.currentTarget).parents('tr') ).data();
			this.$inputContent.val( data.tercero_nit );
            this.$inputName.val( data.tercero_nombre );
            this.$inputAddress.val( data.tercero_direccion );
            
            if(this.$btnContact.length > 0) {
                this.$btnContact.attr('data-tercero', data.id);
            }
            
            if(this.$concepto.length > 0 && this.$wrap.length > 0 || this.$concepto.length > 0) {
                this.$wrap.removeAttr('hidden');
                this.$concepto.attr('data-tercero', data.id);
                this.$concepto.removeAttr('disabled');
            }

			this.$modalComponent.modal('hide');
            if (this.$changeIf == "true") {
                if (this.$wraperConten.attr('id') == "gestioncobro-create") {
                    this.$inputContent.attr('data-tercero', data.id)
                }
                this.$inputContent.removeClass('tercero-koi-component');
                this.$inputContent.trigger('change');
                this.$inputContent.addClass('tercero-koi-component');
            }
		},

		search: function(e) {
			e.preventDefault();

		    this.tercerosSearchTable.ajax.reload();
		},

		clear: function(e) {
			e.preventDefault();

			this.$searchNit.val('');
			this.$searchName.val('');

            this.tercerosSearchTable.ajax.reload();
		},

		terceroChanged: function(e) {
			var _this = this;
            this.$inputContent = $(e.currentTarget);
			this.$inputName = this.$("#"+$(e.currentTarget).attr("data-name"));
			this.$wraperConten = this.$("#"+$(e.currentTarget).attr("data-wrapper"));
            this.$inputAddress = this.$("#"+this.$inputContent.attr("data-address"));
            this.$changeIf = this.$inputContent.attr("data-change");
            this.$btnContact = this.$("#"+this.$inputContent.attr("data-contacto"));
            this.$inputPuntoVenta = this.$("#"+this.$inputContent.attr("data-punto"));

            this.$concepto = this.$("#"+this.$inputContent.attr("data-concepto"));
            this.$wrap = this.$("#"+this.$inputContent.attr("data-wrap"));


            if(this.$btnContact.length > 0) {
                this.$btnContact.attr('data-tercero', '');
            }
            var tercero = this.$inputContent.val();

            if (this.$changeIf == "true" && (this.$inputPuntoVenta.val() == ''  && this.$inputPuntoVenta.length > 0)) {
                tercero = this.$inputContent.val('');
                alertify.error('Por favor ingrese punto de venta antes seleccionar tercero.');
                return;
            }


            // Before eval clear data
            this.$inputName.val('');
            this.$inputAddress.val('');

            if(!_.isUndefined(tercero) && !_.isNull(tercero) && tercero != '') {
                // Get tercero
                $.ajax({
                    url: window.Misc.urlFull(Route.route('terceros.search')),
                    type: 'GET',
                    data: { tercero_nit: tercero },
                    beforeSend: function() {
                        _this.$inputName.val('');
                        window.Misc.setSpinner( _this.$wraperConten );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.$wraperConten );
                    if(resp.success) {
                        if(_this.$concepto.length > 0 && _this.$wrap.length > 0 || _this.$concepto.length > 0) {
                            _this.$wrap.removeAttr('hidden');
                            _this.$concepto.attr('data-tercero', resp.id);
                            _this.$concepto.removeAttr('disabled');
                        }

                        if(!_.isUndefined(resp.tercero_nombre) && !_.isNull(resp.tercero_nombre)){
                            _this.$inputName.val(resp.tercero_nombre);
                        } 
                        if(!_.isUndefined(resp.tercero_direccion) && !_.isNull(resp.tercero_direccion)){
                            _this.$inputAddress.val(resp.tercero_direccion);
                        }
                        if(_this.$btnContact.length > 0) {
                            _this.$btnContact.attr('data-tercero', resp.id);
                        }
                    }
	            })
	            .fail(function(jqXHR, ajaxOptions, thrownError) {
	                window.Misc.removeSpinner( _this.$wraperConten );
	                alertify.error(thrownError);
	            });

	     	}
		},

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        }
    });


})(jQuery, this, this.document);

/**
* Class ProductoSeriesINListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ProductoSeriesINListView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-serie-tpl').html() || '') ),

        /**
        * Constructor Method
        */
        initialize: function() {
            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class ComponentTerceroView  of Backbone
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ComponentTerceroView = Backbone.View.extend({

      	el: 'body',
        templateName: _.template( ($('#tercero-name-tpl').html() || '') ),
		events: {
			'change .change-nit-koi-component': 'nitChanged',
            'change .change-actividad-koi-component': 'actividadChanged'
		},

        /**
        * Constructor Method
        */
		initialize: function() {
			// Initialize
		},

        nitChanged: function(e) {
            var _this = this;

            // Reference to fields
            this.$dv = $("#"+$(e.currentTarget).attr("data-field"));
        	this.$wraperContent = this.$('#tercero-create');
            if(!this.$wraperContent.length) {
	            this.$modalComponent = this.$('#modal-add-resource-component');
	            this.$wraperContent = this.$modalComponent.find('.modal-body');
   			}

            $.ajax({
                url: window.Misc.urlFull(Route.route('terceros.dv')),
                type: 'GET',
                data: { tercero_nit: $(e.currentTarget).val() },
                beforeSend: function() {
                    window.Misc.setSpinner( _this.$wraperContent );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.$wraperContent );
                if(resp.success) {
                    // Dv
                    _this.$dv.val(resp.dv);
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.$wraperContent );
                alertify.error(thrownError);
            });
        },

        actividadChanged: function(e) {
            var _this = this;

            // Reference to fields
            this.$retecree = $("#"+$(e.currentTarget).attr("data-field"));
            this.$wraperContent = this.$('#tercero-create');
            if(!this.$wraperContent.length) {
                this.$modalComponent = this.$('#modal-add-resource-component');
                this.$wraperContent = this.$modalComponent.find('.modal-body');
            }

            $.ajax({
                url: window.Misc.urlFull(Route.route('terceros.rcree')),
                type: 'GET',
                data: { tercero_actividad: $(e.currentTarget).val() },
                beforeSend: function() {
                    window.Misc.setSpinner( _this.$wraperContent );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.$wraperContent );
                if(resp.success) {
                    // % cree
                    if(!_.isUndefined(resp.rcree) && !_.isNull(resp.rcree)){
                        _this.$retecree.html(resp.rcree);
                    }
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.$wraperContent );
                alertify.error(thrownError);
            });
        }
    });


})(jQuery, this, this.document);

/**
* Class ProductoVenceINListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ProductoVenceINListView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($( '#add-itemsvencimiento-tpl').html() || '') ),
        parameters: {
            type: 'E'
        },
        /**
        * Constructor Method
        */
        initialize: function( opts ) {

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateConceptoNotaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateConceptoNotaView = Backbone.View.extend({

        el: '#conceptonota-create',
        template: _.template( ($('#add-conceptonota-tpl').html() || '') ),
        events: {
            'submit #form-conceptonota': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-conceptonota');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('conceptonotas.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainConceptoNotaView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainConceptoNotaView = Backbone.View.extend({

        el: '#conceptonota-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            this.$conceptonotaSearchTable = this.$('#conceptonota-search-table');
            this.$conceptonotaSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('conceptonotas.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptonota_nombre', name: 'conceptonota_nombre' },
                    { data: 'plancuentas_nombre', name: 'plancuentas_nombre' },
                    { data: 'conceptonota_activo', name: 'conceptonota_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva nota',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('conceptonotas.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('conceptonotas.show', {conceptonotas: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 3,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateConceptoAjustecView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateConceptoAjustecView = Backbone.View.extend({

        el: '#conceptoajustec-create',
        template: _.template( ($('#add-conceptoajustec-tpl').html() || '') ),
        events: {
            'submit #form-conceptoajustec': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-conceptoajustec');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('conceptosajustec.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainConceptoAjustecView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainConceptoAjustecView = Backbone.View.extend({

        el: '#conceptoajustec-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$conceptoajustecSearchTable = this.$('#conceptoajustec-search-table');

            this.$conceptoajustecSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('conceptosajustec.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptoajustec_nombre', name: 'conceptoajustec_nombre' },
                    { data: 'plancuentas_nombre', name: 'plancuentas_nombre' },
                    { data: 'conceptoajustec_activo', name: 'conceptoajustec_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva ajuste de cartera',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('conceptosajustec.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('conceptosajustec.show', {conceptosajustec: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 3,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateConceptoCobView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateConceptoCobView = Backbone.View.extend({

        el: '#conceptocobro-create',
        template: _.template( ($('#add-conceptocob-tpl').html() || '') ),
        events: {
            'submit #form-conceptocobro': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-conceptocobro');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create ConceptoCobro
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('conceptocobros.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainConceptosCobView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainConceptosCobView = Backbone.View.extend({

        el: '#conceptocobros-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$conceptocobrosSearchTable = this.$('#conceptocobros-search-table');

            this.$conceptocobrosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('conceptocobros.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptocob_nombre', name: 'conceptocob_nombre' },
                    { data: 'conceptocob_activo', name: 'conceptocob_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo conceto cobro',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('conceptocobros.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('conceptocobros.show', {conceptocobros: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateConceptoComView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateConceptoComView = Backbone.View.extend({

        el: '#conceptocom-create',
        template: _.template( ($('#add-conceptocom-tpl').html() || '') ),
        events: {
            'submit #form-conceptocom': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-conceptocom');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create ConceptoComercial
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('conceptoscomercial.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainConceptosComView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainConceptosComView = Backbone.View.extend({

        el: '#conceptoscomercial-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$conceptoscomercialSearchTable = this.$('#conceptoscomercial-search-table');

            this.$conceptoscomercialSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('conceptoscomercial.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptocom_nombre', name: 'conceptocom_nombre' },
                    { data: 'conceptocom_activo', name: 'conceptocom_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo concepto comercial',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('conceptoscomercial.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('conceptoscomercial.show', {conceptoscomercial: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateConceptosrcView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateConceptosrcView = Backbone.View.extend({

        el: '#conceptosrc-create',
        template: _.template( ($('#add-conceptosrc-tpl').html() || '') ),
        events: {
            'submit #form-conceptosrc': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-conceptosrc');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('conceptosrc.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainConceptosrcView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainConceptosrcView = Backbone.View.extend({

        el: '#conceptosrc-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$conceptosrcSearchTable = this.$('#conceptosrc-search-table');

            this.$conceptosrcSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('conceptosrc.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptosrc_nombre', name: 'conceptosrc_nombre' },
                    { data: 'plancuentas_nombre', name: 'plancuentas_nombre' },
                    { data: 'documentos_nombre', name: 'documentos_nombre' },
                    { data: 'conceptosrc_activo', name: 'conceptosrc_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo concepto',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('conceptosrc.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('conceptosrc.show', {conceptosrc: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 4,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateConceptoTecView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateConceptoTecView = Backbone.View.extend({

        el: '#conceptotec-create',
        template: _.template( ($('#add-conceptotec-tpl').html() || '') ),
        events: {
            'submit #form-conceptotec': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-conceptotec');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Concepto tecnico
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('conceptostecnico.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainConceptosTecView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainConceptosTecView = Backbone.View.extend({

        el: '#conceptostecnico-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$conceptostecnicoSearchTable = this.$('#conceptostecnico-search-table');

            this.$conceptostecnicoSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('conceptostecnico.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptotec_nombre', name: 'conceptotec_nombre' },
                    { data: 'conceptotec_activo', name: 'conceptotec_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo concepto tecnico',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('conceptostecnico.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('conceptostecnico.show', {conceptostecnico: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateCuentaBancoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateCuentaBancoView = Backbone.View.extend({

        el: '#cuentabanco-create',
        template: _.template( ($('#add-cuentabanco-tpl').html() || '') ),
        events: {
            'submit #form-cuentabanco': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-cuentabanco');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('cuentabancos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainCuentaBancosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainCuentaBancosView = Backbone.View.extend({

        el: '#cuentabancos-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$cuentabancosSearchTable = this.$('#cuentabancos-search-table');

            this.$cuentabancosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('cuentabancos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'cuentabanco_nombre', name: 'cuentabanco_nombre' },
                    { data: 'banco_nombre', name: 'banco_nombre' },
                    { data: 'plancuentas_nombre', name: 'plancuentas_nombre' },
                    { data: 'cuentabanco_activa', name: 'cuentabanco_activa'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva cuenta de banco',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('cuentabancos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('cuentabancos.show', {cuentabancos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 4,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateDanoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateDanoView = Backbone.View.extend({

        el: '#dano-create',
        template: _.template( ($('#add-dano-tpl').html() || '') ),
        events: {
            'submit #form-dano': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-dano');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('danos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainDanosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainDanosView = Backbone.View.extend({

        el: '#danos-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$danosSearchTable = this.$('#danos-search-table');

            this.$danosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('danos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'dano_nombre', name: 'dano_nombre' },
                    { data: 'dano_activo', name: 'dano_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo Daño',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('danos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('danos.show', {danos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return data ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class MainDepartamentoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainDepartamentoView = Backbone.View.extend({
        el: '#departamentos-main',
        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$departamentosSearchTable = this.$('#departamentos-search-table');

            this.$departamentosSearchTable.DataTable({
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('departamentos.index') ),
                columns: [
                    { data: 'departamento_codigo', name: 'departamento_codigo' },
                    { data: 'departamento_nombre', name: 'departamento_nombre'}
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateDevolucionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateDevolucionView = Backbone.View.extend({

        el: '#devolucion-create',
        template: _.template(($('#add-devoluciones-tpl').html() || '') ),

        events: {
            'click .submit-devolucion' : 'submitForm',
            'submit #form-devolucion1' : 'onStore',
            'change #devolucion1_tercero' : 'referenceView', 
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-devolucion');

            this.detalleDevolucion = new app.DevolucionDetalleCollection();


            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
            
            this.ready(); 
        },
        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-devolucion1');

        },
        /**
        * Event submit devolucion1
        */
        submitForm: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create devoluciones
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }   
        },  
        /**
        * Reference view collection
        */
        referenceView:function(e, id){
            e.preventDefault();
            this.detalleDevolucionView = new app.DevolucionDetalle2View( {
                collection: this.detalleDevolucion,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'id_factura2': id
                    }
                }
            }); 
        },


        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('devoluciones.show', { devoluciones: resp.id})) );
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleDevolucionItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleDevolucionItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-devoluciones-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class DevolucionDetalle2View  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DevolucionDetalle2View = Backbone.View.extend({

        el: '#browse-detalle-devolucion-list',
        events: {
            'change input.change-cant-devo' : 'cantidadDevolucion', 
            'click .all-devoluciones' : 'clickAll', 
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // reference input totales show
            this.$total = this.$('#total');
            this.$devueltas = this.$('#total_devueltas');
            this.$price = this.$('#total_price');
                    
            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);

            if( !_.isUndefined(this.parameters.dataFilter.id) && !_.isNull(this.parameters.dataFilter.id) || !_.isUndefined(this.parameters.dataFilter.id_factura2) && !_.isNull(this.parameters.dataFilter.id_factura2) ){
                this.confCollection.data.id = this.parameters.dataFilter.id;
                this.confCollection.data.id_factura2 = this.parameters.dataFilter.id_factura2;
                this.collection.fetch( this.confCollection );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object detalleDevolucionModel Model instance
        */
        addOne: function (detalleDevolucionModel) {
            var view = new app.DetalleDevolucionItemView({
                model: detalleDevolucionModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            detalleDevolucionModel.view = view;
            this.$el.append( view.render().el );

            this.setModel(detalleDevolucionModel);
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.$el.find('tbody').html('');
            this.collection.forEach( this.addOne, this );
        },
        /**
        *Evalua cantidad del input
        */
        cantidadDevolucion: function(e){
            e.preventDefault();
            this.$cantidad = this.$(e.currentTarget);
            var id = this.$cantidad.attr('id').split('_');
            var model = this.collection.get(id[2]);

            if (this.$cantidad.val() > model.get('factura2_cantidad') ) {
                return alertify.error('Cantidad no puede ser mayor a lo que se encuentra en la factura');
            }    

            model.set('devolucion2_cantidad', this.$cantidad.val());
            this.setModel(model);

            this.totalize();
        },
        /*
        *setea cantidad al modelo ya evaluada y render subtotal 
        */
        setModel:function(model){
            var subtotal = model.get('devolucion2_costo') -  model.get('devolucion2_descuento');
                iva = (subtotal * (model.get('devolucion2_iva') / 100));
                subtotal = subtotal + iva;
                subtotal = subtotal * model.get('devolucion2_cantidad');
            this.$('#total_'+model.get('id')).empty().html(window.Misc.currency(subtotal));
        },

        /**
        *Render totales the collection
        */
        totalize: function(){
            var data = this.collection.totalize();
            this.$devueltas.empty().html(data.devueltasTotal );
            this.$total.empty().html(window.Misc.currency(data.devolucion1_total) );
            this.$price.empty().html(window.Misc.currency(data.devolucion1_bruto) );
        },
        /*
        *Function devuelve todos los items
        */
        clickAll:function(e){
            e.preventDefault();
            this.collection.devolverTodo();
            this.addAll();
        },
        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class MainDevolucionesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainDevolucionesView = Backbone.View.extend({

        el: '#devoluciones-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$devolucionesSearchTable = this.$('#devoluciones-search-table');
            
            this.$devolucionesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('devoluciones.index') ),
                columns: [ 
                    { data: 'devolucion1_numero', name: 'devolucion1_numero' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'tercero_nombre', name: 'devolucion1_tercero' },
                    { data: 'devolucion1_factura', name: 'devolucion1_factura' },
                    { data: 'tercero_razonsocial', name: 'tercero_razonsocial'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                    { data: 'devolucion1_fh_elaboro', name: 'devolucion1_fh_elaboro' },
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva devolucion',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('devoluciones.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('devoluciones.show', {devoluciones: full.id }) )  +'">' + data + '</a>';
                        },
                       
                    },
                    {
                        targets: [4,5,6,7,8],
                        visible: false,
                    },
                ]
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ShowDevolucionView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowDevolucionView = Backbone.View.extend({

        el: '#devolucion-show',

        events:{
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$wraperForm = this.$('#render-devolucion-show');
            // Model exist
            if( this.model.id != undefined ) {

                this.detalleDevolucion = new app.DevolucionDetalleCollection();

                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle devolucion list
            this.itemsListView = new app.DevolucionDetalle2View({
                collection: this.detalleDevolucion,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                        id: this.model.get('id')
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateDocumentosView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateDocumentosView = Backbone.View.extend({

        el: '#documentos-create',
        template: _.template( ($('#add-documentos-tpl').html() || '') ),
        events: {
            'submit #form-documentos': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {      
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
            
            // Attributes 
            this.$wraperForm = this.$('#render-form-documentos');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
            
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );                
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();  
        },
        
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('documento.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
 * Class MainDocumentoView
 * @author KOI || @dropecamargo
 * @link http://koi-ti.com
 */

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainDocumentoView = Backbone.View.extend({
        el: '#documento-main',
        /**
         * Constructor Method
         */
        initialize: function () {

            this.$documentoSearchTable = this.$('#documento-search-table');
            
            this.$documentoSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('documento.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'documentos_codigo', name: 'documentos_codigo' },
                    { data: 'documentos_nombre', name: 'documentos_nombre' }
                ],
                buttons: [
                    { 
                        text: '<i class="fa fa-user-plus"></i> Nuevo documento', 
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                                window.Misc.redirect( window.Misc.urlFull( Route.route('documento.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('documento.show', {documento: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 1,
                        width: '30%'
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateDocumentoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateDocumentoView = Backbone.View.extend({

        el: '#documento-create',
        template: _.template( ($('#add-documento-tpl').html() || '') ),
        events: {
            'submit #form-documento': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {      
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
            
            // Attributes 
            this.$wraperForm = this.$('#render-form-documento');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
            
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );                
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();  
        },
        
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();  
            
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('documentos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
 * Class MainDocumentosView
 * @author KOI || @dropecamargo
 * @link http://koi-ti.com
 */

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainDocumentosView = Backbone.View.extend({
        el: '#documentos-main',
        /**
         * Constructor Method
         */
        initialize: function () {

            this.$documentosSearchTable = this.$('#documentos-search-table');
            
            this.$documentosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('documentos.index') ),
                columns: [
                    { data: 'documento_codigo', name: 'documento_codigo' },
                    { data: 'documento_nombre', name: 'documento_nombre' },
                    { data: 'folder_codigo', name: 'folder_codigo' },
                    { data: 'folder_id', name: 'folder_id' }
                ],
                buttons: [
                    { 
                        text: '<i class="fa fa-user-plus"></i> Nuevo documento', 
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                                window.Misc.redirect( window.Misc.urlFull( Route.route('documentos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('documentos.show', {documentos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 1,
                        width: '70%'
                    },
                    {
                        targets: 2,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            if(!_.isNull(full.folder_codigo) && !_.isUndefined(full.folder_codigo)) {
                                return '<a href="'+ window.Misc.urlFull( Route.route('folders.show', {folders: full.folder_id }) )  +'">' + data + '</a>';
                            }
                            return '';
                        }
                    },
                    {
                        targets: 3,
                        visible: false,
                        searchable: false
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateEmpresaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateEmpresaView = Backbone.View.extend({

        el: '#empresa-create',
        template: _.template( ($('#add-company-tpl').html() || '') ),
        templateName: _.template( ($('#tercero-name-tpl').html() || '') ),
        events: {
            'change input#tercero_nit': 'nitChanged',
            'change select#tercero_persona': 'personaChanged',
            'change select#tercero_actividad': 'actividadChanged',
            'submit #form-create-empresa': 'onStore'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$wraperForm = this.$('#render-form-empresa');

            // Events
            this.listenTo( this.model, 'change:id', this.render );
            this.listenTo( this.model, 'change:tercero_persona', this.renderName );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function(){

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // Reference to fields
            this.$dv = this.$('#tercero_digito');
            this.$retecree = this.$('#tercero_retecree');

            this.ready();
        },

        /**
        * render name
        */
        renderName: function (model, value, opts) {
            this.$('#content-render-name').html( this.templateName(this.model.toJSON()) );
            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

           	if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

       		if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        nitChanged: function(e) {
            var _this = this;

            $.ajax({
                url: window.Misc.urlFull(Route.route('terceros.dv')),
                type: 'GET',
                data: { tercero_nit: $(e.currentTarget).val() },
                beforeSend: function() {
                    window.Misc.setSpinner( _this.el );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.el );
                if(resp.success) {
                    // Dv
                    _this.$dv.val(resp.dv);
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.el );
                alertify.error(thrownError);
            });
        },

        personaChanged: function(e) {
        	this.model.set({ tercero_persona: $(e.currentTarget).val() });
        },

        actividadChanged: function(e) {
            var _this = this;

            $.ajax({
                url: window.Misc.urlFull(Route.route('terceros.rcree')),
                type: 'GET',
                data: { tercero_actividad: $(e.currentTarget).val() },
                beforeSend: function() {
                    window.Misc.setSpinner( _this.el );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.el );
                if(resp.success) {
                    // % cree
                    if(!_.isUndefined(resp.rcree) && !_.isNull(resp.rcree)){
                        _this.$retecree.html(resp.rcree);
                    }
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.el );
                alertify.error(thrownError);
            });
        },

        /**
        * Event Create Forum Post
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true} );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
	            // response success or error
	            var text = resp.success ? '' : resp.errors;
	            if( _.isObject( resp.errors ) ) {
	                text = window.Misc.parseErrors(resp.errors);
	            }

	            if( !resp.success ) {
	                alertify.error(text);
	                return;
	            }

                alertify.success('Empresa fue actualizada con éxito.');
	     	}
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateFacturaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateFacturaView = Backbone.View.extend({

        el: '#factura-create',
        template: _.template(($('#add-facturas-tpl').html() || '') ),

        events: {
            'click .submit-factura' : 'submitForm',
            'change #factura1_pedido' : 'referenceViewCollection',
            'submit #form-factura1' :'onStore',
            'click .a-click-modals-lotes-koi': 'renderModals',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-factura');

            this.detalleFactura = new app.DetalleFactura2Collection();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
            
            this.ready(); 
        },
        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-factura1');

        },
        /**
        * Event submit factura1
        */
        submitForm: function (e) {
            this.$form.submit();
        },
        /*
        *Reference fetch
        */
        referenceViewCollection: function(e, data){
            e.preventDefault();
            this.detalleFacturaView = new app.FacturaDetalle2View( {
                collection: this.detalleFactura,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'id_pedido': data
                    }
               }
            }); 
        },
        /**
        * Event Create facturas
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                if (!this.detalleFactura.valid().success) {
                    return alertify.error('Por favor seleccionar LOTES en el vinculo de la serie del producto');
                }
                var data = $.extend({}, window.Misc.formToJson( e.target ) , this.detalleFactura.totalize());
                    data.factura2 = this.detalleFactura.toJSON();
                this.model.save( data, {patch: true, silent: true} );
            }   
        },  
        renderModals:function(e){
            e.preventDefault();
            var model = _.find(this.detalleFactura.models, function(item) {
                return item.get('id') == this.$(e.currentTarget).attr('data-id');
            });
            var data = {}; 
                data.producto_serie = model.get('producto_serie');
                data.producto_nombre = model.get('producto_nombre');
                data.tipo = 'S';
                data.producto_id = model.get('producto_id');
                data.sucursal = this.$('#factura1_sucursal').val();
            window.Misc.evaluateActionsInventory({
                'data': data,
                'wrap': this.$el,
                'callback': (function (_this) {
                    return function ( action , tipo)
                    {      
                        // Open InventarioActionView
                        if ( _this.inventarioActionView instanceof Backbone.View ){
                            _this.inventarioActionView.stopListening();
                            _this.inventarioActionView.undelegateEvents();
                        }

                        _this.inventarioActionView = new app.InventarioActionView({
                            model: _this.model,
                            collection: _this.detalleFactura,
                            parameters: {
                                data: data,
                                action: action,
                                tipo: tipo
                            }
                        });
                        _this.inventarioActionView.render();
                    }
                })(this)
            });  
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('facturas.show', { facturas: resp.id})) );

        }
    });
})(jQuery, this, this.document);

/**
* Class DetalleFacturasItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleFacturasItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-factura-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class FacturaDetalle2View  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.FacturaDetalle2View = Backbone.View.extend({

        el: '#browse-detalle-factura-list',
        events: {
            'click .item-detallefactura-remove': 'removeOne',
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References th totalize
            this.$costo = this.$('#precio-product');
            this.$descuento = this.$('#descuento-product');
            this.$iva = this.$('#iva-product');
            this.$total = this.$('#totalize-product');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);
            if( !_.isUndefined(this.parameters.dataFilter.id) && !_.isNull(this.parameters.dataFilter.id) || !_.isUndefined(this.parameters.dataFilter.id_pedido) && !_.isNull(this.parameters.dataFilter.id_pedido) ){
                this.confCollection.data.id = this.parameters.dataFilter.id;
                this.confCollection.data.codigo_pedido = this.parameters.dataFilter.id_pedido;
                this.collection.fetch( this.confCollection );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object detallePedidocModel Model instance
        */
        addOne: function (detalleFacturaModel) {
            var view = new app.DetalleFacturasItemView({
                model: detalleFacturaModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            detalleFacturaModel.view = view;
            this.$el.append( view.render().el );
            //setter subtotal de registro 
            this.setterModel(detalleFacturaModel);
            //totalize actually in collection
            this.totalize();
        },
        /**
        * stores detalleFactura
        * @param form element
        */
        storeOne: function (data) {      
            var _this = this;
                
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            var model = _.find(this.collection.models, function(item){
                return item.get('producto_serie') == data.producto_serie;
            });
            if(model instanceof Backbone.Model ) {
                model.save(data, {
                    success : function(model, resp) {
                        if(!_.isUndefined(resp.success)) {
                            window.Misc.removeSpinner( _this.parameters.wrapper );

                            // response success or error
                            var text = resp.success ? '' : resp.errors;
                            if( _.isObject( resp.errors ) ) {
                                text = window.Misc.parseErrors(resp.errors);
                            }

                            if( !resp.success ) {
                                alertify.error(text);
                                return;
                            }
                        }
                    },
                    error : function(model, error) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        alertify.error(error.statusText)
                    }
                });
            }
        },
        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.$el.find('tbody').html('');
            this.collection.forEach( this.addOne, this );
        },

        /**
        *Render totales the collection
        */
        totalize: function(){
            var data = this.collection.totalize();
            this.$costo.empty().html(window.Misc.currency(data.factura1_bruto) );
            this.$descuento.empty().html(window.Misc.currency(data.factura1_descuento) );
            this.$iva.empty().html(window.Misc.currency(data.factura1_iva) );
            this.$total.empty().html(window.Misc.currency(data.factura1_total) );
        },

        /**
        *setter factura_subtotal the model
        */
        setterModel: function(model){
            var iva = model.get('factura2_iva_porcentaje')  / 100;
                costo = (parseFloat(model.get('factura2_costo'))) * parseFloat(model.get('factura2_cantidad'));
                descuento = (parseFloat(model.get('factura2_descuento_valor'))) * parseFloat(model.get('factura2_cantidad') ) ;
                ivaValor = (costo-descuento) * iva ;

            model.set('factura2_subtotal', (costo - descuento) + parseFloat(model.get('factura2_iva_valor')));
            model.set('factura2_iva_valor', ivaValor);
        },
        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();
            var resource = $(e.currentTarget).attr("data-resource");
                model = this.collection.get(resource);

            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);

                // totalize actually in collection
                this.totalize();
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class MainFacturasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainFacturasView = Backbone.View.extend({

        el: '#facturas-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$facturasSearchTable = this.$('#facturas-search-table');
            
            this.$facturasSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('facturas.index') ),
                columns: [ 
                    { data: 'factura1_numero', name: 'factura1_numero' },
                    { data: 'puntoventa_prefijo', name: 'puntoventa_prefijo' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'tercero_nit', name: 'tercero_nit' },
                    { data: 'tercero_nombre', name: 'factura1_tercero' },
                    { data: 'tercero_razonsocial', name: 'tercero_razonsocial'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' },
                    { data: 'factura1_fh_elaboro', name: 'factura1_fh_elaboro' },
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva factura',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('facturas.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('facturas.show', {facturas: full.id }) )  +'">' + data + '</a>';
                        },
                       
                    },
                    {
                        targets: [5,6,7,8,9],
                        visible: false,
                    },
                ],
                fnRowCallback: function( row, data ) {
                    if ( data.factura1_anulada == 1 ) {
                        $(row).css( {"color":"red"} );
                    }else{
                        $(row).css( {"color":"green"} );
                    }
                }
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ShowFacturaView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowFacturaView = Backbone.View.extend({

        el: '#factura-show',

        events:{
            'click .anular-factura': 'anularFactura',
            'click .export-factura': 'exportFactura'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$wraperForm = this.$('#render-factura-show');
            this.$templateFactura3 = _.template( ($('#add-factura3-item-tpl').html() || '') ); 
            // Model exist
            if( this.model.id != undefined ) {

                this.detalleFactura = new app.DetalleFactura2Collection();
                this.detalleFacturaList = new app.DetalleFactura3List();

                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle factura list
            this.itemsListView = new app.FacturaDetalle2View({
                collection: this.detalleFactura,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                        id: this.model.get('id')
                    }
                }
            });

            // Detalle list
            this.Factura3ListView = new app.Factura3ListView({
                collection: this.detalleFacturaList,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    call: 'detalle',
                    template : this.$templateFactura3,
                    dataFilter: {
                        'factura1': this.model.get('id'),
                    }
                }
            });
        },

        /*
        * Redirect anular factura
        */  
        anularFactura:function(e){
            e.preventDefault();
            var _this = this;
            var anularConfirm = new window.app.ConfirmWindow({
                parameters: {
                    dataFilter: { id: _this.model.get('id') },
                    template: _.template( ($('#factura-close-confirm-tpl').html() || '') ),
                    titleConfirm: 'Anular factura de venta',
                    onConfirm: function () {
                        // Anular factura
                        $.ajax({
                            url: window.Misc.urlFull( Route.route('facturas.anular', { facturas: _this.model.get('id') }) ),
                            type: 'GET',
                            beforeSend: function() {
                                window.Misc.setSpinner( _this.el );
                            }
                        })
                        .done(function(resp) {
                            window.Misc.removeSpinner( _this.el );

                            if(!_.isUndefined(resp.success)) {
                                // response success or error
                                var text = resp.success ? '' : resp.errors;
                                if( _.isObject( resp.errors ) ) {
                                    text = window.Misc.parseErrors(resp.errors);
                                }

                                if( !resp.success ) {
                                    alertify.error(text);
                                    return;
                                }

                                window.Misc.successRedirect( resp.msg, window.Misc.urlFull(Route.route('facturas.show', { facturas: _this.model.get('id') })) );
                            }
                        })
                        .fail(function(jqXHR, ajaxOptions, thrownError) {
                            window.Misc.removeSpinner( _this.el );
                            alertify.error(thrownError);
                        });
                    }
                }
            });
            anularConfirm.render();
        },

        /*
        * Redirect export pdf
        */
        exportFactura:function(e){
            e.preventDefault();

            // Redirect to pdf
            window.open( window.Misc.urlFull( Route.route('facturas.exportar', { facturas: this.model.get('id') })) );
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateFolderView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateFolderView = Backbone.View.extend({

        el: '#folder-create',
        template: _.template( ($('#add-folder-tpl').html() || '') ),
        events: {
            'submit #form-folder': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {      
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);
            
            // Attributes 
            this.$wraperForm = this.$('#render-form-folder');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
            
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );                
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();  
        },
        
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('folders.show', { folders: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/*
 * Class MainfoldersView
 * @author KOI || @dropecamargo
 * @link http://koi-ti.com
 **/

//global app blackbone
app || (app={});

(function ($, window, document, undefined) {

    app.MainFoldersView = Backbone.View.extend({
        el: '#folders-main',
        /*
         * Constructor method
         */
        initialize: function () {

            this.$foldersSearchTable = this.$('#folders-search-table');

            this.$foldersSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('folders.index') ),
                columns: [
                    { data: 'folder_codigo', name: 'folder_codigo' },
                    { data: 'folder_nombre', name: 'folder_nombre' }
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-user-plus"></i> Agregar Folder',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                                window.Misc.redirect(window.Misc.urlFull( Route.route('folders.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('folders.show', {folders: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateGestionCobroView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateGestionCobroView = Backbone.View.extend({

        el: '#gestioncobro-create',
        template: _.template( ($('#add-gestioncobro-tpl').html() || '') ),
        events: {
            'submit #form-gestioncobro': 'onStore',
            'change .gestioncobro-koi-tercero': 'changeListDeuda'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-gestioncobro');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },
        /**
        * Event change whit reference factura3
        */
        changeListDeuda: function(e){
            e.preventDefault();
            var tercero = this.$(e.target).attr('data-tercero');
            
            // List deuda
            this.$templateTercero = _.template( ($('#add-tercero-cartera-tpl').html() || '') );
            this.detalleCarteraTercero = new app.DetalleCarteraTercero();

            // Detalle list deudas
            this.factura3ListView = new app.Factura3ListView({
                collection: this.detalleCarteraTercero,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    call: 'tercero',
                    template: this.$templateTercero,
                    dataFilter: {
                        'tercero': tercero,
                    }
                }
            });
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initTimePicker == 'function' )
                window.initComponent.initTimePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('gestioncobros.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainGestionCobrosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainGestionCobrosView = Backbone.View.extend({

        el: '#gestioncobros-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$gestioncobrosSearchTable = this.$('#gestioncobros-search-table');

            this.$gestioncobrosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('gestioncobros.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptocob_nombre', name: 'gestioncobro_conceptocob' },
                    { data: 'tercero_nombre', name: 'gestioncobro_tercero' },
                    { data: 'gestioncobro_fh', name: 'gestioncobro_fh'},
                    { data: 'gestioncobro_proxima', name: 'gestioncobro_proxima'},
                    { data: 'tercero_nit', name: 'tercero_nit'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1'},
                    { data: 'tercero_nombre2', name: 'tercero_nombre2'},
                    { data: 'tercero_apellido1', name: 'tercero_apellido1'},
                    { data: 'tercero_apellido2', name: 'tercero_apellido2'},
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva gestion de cobro',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('gestioncobros.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        searchable:false,
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('gestioncobros.show', {gestioncobros: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [5,6,7,8,9],
                        visible: false
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateGestionComercialView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateGestionComercialView = Backbone.View.extend({

        el: '#gestioncomercial-create',
        template: _.template( ($('#add-gestioncomercial-tpl').html() || '') ),
        events: {
            'submit #form-gestioncomercial': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-gestioncomercial');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initTimePicker == 'function' )
                window.initComponent.initTimePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('gestionescomercial.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainGestionesComercialView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainGestionesComercialView = Backbone.View.extend({

        el: '#gestionescomercial-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$gestionescomercialSearchTable = this.$('#gestionescomercial-search-table');

            this.$gestionescomercialSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('gestionescomercial.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptocom_nombre', name: 'gestioncomercial_conceptocom' },
                    { data: 'tercero_nombre', name: 'gestioncomercial_tercero' },
                    { data: 'gestioncomercial_fh', name: 'gestioncomercial_fh'},
                    { data: 'tercero_nit', name: 'tercero_nit'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1'},
                    { data: 'tercero_nombre2', name: 'tercero_nombre2'},
                    { data: 'tercero_apellido1', name: 'tercero_apellido1'},
                    { data: 'tercero_apellido2', name: 'tercero_apellido2'},
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva gestión comercial',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('gestionescomercial.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        searchable:false,
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('gestionescomercial.show', {gestionescomercial: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [4,5,6,7,8],
                        visible: false
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateGestionTecnicoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateGestionTecnicoView = Backbone.View.extend({

        el: '#gestiontecnico-create',
        template: _.template( ($('#add-gestiontecnico-tpl').html() || '') ),
        events: {
            'submit #form-gestiontecnico': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-gestiontecnico');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initTimePicker == 'function' )
                window.initComponent.initTimePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('gestionestecnico.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainGestionesTecnicoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainGestionesTecnicoView = Backbone.View.extend({

        el: '#gestionestecnico-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$gestionestecnicoSearchTable = this.$('#gestionestecnico-search-table');

            this.$gestionestecnicoSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('gestionestecnico.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'conceptotec_nombre', name: 'gestiontecnico_conceptotec' },
                    { data: 'tercero_nombre', name: 'gestiontecnico_tercero' },
                    { data: 'gestiontecnico_fh', name: 'gestiontecnico_fh'},
                    { data: 'tercero_nit', name: 'tercero_nit'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1'},
                    { data: 'tercero_nombre2', name: 'tercero_nombre2'},
                    { data: 'tercero_apellido1', name: 'tercero_apellido1'},
                    { data: 'tercero_apellido2', name: 'tercero_apellido2'},
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva gestión tecnica',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('gestionestecnico.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        searchable:false,
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('gestionestecnico.show', {gestionestecnico: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [4,5,6,7,8],
                        visible: false
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateImpuestoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateImpuestoView = Backbone.View.extend({

        el: '#impuesto-create',
        template: _.template( ($('#add-impuesto-tpl').html() || '') ),
        events: {
            'submit #form-impuesto': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-impuesto');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            if( typeof window.initComponent.initSpinner == 'function' )
                window.initComponent.initSpinner();  
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('impuestos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainImpuestosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainImpuestosView = Backbone.View.extend({

        el: '#impuestos-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$impuestosSearchTable = this.$('#impuestos-search-table');

            this.$impuestosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('impuestos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'impuesto_nombre', name: 'impuesto_nombre' },
                    { data: 'impuesto_activo', name: 'impuesto_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva impuesto',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('impuestos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('impuestos.show', {impuestos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateLineaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateLineaView = Backbone.View.extend({

        el: '#lineas-create',
        template: _.template( ($('#add-linea-tpl').html() || '') ),
        events: {
            'submit #form-linea': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-linea');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('lineas.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainLineasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainLineasView = Backbone.View.extend({

        el: '#lineas-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$lineasSearchTable = this.$('#lineas-search-table');

            this.$lineasSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('lineas.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'linea_nombre', name: 'linea_nombre' },
                    { data: 'linea_activo', name: 'linea_activo' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nueva linea',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('lineas.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('lineas.show', {lineas: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '30%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class AppRouter  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.UserLoginView = Backbone.View.extend({

        el: '#login-box', 

        /**
        * Constructor Method
        */
        initialize : function() {
            //Init Attributes 
            this.$loginForm = $('#form-login-account');
            this.$loginForm.validator();
        },

        /*
        * Render View Element
        */
        render: function(){
            //
        }
    });


})(jQuery, this, this.document);

/**
* Class CreateMarcaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateMarcaView = Backbone.View.extend({

        el: '#marca-create',
        template: _.template( ($('#add-marca-tpl').html() || '') ),
        events: {
            'submit #form-marca': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-marca');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('marcas.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainMarcasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainMarcasView = Backbone.View.extend({

        el: '#marcas-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$marcasSearchTable = this.$('#marcas-search-table');

            this.$marcasSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('marcas.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'marca_nombre', name: 'marca_nombre' },
                    { data: 'marca_activo', name: 'marca_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva marca',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('marcas.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('marcas.show', {marcas: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateMedioPagoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateMedioPagoView = Backbone.View.extend({

        el: '#mediopago-create',
        template: _.template( ($('#add-mediopago-tpl').html() || '') ),
        events: {
            'submit #form-mediopago': 'onStore',
            'ifChecked #mediopago_ef': 'checkedEfectvo',
            'ifChecked #mediopago_ch': 'checkedCheque'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-mediopago');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // References check

            this.$checkch = this.$('#mediopago_ch');
            this.$checkef = this.$('#mediopago_ef');
            this.ready();
        },
        /**
        *
        */
        checkedCheque:function(e){
            e.preventDefault();
            var selected = $(e.target).is(':checked');
            
            if ( selected ) {
                this.$checkef.iCheck('uncheck');
            }
        },
        /**
        *
        */
        checkedEfectvo: function(e){
            e.preventDefault();
            var selected = $(e.target).is(':checked');
            
            if ( selected ) {
                this.$checkch.iCheck('uncheck');
            }
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('mediopagos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainMedioPagosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainMedioPagosView = Backbone.View.extend({

        el: '#mediopagos-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$mediopagosSearchTable = this.$('#mediopagos-search-table');

            this.$mediopagosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('mediopagos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'mediopago_nombre', name: 'mediopago_nombre' },
                    { data: 'mediopago_activo', name: 'mediopago_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo medio de pago',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('mediopagos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('mediopagos.show', {mediopagos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateModeloView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateModeloView = Backbone.View.extend({

        el: '#modelo-create',
        template: _.template( ($('#add-modelo-tpl').html() || '') ),
        events: {
            'submit #form-modelo': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-modelo');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Modelo
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );
            
            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('modelos.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainModelosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainModelosView = Backbone.View.extend({

        el: '#modelos-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$modelosSearchTable = this.$('#modelos-search-table');
            
            this.$modelosSearchTable.DataTable({
				
                dom:"<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('modelos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'modelo_nombre', name: 'modelo_nombre' },
                    { data: 'modelo_activo', name: 'modelo_activo'}
                ],
				buttons: [
					{
						text: '<i class="fa fa-plus"></i> Nuevo Modelo',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('modelos.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('modelos.show', {modelos: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [2],
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        }
                    },
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class MainModuloView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainModuloView = Backbone.View.extend({

        el: '#modulos-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$modulosSearchTable = this.$('#modulos-search-table');
            this.$modulosSearchTable.DataTable({
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('modulos.index') ),
                columns: [
                    { data: 'display_name', name: 'display_name'},
                    { data: 'name', name: 'name'}
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%'
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class MainMunicipioView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainMunicipioView = Backbone.View.extend({

        el: '#municipios-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$municipiosSearchTable = this.$('#municipios-search-table');

            this.$municipiosSearchTable.DataTable({
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('municipios.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [
                    { data: 'departamento_codigo', name: 'departamento.departamento_codigo'},
                    { data: 'departamento_nombre', name: 'departamento_nombre'},
                    { data: 'municipio_codigo', name: 'municipio_codigo' },
                    { data: 'municipio_nombre', name: 'municipio_nombre'},
                    { data: 'departamento_id', name: 'departamento_id'}
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%'
                    },
                    {
                        targets: 1,
                        width: '35%'
                    },
                    {
                        targets: 2,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('departamentos.show', {departamentos: full.departamento_id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 3,
                        width: '35%'
                    },
                    {
                        targets: 4,
                        visible: false,
                        searchable: false
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateNotaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateNotaView = Backbone.View.extend({

        el: '#nota-create',
        template: _.template( ($('#add-nota-tpl').html() || '') ),
        events: {
            'click .submit-nota': 'submitNota',
            'submit #form-nota': 'onStore',
            'change .change-concepto': 'changeConcepto',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-nota');
            this.detalleNotaList = new app.DetalleNotaList();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );

            this.ready();
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );
            this.$form = this.$('#form-nota');

            this.referenceViews();
        },

        /**
        * Event submit nota
        */
        submitNota: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.nota2 = this.detalleNotaList.toJSON();
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            //DetalleNotaList
            this.detalleNotasView = new app.DetalleNotasView( {
                collection: this.detalleNotaList,
                parameters: {
                    wrapper: this.$('#wrapper-detalle'),
                    edit: true,
                    dataFilter: {
                        'nota2': this.model.get('id')
                    }
               }
            });
        },

        changeConcepto: function(e){
            // Preparo sucursal
            var sucursal = this.$('#nota1_sucursal').val();
            if (sucursal == '')
                return alertify.error('Campo de sucursal se encuentra vacío por favor ingrese una sucursal');

            var data = window.Misc.formToJson( e.target );
                data.tercero = this.$('#nota1_conceptonota').attr('data-tercero');
                data.nota1_conceptonota = this.$('#nota1_conceptonota').val();
                data.sucursal = sucursal;
                data.call = 'nota';
            if( !_.isUndefined(data.nota2_documentos_doc) && !_.isNull(data.nota2_documentos_doc) && data.nota2_documentos_doc != ''){
                window.Misc.evaluateActionsCartera({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action )
                        {      
                            // Open CarteraActionView
                            if ( _this.carteraActionView instanceof Backbone.View ){
                                _this.carteraActionView.stopListening();
                                _this.carteraActionView.undelegateEvents();
                            }

                            _this.carteraActionView = new app.CarteraActionView({
                                model: _this.model,
                                collection: _this.detalleNotaList,
                                parameters: {
                                    data: data,
                                    action: action,
                                }
                            });
                            _this.carteraActionView.render();
                        }
                    })(this)
                });
            }
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('notas.show', { notas: resp.id}), { trigger:true }) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleNotaItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleNotaItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#add-detalle-nota-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class DetalleNotasView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleNotasView = Backbone.View.extend({

        el: '#browse-detalle-list',
        events: {
            'click .item-nota-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.parameters.wrapper

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$valor = this.$('#total');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.nota2) && !_.isNull(this.parameters.dataFilter.nota2) ){
                this.confCollection.data.nota2 = this.parameters.dataFilter.nota2;
                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view contact by model
        * @param Object detalleReciboModel Model instance
        */
        addOne: function (nota2Model) {
            var view = new app.DetalleNotaItemView({
                model: nota2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            nota2Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores recibi
        * @param form element
        */
        storeOne: function ( data ) {        
            var _this = this;

            if( !_.isUndefined(data.factura3_id) || !_.isUndefined(data.anticipo_id) || !_.isUndefined(data.chdevuelto_id) ){
                var valid = this.collection.validar(data);
                if(!valid.success){
                    this.totalize();
                    return;
                }
            }

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Add model in collection
            var nota2Model = new app.Nota2Model();
            nota2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
                
                // Update total
                this.totalize();
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$valor.length) {
                this.$valor.html( window.Misc.currency(data.valor) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( model, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });
})(jQuery, this, this.document);

/**
* Class MainNotaView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainNotaView = Backbone.View.extend({

        el: '#notas-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$notasSearchTable = this.$('#notas-search-table');
            
            this.$notasSearchTable.DataTable({
                dom:"<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('notas.index') ),
                columns: [ 
                    { data: 'id', name: 'id' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'nota1_observaciones', name: 'nota1_observaciones' }
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-user-plus"></i> Nueva Nota',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('notas.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('notas.show', {notas: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
            });
        },

    });
})(jQuery, this, this.document);

/**
* Class ShowNotaView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowNotaView = Backbone.View.extend({

        el: '#nota-show',
        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {
            	this.detalleNotaList = new app.DetalleNotaList();
                
                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
    		// Detalle asignaciones list
            this.detalleNotasView = new app.DetalleNotasView({
                collection: this.detalleNotaList,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                    	nota2: this.model.get('id')
                    }
                }
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class CreateOrdenView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined){

    app.CreateOrdenView = Backbone.View.extend({

        el: '#ordenes-create',
        template: _.template( ($('#add-orden-tpl').html() || '') ),
        events: {
            'click .submit-orden': 'submitOrden',
            'submit #form-orden': 'onStore',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
                attributes.edit = false;
            this.$el.html( this.template(attributes) );

            this.$form = this.$('#form-orden');

            // Spinner
            this.spinner = this.$('#spinner-main');

            // this ready
            this.ready();
        },
        
        /**
        *Event Click to Button from orden
        */
        submitOrden:function(e){
            this.$form.submit();
        },

        /**
        * Event Create Orden
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },  

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
            
            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
            
            if( typeof window.initComponent.initTimePicker == 'function' )
                window.initComponent.initTimePicker();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.spinner );
        },

        sendMail: function(){
            var _this = this;

            var sendMail = new window.app.ConfirmWindow({
                parameters: {
                    dataFilter: { tcontacto_email: _this.model.get('tcontacto_email') },
                    template: _.template( ($('#orden-sendmail-confirm-tpl').html() || '') ),
                    titleConfirm: 'Correo',
                    onConfirm: function () {
                        // Sendmail
                        $.ajax({
                            url: window.Misc.urlFull( Route.route('ordenes.mail', { ordenes : _this.model.get('id') }) ),
                            type: 'GET',
                            beforeSend: function() {
                                window.Misc.setSpinner( _this.spinner );
                            }
                        })
                        .done(function(resp) {
                            window.Misc.removeSpinner( _this.spinner );

                            if(!_.isUndefined(resp.success)) {
                                // response success or error
                                var text = resp.success ? '' : resp.errors;
                                if( _.isObject( resp.errors ) ) {
                                    text = window.Misc.parseErrors(resp.errors);
                                }

                                if( !resp.success ) {
                                    alertify.error(text);
                                    return;
                                }

                                alertify.success(resp.message);
                            }
                        })
                        .fail(function(jqXHR, ajaxOptions, thrownError) {
                            window.Misc.removeSpinner( _this.spinner );
                            alertify.error(thrownError);
                        });
                    }
                }
            });
            sendMail.render();
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.spinner );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // CreateOrdenView undelegateEvents
                if ( this.createOrdenView instanceof Backbone.View ){
                    this.createOrdenView.stopListening();
                    this.createOrdenView.undelegateEvents();
                }

                // Redirect to edit orden
                Backbone.history.navigate(Route.route('ordenes.edit', { ordenes: resp.id}), { trigger:true });

                // Sendmail
                this.sendMail();
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class EditOrdenView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.EditOrdenView = Backbone.View.extend({

        el: '#ordenes-create',
        template: _.template( ($('#add-orden-tpl').html() || '') ),
        templateRemision: _.template( ($('#show-remision-tpl').html() || '') ),
        events: {
        	'click .submit-orden': 'submitOrden',
            'submit #form-orden': 'onStore',
            
        	'click .submit-visitas': 'submitVisita',
            'submit #form-visitas': 'onStoreVisita',

            'click .click-add-remision': 'submitRemision',
            'submit #form-remision': 'clickAddRemision',

            'click .submit-legalizacion': 'submitLegalizacion',
            'submit #form-legalizacion': 'clickAddlegalizacion',

            'change .sum-cantidad': 'changeCantidad',

            'click .click-cerrar-orden': 'clickCloseOrden',
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            _.bindAll(this, 'onCompleteLoadFile', 'onSessionRequestComplete');

        	//Model Exists
            this.visita = new app.VisitaCollection();
            this.remision = new app.RemisionCollection();
            this.remrepu = new app.RemRepuCollection();

            // Initialize
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );

            this.cantidad = {};
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            	attributes.edit = true;

            this.$el.html( this.template(attributes) );

            this.$form = this.$('#form-orden');
            this.$modalCreate =  $('#modal-create-remision');

            this.$formvisitasp = this.$('#form-visitas');
            this.$formremision = this.$('#form-remision');
            this.$formlegalizacion = this.$('#form-legalizacion');

            // Spinner
            this.spinner = this.$('#spinner-main');
            this.$uploaderFile = this.$('#fine-uploader');

            // Reference views and uploadPictures
            this.referenceViews();
            this.uploadPictures();

            // to fire plugins
            this.ready();
		},

		/**
        *Event Click to Button from orden
        */
        submitOrden:function(e){
            this.$form.submit();
        },

        /**
        * Event Create cotizacion
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        referenceViews:function(){
            this.visitasView = new app.VisitasView( {
                collection: this.visita,
                parameters: {
                    edit: true,
                    wrapper: this.$('#wrapper-visitas'),
                    dataFilter: {
                        'orden_id': this.model.get('id')
                    }
                }
            });

            this.remisionView = new app.RemisionView( {
                collection: this.remision,
                parameters: {
                    wrapper: this.$('#wrapper-remision'),
                    dataFilter: {
                        'orden_id': this.model.get('id')
                    }
                }
            });

            this.remrepuView = new app.RemRepuView( {
                collection: this.remrepu,
                el: $('#browse-legalizacion-list'),
                parameters: {
                    call: 'index',
                    wrapper: this.$('#wrapper-legalizacion'),
                    dataFilter: {
                        'orden_id': this.model.get('id')
                    }
                }
            });
        },

        /*
        * Event Click to Button from visita
        */
        submitVisita:function(e){
            this.$formvisitasp.submit();
        },

        /**
        * Event Create visita
        */
        onStoreVisita: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.visita.trigger( 'store', data );
            }
        },

        /*
        * Event Click to Button from remision
        */
        submitRemision:function(e){
            this.$formremision.submit();
        },

        /*
        * Event add remision
        */
        clickAddRemision:function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Data sucursal y tecnico
                var data = window.Misc.formToJson( e.target );
                    data.orden_id = this.model.get('id');
                
                this.$modalCreate.modal('show');

                // Open TecnicoActionView
                if ( this.tecnicoActionView instanceof Backbone.View ){
                    this.tecnicoActionView.stopListening();
                    this.tecnicoActionView.undelegateEvents();
                }

                this.tecnicoActionView = new app.TecnicoActionView({
                    model: this.model,
                    collection: this.remision,
                    parameters: {
                        data: data,
                        remrepu2: this.remrepu,
                    }
                });

                this.tecnicoActionView.render();
            }
        },

        /*
        * Event Click to Button from legalizacion
        */
        submitLegalizacion:function(e){
            this.$formlegalizacion.submit();
        },

        /**
        * UploadPictures
        */
        uploadPictures: function(e) {
            var _this = this;

            this.$uploaderFile.fineUploader({
                debug: false,
                template: 'qq-template',
                session: {
                    endpoint: window.Misc.urlFull( Route.route('ordenes.imagenes.index') ),
                    params: {
                        'orden_id': _this.model.get('id')
                    },
                    refreshOnRequest: false
                },
                request: {
                    inputName: 'file',
                    endpoint: window.Misc.urlFull( Route.route('ordenes.imagenes.index') ),
                    params: {
                        '_token': $('meta[name="csrf-token"]').attr('content'),
                        'orden_id': _this.model.get('id')
                    }
                },
                deleteFile: {
                    enabled: true,
                    forceConfirm: true,
                    confirmMessage: '¿Esta seguro de que desea eliminar este archivo de forma permanente? {filename}',
                    endpoint: window.Misc.urlFull( Route.route('ordenes.imagenes.index') ),
                    params: {
                        '_token': $('meta[name="csrf-token"]').attr('content'),
                        'orden_id': _this.model.get('id')
                    }
                },
                validation: {
                    itemLimit: 5,
                    sizeLimit: ( 4 * 1024 ) * 1024, // 4mb,
                    allowedExtensions: ['jpeg', 'jpg', 'png']
                },
                messages: {
                    typeError: '{file} extensión no valida. Extensiones validas: {extensions}.',
                    sizeError: '{file} es demasiado grande, el tamaño máximo del archivo es {sizeLimit}.'
                },
                callbacks: {
                    onComplete: _this.onCompleteLoadFile,
                    onSessionRequestComplete: _this.onSessionRequestComplete
                }
            });
        },

        /**
        * complete upload of file
        * @param Number id
        * @param Strinf name
        * @param Object resp
        */
        onCompleteLoadFile: function (id, name, resp) {

            var $itemFile = this.$uploaderFile.fineUploader('getItemByFileId', id);
            this.$uploaderFile.fineUploader('setUuid', id, resp.id);
            this.$uploaderFile.fineUploader('setName', id, resp.name);
                
            var previewLink = this.$uploaderFile.fineUploader('getItemByFileId', id).find('.preview-link');
            previewLink.attr("href", resp.url);
        },

        onSessionRequestComplete: function (id, name, resp){
            
            _.each( id, function ( value, key){
                var previewLink = this.$uploaderFile.fineUploader('getItemByFileId', key).find('.preview-link');
                previewLink.attr("href", value.thumbnailUrl);
            }, this);
        },

        /*
        * Event add remision
        */
        clickAddlegalizacion: function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var _this = this;
                    data = window.Misc.formToJson( e.target );
                    data.orden_id = this.model.get('id');

                // legalizacion
                $.ajax({
                    url: window.Misc.urlFull( Route.route( 'ordenes.detalle.remrepuestos.legalizacion' ) ),
                    data: data,
                    type: 'POST',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.spinner );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.spinner );
                    if(!_.isUndefined(resp.success)) {
                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        alertify.success('Se guardo con exito la legalización.');
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.spinner );
                    alertify.error(thrownError);
                });
            }
        },

        /**
        *
        */
        clickCloseOrden: function(e){
            e.preventDefault();
            var _this = this;
            // Cerrar orden
            $.ajax({
                url: window.Misc.urlFull( Route.route('ordenes.cerrar', { ordenes: _this.model.get('id') }) ),
                type: 'GET',
                beforeSend: function() {
                    window.Misc.setSpinner( _this.spinner );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.spinner );

                if(!_.isUndefined(resp.success)) {
                    // response success or error
                    var text = resp.success ? '' : resp.errors;
                    if( _.isObject( resp.errors ) ) {
                        text = window.Misc.parseErrors(resp.errors);
                    }

                    if( !resp.success ) {
                        alertify.error(text);
                        return;
                    }

                    window.Misc.successRedirect( resp.msg, window.Misc.urlFull(Route.route('ordenes.show', { ordenes: _this.model.get('id') })) );
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.spinner );
                alertify.error(thrownError);
            });
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initTimePicker == 'function' )
                window.initComponent.initTimePicker();

            if( typeof window.initComponent.initFineUploader == 'function' )
                window.initComponent.initFineUploader();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.spinner );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.spinner );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

				// Redirect to show view                
				window.Misc.redirect( window.Misc.urlFull( Route.route('ordenes.edit', { ordenes: resp.id}) ) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainOrdenesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainOrdenesView = Backbone.View.extend({

        el: '#orden-main',
        events: {
            'click .btn-search': 'search',
            'click .btn-clear': 'clear'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // References
            this.$ordenesSearchTable = this.$('#orden-search-table');
            this.$searchordenOrden = this.$('#searchorden_orden_id');
            this.$searchordenTercero = this.$('#searchorden_tercero');
            this.$searchordenTerceroName = this.$('#searchorden_tercero_nombre');
            this.$searchordenEstado = this.$('#searchorden_orden_estado');

            this.ordenesSearchTable = this.$ordenesSearchTable.DataTable({
                dom: "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('ordenes.index') ),
                    data: function( data ) {
                        data.persistent = true;
                        data.id = _this.$searchordenOrden.val();
                        data.tercero_nit = _this.$searchordenTercero.val();
                        data.tercero_nombre = _this.$searchordenTerceroName.val();
                        data.orden_abierta = _this.$searchordenEstado.val();
                    }
                },
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'orden_fecha_elaboro', name: 'orden_fecha_elaboro' },
                    { data: 'orden_hora_elaboro', name: 'orden_hora_elaboro' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },


                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        searchable: false,
                        render: function ( data, type, full, row ) {
                            
                            return '<a href="'+ window.Misc.urlFull( Route.route('ordenes.show', {ordenes: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                ],
                fnRowCallback: function( row, data ) {
                    if ( parseInt(data.orden_abierta) ) {
                        $(row).css( {"color":"#00a65a"} );
                    }else{
                        $(row).css( {"color":"red"} );
                    }
                }
            });
        },

        search: function(e) {
            e.preventDefault();

            this.ordenesSearchTable.ajax.reload();
        },

        clear: function(e) {
            e.preventDefault();

            this.$searchordenOrden.val('');
            this.$searchordenTercero.val('');
            this.$searchordenTerceroName.val('');
            this.$searchordenEstado.val('');

            this.ordenesSearchTable.ajax.reload();
        },
    });

})(jQuery, this, this.document);

/**
* Class RemisionItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.RemisionItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#remision-item-list-tpl').html() || '') ),
        templateInfo: _.template( ($('#remision-show-detail-tpl').html() || '') ),
        events: {
            'click .item-remsion-show-info': 'showDetailRemision'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            //Init Attributes
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.$modalInfo = $('#modal-remision-show-info-component');
            this.remrepu = new app.RemRepuCollection();
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        },

        showDetailRemision: function(e){
            var attributes = this.model.toJSON();
            // Render info
            this.$modalInfo.find('.content-modal').empty().html( this.templateInfo( attributes ) );
            this.el = this.$modalInfo.find('#browse-legalizacion-list');

            // Open modal
            this.$modalInfo.modal('show');

            this.referenceViews();
        },

        referenceViews: function(){
            this.remrepuView = new app.RemRepuView( {
                collection: this.remrepu,
                el: this.el,
                parameters: {
                    call: 'show',
                    dataFilter: {
                        remrepu2_remrepu1: this.model.get('id')
                    }
                }
            });
        },
    });

})(jQuery, this, this.document);
/**
* Class RemisionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.RemisionView = Backbone.View.extend({

        el: '#browse-orden-remision-list',
        events: {
               // 'click .item-remrepu-remove': 'removeOne'
        },
        parameters: {
            wrapper:false,
            call: null,
            edit:false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: {orden_id: this.parameters.dataFilter.orden_id}, reset: true });
        },

        /*
        * Render View Element
        */
        render: function() {
        },

        /**
        * Render view contact by model
        * @param Object contactModel Model instance
        */
        addOne: function (remRepuModel) {
            var view = new app.RemisionItemView({
                model: remRepuModel,
                parameters: {
                    call: this.parameters.call,
                }
            });
            remRepuModel.view = view;
            this.$el.prepend( view.render().el );
            
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        storeOne: function (data) {
            var _this = this;

            // Set Spinner
            window.Misc.setSpinner( this.el );

            // Add model in collection
            var remRepuModel = new app.RemRepuModel();
            remRepuModel.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.el );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.el );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);

            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }
                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.clearForm( $('#form-remision') );
            }
        }
   });

})(jQuery, this, this.document);

/**
* Class RemRepuItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.RemRepuItemView = Backbone.View.extend({

        tagName: 'tr',
        template: null,
        parameters: {
            wrapper: null,
            edit: false,
            call: null,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            //Init Attributes
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            if( this.parameters.call == 'index'){
                this.template = _.template( ($('#legalizacion-item-list-tpl').html() || '') );
            }else{
                this.template = _.template( ($('#remrepu-item-list-tpl').html() || '') );
            }

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        },
    });

})(jQuery, this, this.document);
/**
* Class RemRepuView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.RemRepuView = Backbone.View.extend({

        el: null,
        events: {
           'click .item-remrepu-remove': 'removeOne'
        },
        parameters: {
            wrapper: false,
            edit: false,
            call: null,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.el = this.parameters.el;

            if( !_.isUndefined(this.parameters.dataFilter) && !_.isNull(this.parameters.dataFilter) ){
                this.confCollection.data = this.parameters.dataFilter;
                this.collection.fetch( this.confCollection );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
        },

        /**
        * Render view contact by model
        * @param Object contactModel Model instance
        */
        addOne: function (remRepu2Model) {
            var view = new app.RemRepuItemView({
                model: remRepu2Model,
                parameters: {
                    edit: this.parameters.edit,
                    call: this.parameters.call
                }
            });

            remRepu2Model.view = view;
            this.$el.prepend( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.$el.find('tbody').html('');
            this.collection.forEach( this.addOne, this );
        },

        storeOne: function (data) {
            var _this = this;

            // var legalizacion = this.collection.storeLegalizacion( data, this.parameters.wrapper );
            // if(!legalizacion.success){
            //     return;
            // }

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Prepare data
            data.orden_id = this.parameters.dataFilter.orden_id;

            // Add model in collection
            var remRepu2Model = new app.RemRepu2Model();
            remRepu2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);

            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
            
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }
                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.clearForm( $('#form-remrepu') );
            }
        }
   });

})(jQuery, this, this.document);

/**
* Class ShowOrdenView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowOrdenView = Backbone.View.extend({

        el: '#orden-show',

        /**
        * Constructor Method
        */
        initialize : function() {
            _.bindAll(this, 'onSessionRequestComplete');

            this.visita = new app.VisitaCollection();
            this.remision = new app.RemisionCollection();
            this.$uploaderFile = this.$('#fine-uploader');

            // Reference views
            this.uploadPictures();
            this.referenceViews();
        },

        /**
        * UploadPictures
        */
        uploadPictures: function(e) {
            var _this = this;

            this.$uploaderFile.fineUploader({
                debug: false,
                template: 'qq-template',
                session: {
                    endpoint: window.Misc.urlFull(Route.route('ordenes.imagenes.index')),
                    params: {
                        'orden_id': _this.model.get('id')
                    },
                    refreshOnRequest: false
                },
                allowMultipleItems: false,
                callbacks: {
                    onSessionRequestComplete: _this.onSessionRequestComplete,
                }
            });
        },

        onSessionRequestComplete: function (id, name, resp){
            this.$uploaderFile.find('.qq-upload-button').remove();
            this.$uploaderFile.find('.qq-upload-drop-area').remove();
            _.each( id, function (item, i){
                var previewLink = this.$uploaderFile.fineUploader('getItemByFileId', i).find('.preview-link');
                previewLink.attr("href", item.thumbnailUrl);
            }, this);
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            this.visitasView = new app.VisitasView( {
                collection: this.visita,
                parameters: {
                    call: 'show',
                    edit:false,
                    wrapper: this.$('#wrapper-visitas'),
                    dataFilter: {
                        'orden_id': this.model.get('id')
                    }
               }
            });

            this.remisionView = new app.RemisionView( {
                collection: this.remision,
                parameters: {
                    dataFilter: {
                        'orden_id': this.model.get('id')
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class TecnicoActionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.TecnicoActionView = Backbone.View.extend({

        el: '#orden-content-section',

        // Add remision
        templateAdd: _.template(($('#add-remision-tpl').html() || '')),

        events: {
            'click .click-store-remsion': 'onStoreRemision',
            'click .click-add-item': 'submitForm',
            'submit #form-remrepu': 'onStoreItem',
        },
        parameters: {
            data: {},
            action: {}
        },

        /**
        * Constructor Method
        */
        initialize : function( opts ) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Prepare collection
            this.remrepu = new app.RemRepuCollection();

            this.$modalCreate =  this.$('#modal-create-remision');
            this.$form =  this.$('#form-remrepu');

            this.listenTo( this.collection, 'sync', this.responseServer );
        },

        /*
        * Render View Element
        */
        render: function() {
            this.$modalCreate.find('.content-modal').empty().html( this.templateAdd() );
            this.el = this.$('#browse-legalizacions-list');

            this.referenceView();
		},

        /**
        * Collection remrepu View
        */
        referenceView: function(){
            this.remRepuView = new app.RemRepuView( {
                collection: this.remrepu,
                el: this.el,
                parameters: {
                    edit: true,
                    call: 'store',
                    dataFilter: {
                        'remrepu2_remrepu1': 'remrepu2_remrepu1',
                    }
                }
            });
        },

        /**
        * Sumbit form
        */
        submitForm: function(e){
            this.$form.submit();
        },

        /**
        * On store in collection
        */
        onStoreItem: function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.remrepu.trigger( 'store', data );
            }
        },

        /**
        * Store Remision (RemRepu1)
        */
        onStoreRemision: function(e){
            e.preventDefault();

            // Prepare data
            var data = [];
                data.detalle = this.remrepu.toJSON();
                data.remrepu_orden = this.model.get('id');
                data.tecnico = this.parameters.data.remrempu1_tecnico;
                data.sucursal = this.parameters.data.remrempu1_sucursal;

            this.collection.trigger( 'store', data );
        },

    	/**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }
                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                this.parameters.remrepu2.fetch({ data: {orden_id: this.parameters.data.orden_id}, reset: true });
                this.$modalCreate.modal('hide');
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class VisitaItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.VisitasItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#visita-item-list-tpl').html() || '') ),
        templateInfo: _.template( ($('#show-info-visita-tpl').html() || '') ),
        events: {
           'click .item-visita-show-info': 'showInfoVisita'
        },
        parameters: {
            edit: false,
            last: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){

            //Init Attributes
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //this.parameters.wrapper
            this.$modalInfo = $('#modal-visita-show-info-component');
            
            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
                attributes.last = false;
                
            if (this.parameters.last == this.model.get('id')) {
                attributes.last = true;
            }
            this.$el.html( this.template(attributes) );
            
            return this;
        },

        /*
        * Show detalle visita 
        */

        showInfoVisita: function(){
            var attributes = this.model.toJSON();
            // Render info
            this.$modalInfo.find('.content-modal').empty().html( this.templateInfo( attributes ) );
            // this.$wrapperVisitasp = this.$modalInfo.find('#browse-orden-visitasp-show-list');
            // Open modal
            this.$modalInfo.modal('show');
        },


    });

})(jQuery, this, this.document);
/**
* Class VisitasView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.VisitasView = Backbone.View.extend({

        el: '#browse-visitas-list',
        events: {
               'click .item-visita-remove': 'removeOne'
        },
        parameters: {
            wrapper:false,
            edit:false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: {orden_id: this.parameters.dataFilter.orden_id}, reset: true });
           
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object contactModel Model instance
        */
        addOne: function (visitaModel) {
            var model = this.collection.at(this.collection.length -1);
            var view = new app.VisitasItemView({
                model: visitaModel,
                parameters: {
                    edit: this.parameters.edit,
                    last: model.get('id')
                }
            });
            visitaModel.view = view;
            this.$el.prepend( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        storeOne: function (data) {
            var _this = this;

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Prepare data
            data.visita_orden = this.parameters.dataFilter.orden_id;

            // Add model in collection
            var visitaModel = new app.VisitaModel();
            visitaModel.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);

                        var model = _this.collection.at(_this.collection.length -2);
                        _this.$wrappertd = _this.$el.find("#td_"+model.get('id'));
                        _this.$wrappertd.find('a').remove();
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.collection.get(resource),
                _this = this;

            if ( model instanceof Backbone.Model ) {
                model.destroy({
                    success : function(model, resp) {
                        if(!_.isUndefined(resp.success)) {
                            window.Misc.removeSpinner( _this.parameters.wrapper );
                            if( !resp.success ) {
                                alertify.error(resp.errors);
                                return;
                            }
                            model.view.remove();
                            var model = _this.collection.at(_this.collection.length -1);
                            _this.$wrappertd = _this.$el.find("#td_"+model.get('id'));
                            _this.$wrappertd.html("<a class='btn btn-default btn-xs item-visita-remove' data-resource='"+ model.get('id')+"'><span><i class='fa fa-times'></i></span></a>");
                        }
                    }
                });
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class MainPaisesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPaisesView = Backbone.View.extend({

        el: '#paises-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$paisesSearchTable = this.$('#paises-search-table');

            this.$paisesSearchTable.DataTable({
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('paises.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'pais_codigo', name: 'pais_codigo' },
                    { data: 'pais_nombre', name: 'pais_nombre'},
                ],
                columnDefs: [
                    {
                        targets: 0,
                        searchable:false,
                        width: '15%',
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreatePedidoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreatePedidoView = Backbone.View.extend({

        el: '#pedido-create',
        template: _.template(($('#add-pedido-tpl').html() || '') ),
        events: {
            'submit #form-pedido' :'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-pedido');
            
            this.detallePedido = new app.DetallePedidoCollection();
            
            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },


        /*
        * Render View Element
        */
        render: function() {
                        
            var attributes = this.model.toJSON();
            attributes.edit = false;
            this.$wraperForm.html( this.template(attributes) );
            this.$form = this.$('#form-pedido');
            this.$formItem = this.$('#form-detalle-pedido');

            // Reference views
            this.referenceViews();
            
            this.ready();
        },

        referenceViews:function(){ 

            this.detallePedidosView = new app.DetallePedidosView( {
                collection: this.detallePedido,
                parameters: {
                    edit: true,
                    wrapper: this.el,
                    dataFilter: {
                        'pedido_id': this.model.get('id')
                    }
               }
            });
        },

        /**
        * Event Create Pedido
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                data.pedido_id = this.model.get('id');  
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }

                // EditPedidoView undelegateEvents
                if ( this.editPedidoView instanceof Backbone.View ){
                    this.editPedidoView.stopListening();
                    this.editPedidoView.undelegateEvents();
                }

                // Redirect to edit pedido
                Backbone.history.navigate(Route.route('pedidos.edit', { pedidos: resp.pedido_id}), { trigger:true });
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class DetallePedidoItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetallePedidoItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-pedidodetalle-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){

            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class DetallePedidosView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetallePedidosView = Backbone.View.extend({

        el: '#browse-detalle-pedido-list',
        events: {
            'click .item-detallepedido-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);

            if( !_.isUndefined(this.parameters.dataFilter.pedido_id) && !_.isNull(this.parameters.dataFilter.pedido_id) ){
                this.confCollection.data.pedido_id = this.parameters.dataFilter.pedido_id;
                this.collection.fetch( this.confCollection );
            }
            
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object detallePedidoModel Model instance
        */
        addOne: function (detallePedidoModel) {
            var view = new app.DetallePedidoItemView({
                model: detallePedidoModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            detallePedidoModel.view = view;
            this.$el.append( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores detallePedido
        * @param form element
        */
        storeOne: function (data) {
            var _this = this
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );
            
            // Prepare data
            data.pedido2_pedido1 = this.parameters.dataFilter.pedido_id;
            
            
            // Add model in collection
            var detallepedidoModel = new app.PedidoDetalleModel();
            detallepedidoModel.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.collection.get(resource),
                _this = this;

            if ( model instanceof Backbone.Model ) {
                model.destroy({
                    success : function(model, resp) {
                        if(!_.isUndefined(resp.success)) {
                            window.Misc.removeSpinner( _this.parameters.wrapper );

                            if( !resp.success ) {
                                alertify.error(resp.errors);
                                return;
                            }

                            model.view.remove();
                        }
                    }
                });
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

    /**
* Class EditPedidoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.EditPedidoView = Backbone.View.extend({
        el: '#pedido-create',
        template: _.template(($('#add-pedido-tpl').html() || '') ),
        events: {
            'click .submit-pedido' :'submitPedido',
            'click .close-pedido' :'closePedido',
            'click .cancel-pedido' :'cancelPedido',
            'submit #form-pedido' :'onStore',
            'submit #form-detalle-pedido' :'onStoreDetalle'

        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-pedido');
            
            this.detallePedido = new app.DetallePedidoCollection();
            this.bitacora = new app.BitacoraCollection();
            
            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Render View Element
        */
        render: function() {
                        
            var attributes = this.model.toJSON();
            attributes.edit = true;
            this.$wraperForm.html( this.template(attributes) );
            this.$form = this.$('#form-pedido');
            this.$formItem = this.$('#form-detalle-pedido');

            // Reference views
            this.referenceViews();
            
            this.ready();
        },

     	/**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },


        /**
        * reference to views
        */
        referenceViews:function(){ 

            this.detallePedidosView = new app.DetallePedidosView( {
                collection: this.detallePedido,
                parameters: {
                    edit: true,
                    wrapper: this.el,
                    dataFilter: {
                        'pedido_id': this.model.get('id')
                    }
               }
            }); 
            
            this.bitacoraView = new app.BitacoraView( {
                collection: this.bitacora,
                parameters: {
                    edit: true,
                    wrapper: this.el,
                    dataFilter: {
                        'document_id': this.model.get('id'),
                        'document_type': this.model.get('pedido1_documentos')
                    }
               }
            });
        },

        /**
        * Event submit Pedido
        */
        submitPedido: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Pedido
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },
        /**
        * Event Create DetallePedido
        */
        onStoreDetalle: function (e) {

            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.detallePedido.trigger('store' , data);
            }
        },
        
        /**
        * Close pedido
        */
        closePedido: function (e) {
            e.preventDefault();

            var _this = this;
            var cancelConfirm = new window.app.ConfirmWindow({
                parameters: {
                    dataFilter: { id_pedido: _this.model.get('id') },
                    template: _.template( ($('#pedido-close-confirm-tpl').html() || '') ),
                    titleConfirm: 'Cerrar Pedido',
                    onConfirm: function () {
                        // Close pedido
                        $.ajax({
                            url: window.Misc.urlFull( Route.route('pedidos.cerrar', { pedidos: _this.model.get('id') }) ),
                            type: 'GET',
                            beforeSend: function() {
                                window.Misc.setSpinner( _this.el );
                            }
                        })
                        .done(function(resp) {
                            window.Misc.removeSpinner( _this.el );

                            if(!_.isUndefined(resp.success)) {
                                // response success or error
                                var text = resp.success ? '' : resp.errors;
                                if( _.isObject( resp.errors ) ) {
                                    text = window.Misc.parseErrors(resp.errors);
                                }

                                if( !resp.success ) {
                                    alertify.error(text);
                                    return;
                                }

                                window.Misc.successRedirect( resp.msg, window.Misc.urlFull(Route.route('pedidos.show', { pedidos: _this.model.get('id') })) );
                            }
                        })
                        .fail(function(jqXHR, ajaxOptions, thrownError) {
                            window.Misc.removeSpinner( _this.el );
                            alertify.error(thrownError);
                        });
                    }
                }
            });

            cancelConfirm.render();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }

                // Redirect to edit pedido
               window.Misc.redirect( window.Misc.urlFull(Route.route('pedidos.edit', { pedidos: resp.id})));
               
            }
        }
    });
})(jQuery, this, this.document);

/**
* Class MainPedidosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPedidosView = Backbone.View.extend({

        el: '#pedido-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$productosSearchTable = this.$('#pedido-search-table');
            
            this.$productosSearchTable.DataTable({
                dom:"<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('pedidos.index') ),
                columns: [ 
                    { data: 'pedido1_numero', name: 'pedido1_numero' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'pedido1_fecha', name: 'pedido1_fecha' },
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_nombre2', name: 'tercero_apellido1' },
                    { data: 'tercero_nombre2', name: 'tercero_apellido2' },
                    { data: 'tercero_nit', name: 'tercero_nit' }
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-user-plus"></i> Nuevo Pedido',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('pedidos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%',
                        render: function ( data, type, full, row ) {
                            if (full.pedido1_cerrado || full.pedido1_anulado) {
                                return '<a href="'+ window.Misc.urlFull( Route.route('pedidos.show', {pedidos: full.id}) )  +'">' + data + ' <span class="label label-warning"> Ver</span></a>';
                            }else{
                                return '<a href="'+ window.Misc.urlFull( Route.route('pedidos.edit', {pedidos: full.id }) )  +'">' + data +' <span class="label label-success"> Abierto</span></a>';
                            }
                        },
                       
                    },
                    {
                        targets:2,
                        searchable:false
                    },
                    {
                        targets:[4,5,6,7,8],
                        visible:false
                    },
                ]
            });
        },

    });
})(jQuery, this, this.document);

/**
* Class ShowPedidoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowPedidoView = Backbone.View.extend({

        el: '#pedido-show',
        template: _.template(($('#show-pedido-tpl').html() || '') ),
        events: {
            'click .cancel-pedido' :'cancelPedido'
        },

        /**
        * Constructor Method
        */
        initialize : function() {

            // Attributes
            this.$wraperForm = this.$('#render-pedido-show');

            // Model exist
            if( this.model.id != undefined ) {
                this.detallePedido = new app.DetallePedidoCollection();
                this.bitacora = new app.BitacoraCollection();
            }
            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {
                        
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // Reference views
            this.referenceViews();
            
            this.ready();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            
            //Detalle Pedido view Collection
            this.detallePedidosView = new app.DetallePedidosView( {
                collection: this.detallePedido,
                parameters: {
                    edit: false,
                    wrapper: this.el,
                    dataFilter: {
                        'pedido_id': this.model.get('id')
                    }
               }
            }); 
            
            //Bitacora view Collection
            this.bitacoraView = new app.BitacoraView( {
                collection: this.bitacora,
                parameters: {
                    edit: true,
                    wrapper: this.el,
                    dataFilter: {
                        'document_id': this.model.get('id'),
                        'document_type': this.model.get('pedido1_documentos')
                    }
               }
            });
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck(); 

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },
        /**
        * Cancel pedido
        */
        cancelPedido: function (e) {
            e.preventDefault();

            var _this = this;
            var cancelConfirm = new window.app.ConfirmWindow({
                parameters: {
                    dataFilter: { id_pedido: _this.model.get('id') },
                    template: _.template( ($('#pedido-cancel-confirm-tpl').html() || '') ),
                    titleConfirm: 'Anular Pedido',
                    onConfirm: function () {
                        // Cancel pedido
                        $.ajax({
                            url: window.Misc.urlFull( Route.route('pedidos.anular', { pedidos: _this.model.get('id') }) ),
                            type: 'GET',
                            beforeSend: function() {
                                window.Misc.setSpinner( _this.el );
                            }
                        })
                        .done(function(resp) {
                            window.Misc.removeSpinner( _this.el );

                            if(!_.isUndefined(resp.success)) {
                                // response success or error
                                var text = resp.success ? '' : resp.errors;
                                if( _.isObject( resp.errors ) ) {
                                    text = window.Misc.parseErrors(resp.errors);
                                }

                                if( !resp.success ) {
                                    alertify.error(text);
                                    return;
                                }

                                window.Misc.successRedirect( resp.msg, window.Misc.urlFull(Route.route('pedidos.index')) );
                            }
                        })
                        .fail(function(jqXHR, ajaxOptions, thrownError) {
                            window.Misc.removeSpinner( _this.el );
                            alertify.error(thrownError);
                        });
                    }
                }
            });

            cancelConfirm.render();
        },
        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
               
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class CreatePedidoscView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreatePedidoscView = Backbone.View.extend({

        el: '#pedidosc-create',
        template: _.template(($('#add-pedidosc-tpl').html() || '') ),
        templateDetailt: _.template(($('#add-detailt-pedidosc-tpl').html() || '') ),

        events: {
            
            'click .submit-pedidosc' : 'submitForm',
            'submit #form-pedidoc1' :'onStore',
            'submit #form-detalle-pedidoc' :'onStoreItem',
            'change .desc-porcentage': 'changePorcentage',
            'change .desc-value': 'changeValue',
            'change .desc-finally': 'changeFinally',
            'ifChecked .desc': 'changeRadioBtn',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
           
            // Attributes
            this.$wraperForm = this.$('#render-form-pedidosc');

            this.detallePedidoc = new app.PedidocDetalleCollection();
            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
            
            this.ready(); 
        },


        /*
        * Render View Element
        */
        render: function() {
                        
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-pedidoc1');
            this.$divDetalle = this.$('#detalle-pedidoc1');

            //Render form detalle pedidoc
            this.$divDetalle.empty().html( this.templateDetailt( ) );
            
            this.$formDetalle = this.$('#form-detalle-pedidoc');
            //Reference views
            this.referenceViews();
        },
        /*
        * References the collection
        */
        referenceViews:function(){ 
            this.detallePedidocView = new app.PedidocDetalleView( {
                collection: this.detallePedidoc,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'id': this.model.get('id')
                    }
               }
            });
        },
        /**
        * Event submit pedidoc1
        */
        submitForm: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Ajuste
        */
        onStore: function (e) {
            
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = $.extend({}, window.Misc.formToJson( e.target ) , this.detallePedidoc.totalize());
                    data.detalle = this.detallePedidoc.toJSON();
                this.model.save( data, {patch: true, silent: true} );
            }   
        },
        /**
        *Event store item the collection
        */
        onStoreItem: function(e){
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = $.extend({}, window.Misc.formToJson( e.target ) );
                    data.sucursal = this.$('#pedidoc1_sucursal').val();
                this.detallePedidoc.trigger( 'store', data);
                window.Misc.clearForm(this.$formDetalle);
            }
        },
        /**
        *Event change input porcentage 
        */
        changePorcentage: function(e){
            e.preventDefault();
            $('#desc_porcentage').iCheck('check');
            $('#desc_value').iCheck('uncheck');
            $('#desc_finally').iCheck('uncheck');

            // Make discount 
            this.doDiscount('porcentaje');
        },       
        /**
        *Event change  input value
        */
        changeValue: function(e){
            e.preventDefault();
            $('#desc_value').iCheck('check');
            $('#desc_porcentage').iCheck('uncheck');
            $('#desc_finally').iCheck('uncheck');

            this.doDiscount('value');
        },       
        /**
        *Event change  input finally
        */
        changeFinally: function(e){
            e.preventDefault();
            $('#desc_finally').iCheck('check');
            $('#desc_porcentage').iCheck('uncheck');
            $('#desc_value').iCheck('uncheck');

            this.doDiscount('finally');
        },
        /**
        *Event change radio btn 
        */
        changeRadioBtn: function(e){
            e.preventDefault();
            var radioBtn = this.$(e.currentTarget).attr('id');

            if( radioBtn == 'desc_porcentage'){
                this.$('#pedidoc2_descuento_porcentaje').prop('readonly',false);
                this.$('#pedidoc2_descuento_valor').prop('readonly',true);
                this.$('#pedidoc2_precio_venta').prop('readonly',true);
                this.$('#pedidoc2_precio_venta').prop('');
            }else if(radioBtn == 'desc_value'){
                this.$('#pedidoc2_descuento_valor').prop('readonly',false);
                this.$('#pedidoc2_descuento_porcentaje').prop('readonly',true);
                this.$('#pedidoc2_precio_venta').prop('readonly',true);
            }else{
                this.$('#pedidoc2_precio_venta').prop('readonly',false);
                this.$('#pedidoc2_descuento_porcentaje').prop('readonly',true);
                this.$('#pedidoc2_descuento_valor').prop('readonly',true);
            }

        },
        /**
        *   Se aplican las operaciones matematicas para allar los descuentos
        */
        doDiscount: function(caseDiscount){
            switch(caseDiscount){
                case 'porcentaje':
                    var descuento = (this.$('#pedidoc2_descuento_porcentaje').val())/100;
                        valor = this.$('#pedidoc2_costo').inputmask('unmaskedvalue');    
                        descuento = descuento * valor;
                    this.$('#pedidoc2_descuento_valor').val(descuento);
                    this.$('#pedidoc2_precio_venta').val(valor-descuento);
                    break;
                case 'value':
                    var valor = this.$('#pedidoc2_descuento_valor').inputmask('unmaskedvalue');
                        costo = this.$('#pedidoc2_costo').inputmask('unmaskedvalue');    
                        venta = (costo-valor)*100;
                        descuento = 100 - (venta / costo);
                    this.$('#pedidoc2_precio_venta').val(costo-valor);
                    this.$('#pedidoc2_descuento_porcentaje').val(descuento.toFixed(2));
                    break;
                case 'finally':
                    var valor =  (this.$('#pedidoc2_precio_venta').inputmask('unmaskedvalue'))*100;
                        precio = this.$('#pedidoc2_costo').inputmask('unmaskedvalue');
                        descuento = 100 - (valor/precio);
                    this.$('#pedidoc2_descuento_porcentaje').val(descuento.toFixed(2));
                    this.$('#pedidoc2_descuento_valor').val(precio - (valor/100));
                    break;
            }
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
            
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('pedidosc.index')) );
        }
    });

})(jQuery, this, this.document);

/**
* Class PedidocDetalleView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.PedidocDetalleView = Backbone.View.extend({

        el: '#browse-detalle-pedidoc-list',
        events: {
            'click .item-detallepedidoc-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References th totalize
            this.$costo = this.$('#precio-product');
            this.$descuento = this.$('#descuento-product');
            this.$iva = this.$('#iva-product');
            this.$total = this.$('#totalize-product');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);

            if( !_.isUndefined(this.parameters.dataFilter.id) && !_.isNull(this.parameters.dataFilter.id) ){
                this.confCollection.data.id = this.parameters.dataFilter.id;
                this.collection.fetch( this.confCollection );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object detallePedidocModel Model instance
        */
        addOne: function (detallePedidocModel) {
            var view = new app.DetallePedidoscItemView({
                model: detallePedidocModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            detallePedidocModel.view = view;
            this.$el.append( view.render().el );

            //setter subtotal de registro 
            this.setterModel(detallePedidocModel);
            //totalize actually in collection
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.$el.find('tbody').html('');
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores detallePedido
        * @param form element
        */
        storeOne: function (form) {          
            var _this = this,
                data = form ;
                data.id = this.parameters.dataFilter.id;
            
            var valid = this.collection.validarExists(data);
            if(!valid.success){
                this.totalize();
                return;
            }
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );
            
            // Add model in collection
            var detallePedidocModel = new app.PedidoscDetalleModel();
            detallePedidocModel.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },
        
        /**
        *Render totales the collection
        */
        totalize: function(){
            var data = this.collection.totalize();
            this.$costo.empty().html(window.Misc.currency(data.pedidoc1_bruto) );
            this.$descuento.empty().html(window.Misc.currency(data.pedidoc1_descuento) );
            this.$iva.empty().html(window.Misc.currency(data.pedidoc1_iva) );
            this.$total.empty().html(window.Misc.currency(data.pedidoc1_total) );
        },
        /**
        *setter pedidoc_subtotal and iva_valor the model
        */
        setterModel: function(model){
            var iva = model.get('pedidoc2_iva_porcentaje')  / 100;
                descuento = (parseFloat(model.get('pedidoc2_descuento_valor'))) * parseFloat(model.get('pedidoc2_cantidad') ) ;
                costo = (parseFloat(model.get('pedidoc2_costo'))) * parseFloat(model.get('pedidoc2_cantidad'));
                ivaValor = (costo-descuento) * iva ;
            model.set('pedidoc2_iva_valor', ivaValor);
            model.set('pedidoc2_subtotal', (costo - descuento) + model.get('pedidoc2_iva_valor'));
        },
        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
                model = this.collection.get(resource);

            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);

                // totalize actually in collection
                this.totalize();
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class DetallePedidoscItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetallePedidoscItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-pedidoc-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class MainPedidoscView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPedidoscView = Backbone.View.extend({

        el: '#pedidosc-main',
        events: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$ajustesSearchTable = this.$('#pedidosc-search-table');
            
            this.$ajustesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('pedidosc.index') ),
                columns: [ 
                    { data: 'id', name: 'id' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'pedidoc1_fecha', name: 'pedidoc1_fecha' },
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo pedido',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('pedidosc.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%',
                        render: function ( data, type, full, row ) {
                           return '<a href="'+ window.Misc.urlFull( Route.route('pedidosc.show', {pedidosc: full.id }) )  +'">' + data + '</a>';
                        },
                       
                    }, 
                ]
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class ShowPedidocView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowPedidocView = Backbone.View.extend({

        el: '#pedidoc-show',

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$wraperForm = this.$('#render-pedidoc-show');
            // Model exist
            if( this.model.id != undefined ) {

                this.detallePedidoc = new app.PedidocDetalleCollection();
                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle pedidoc list
            this.itemsListView = new app.PedidocDetalleView({
                collection: this.detallePedidoc,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                        id: this.model.get('id')
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class MainPermisoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPermisoView = Backbone.View.extend({

        el: '#permisos-main',

        /**
        * Constructor Method
        */
        initialize : function() {
            
            this.$permisosSearchTable = this.$('#permisos-search-table');
            this.$permisosSearchTable.DataTable({
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('permisos.index') ),
                columns: [
                    { data: 'name', name: 'name'},
                    { data: 'display_name', name: 'display_name'},
                    { data: 'description', name: 'description' },
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%'
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreatePlanCuentaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreatePlanCuentaView = Backbone.View.extend({

        el: '#plancuentas-create',
        template: _.template( ($('#add-plancuentas-tpl').html() || '') ),
        events: {
            'change input#plancuentas_cuenta': 'cuentaChanged',
            'submit #form-plancuentas': 'onStore'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            // Attributes
            this.$wraperForm = this.$('#render-form-plancuentas');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$nivel = this.$('#plancuentas_nivel');

            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
		},

        cuentaChanged: function(e) {
            var _this = this;

            $.ajax({
                url: window.Misc.urlFull(Route.route('plancuentas.nivel')),
                type: 'GET',
                data: { plancuentas_cuenta: $(e.currentTarget).val() },
                beforeSend: function() {
                    _this.$nivel.val('');
                    window.Misc.setSpinner( _this.el );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.el );
                if(resp.success) {
                    if(_.isUndefined(resp.nivel) || _.isNull(resp.nivel) || !_.isNumber(resp.nivel)) {
                        alertify.error('Ocurrió un error definiendo el nivel de la cuenta, por favor verifique el número de caracteres.');
                    }
                    _this.$nivel.val(resp.nivel);
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.el );
                alertify.error(thrownError);
            });
        },

        /**
        * Event Create Cuenta
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('plancuentas.show', { plancuentas: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainPlanCuentasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});
(function ($, window, document, undefined) {

    app.MainPlanCuentasView = Backbone.View.extend({

        el: '#plancuentas-main',
        events: {
            'click .btn-search': 'search',
            'click .btn-clear': 'clear'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$plancuentasSearchTable = this.$('#plancuentas-search-table');
            this.$searchCuenta = this.$('#plancuentas_cuenta');
            this.$searchName = this.$('#plancuentas_nombre');

            this.plancuentasSearchTable = this.$plancuentasSearchTable.DataTable({
                dom: "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('plancuentas.index') ),
                    data: function( data ) {
                        data.persistent = true;
                        data.plancuentas_cuenta = _this.$searchCuenta.val();
                        data.plancuentas_nombre = _this.$searchName.val();
                    }
                },
                columns: [
                    { data: 'plancuentas_cuenta', name: 'plancuentas_cuenta' },
                    { data: 'plancuentas_nivel', name: 'plancuentas_nivel' },
                    { data: 'plancuentas_nombre', name: 'plancuentas_nombre' },
                    { data: 'plancuentas_naturaleza', name: 'plancuentas_naturaleza' },
                    { data: 'plancuentas_tercero', name: 'plancuentas_tercero' }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('plancuentas.show', {plancuentas: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 1,
                        width: '10%'
                    },
                    {
                        targets: 3,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) == 'D' ? 'Débito' : 'Crédito';
                        }
                    },
                    {
                        targets: 4,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        }
                    }
                ]
			});
        },

        search: function(e) {
            e.preventDefault();

            this.plancuentasSearchTable.ajax.reload();
        },

        clear: function(e) {
            e.preventDefault();

            this.$searchCuenta.val('');
            this.$searchName.val('');

            this.plancuentasSearchTable.ajax.reload();
        },
    });

})(jQuery, this, this.document);

/**
* Class MainPresupuestoAsesorView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPresupuestoAsesorView = Backbone.View.extend({

        el: '#presupuestoasesor-create',
        template: _.template( ($('#add-presupuesto-tpl').html() || '') ),
        events: {
            'change .change-asesor': 'changeAsesor',
            'submit #form-presupuestoasesor': 'onStore',
            'change .change-input-presupuesto': 'changePresupuesto'
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            this.$wraperForm = this.$('#render-div-asesor');

            // Reference to fields
            this.$asesor = this.$('#presupuestoasesor_asesor');
            this.$ano = this.$('#presupuestoasesor_ano');

            this.meses = {};
            this.subcategorias = {};
        },

        /**
        * fires libraries js
        */
        ready: function () {
            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
        },


        /**
        * Change input presupuesto
        */
        changePresupuesto: function (e) {

            var mes = $(e.currentTarget).attr("data-mes"),
                subcategoria = $(e.currentTarget).attr("data-subcategoria");

            // Total subcategoria
            this.totalCategoria(subcategoria);

            // Total meses
            this.totalMes(mes);
        },

        totalCategoria: function(subcategoria) {
            var total = 0;
            _.each(this.meses, function(name, month) {
                total += parseFloat( this.$('#presupuestoasesor_valor_' + subcategoria + '_' + month).inputmask('unmaskedvalue') );
            });

            this.$('#presupuestoasesor_total_subcategoria_' + subcategoria).html( window.Misc.currency(total) );
        },

        totalMes: function(mes) {
            var total = 0;
            _.each(this.subcategorias, function(subcategoria) {
                total += parseFloat( this.$('#presupuestoasesor_valor_' + subcategoria.id + '_' + mes).inputmask('unmaskedvalue') );
            });

            this.$('#presupuestoasesor_total_mes_' + mes).html( window.Misc.currency(total) );
        },

        /**
        * Event store presupuestoasesor
        */
        onStore: function (e) {
            var _this = this;

            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                $.ajax({
                    type: "POST",
                    dataType: 'json',
                    url: window.Misc.urlFull(Route.route('presupuestoasesor.store')),
                    data: data,
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.el );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.el );
                    if(resp.success) {
                        alertify.success(resp.message);
                        return;
                        
                    }else{
                        if( !_.isObject( resp.errors ) ) {
                            alertify.error(JSON.stringify(resp.errors));
                            return;
                        }

                        var text = window.Misc.parseErrors(resp.errors);
                        alertify.error(text);
                        return;
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.el );
                    alertify.error(thrownError);
                });
            }
        },

        /**
        * Event Change Asesor
        */
        changeAsesor: function (e) {
        	var _this = this;

            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: window.Misc.urlFull(Route.route('presupuestoasesor.index')),
                data: { 
                    presupuestoasesor_asesor: _this.$asesor.val(),
                    presupuestoasesor_ano: _this.$ano.val()
                },
                beforeSend: function() {
                    window.Misc.setSpinner( _this.el );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( _this.el );
                if(resp.success) {
                    _this.meses = resp.meses;
                    _this.subcategorias = resp.subcategorias;
                    
                    // asesor
                    _this.$wraperForm.html( _this.template( resp ) );
                    _this.ready();
                }else{
                    var text = window.Misc.parseErrors(resp.errors);
                    alertify.error(text);
                    return;
                }
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( _this.el );
                alertify.error(thrownError);
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreatePrioridadView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreatePrioridadView = Backbone.View.extend({

        el: '#prioridad-create',
        template: _.template( ($('#add-prioridad-tpl').html() || '') ),
        events: {
            'submit #form-prioridad': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-prioridad');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('prioridades.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainPrioridadesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPrioridadesView = Backbone.View.extend({

        el: '#prioridades-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$prioridadesSearchTable = this.$('#prioridades-search-table');

            this.$prioridadesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('prioridades.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'prioridad_nombre', name: 'prioridad_nombre' },
                    { data: 'prioridad_activo', name: 'prioridad_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva prioridad',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('prioridades.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('prioridades.show', {prioridades: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return data ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateProductoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateProductoView = Backbone.View.extend({

        el: '#productos-create',
        template: _.template( ($('#add-producto-tpl').html() || '') ),
        events: {
            'ifChecked #producto_maneja_serie': 'serieChange',
            'ifChecked #producto_metrado': 'metradoChange',
            'ifChecked #producto_vence': 'venceChange',
            'submit #form-productos': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-producto');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // References
            this.$inputSerie = this.$("#producto_maneja_serie");
            this.$inputMetrado = this.$("#producto_metrado");
            this.$inputVence = this.$("#producto_vence");

            this.ready();
        },

        /*
        *Function change check Product handles serie
        */
        serieChange: function (e) {

            var selected = $(e.target).is(':checked');
            if( selected ) {
                this.$inputMetrado.iCheck('uncheck');
                this.$inputVence.iCheck('uncheck');
            }
        },
        
        /*
        *Function change check Product vence
        */
        venceChange: function (e) {

            var selected = $(e.target).is(':checked');
            if( selected ) {
                this.$inputMetrado.iCheck('uncheck');
                this.$inputSerie.iCheck('uncheck');
            }
        },

        /*
        *Function change check Product metrado
        */
        metradoChange: function (e) {
            var selected = $(e.target).is(':checked');
            if( selected ) {
                this.$inputSerie.iCheck('uncheck');
                this.$inputVence.iCheck('uncheck');
            }
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();   

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();  
           
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('productos.show', { productos: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainProductosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainProductosView = Backbone.View.extend({

        el: '#productos-main',
        events: {
            'click .btn-search': 'search',
            'click .btn-clear': 'clear'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$productosSearchTable = this.$('#productos-search-table');
            this.$searchSerie = this.$('#producto_serie');
            this.$searchName = this.$('#producto_nombre');

            this.productosSearchTable = this.$productosSearchTable.DataTable({
                dom: "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('productos.index') ),
                    data: function( data ) {
                        data.persistent = true;
                        data.producto_serie = _this.$searchSerie.val();
                        data.producto_nombre = _this.$searchName.val();
                    }
                },
                columns: [
              
                    { data: 'producto_serie', name: 'producto_serie' },
                    { data: 'producto_referencia', name: 'producto_referencia' },
                    { data: 'producto_nombre', name: 'producto_nombre' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo producto',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('productos.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('productos.show', {productos: full.id }) )  +'">' + data + '</a>';
                        },
                       
                    }
                ]
			});
        },

        search: function(e) {
            e.preventDefault();

            this.productosSearchTable.ajax.reload();
        },

        clear: function(e) {
            e.preventDefault();

            this.$searchSerie.val('');
            this.$searchName.val('');

            this.productosSearchTable.ajax.reload();
        },
    });

})(jQuery, this, this.document);

/**
* Class ProdbodeItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ProdbodeItemView = Backbone.View.extend({
        template: _.template( ($('#add-seriesprodbode-tpl').html() || '') ),

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class ProdbodeListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ProdbodeListView = Backbone.View.extend({

        el: '#render-series',
        events: {
        },
        parameters: {
        	wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: {producto_id: this.parameters.dataFilter.producto_id }, reset: true });
        },

        /*
        * Render View Element
        */
        render: function() {
        },
        /**
        * Render view contact by model
        * @param Object prodbodeModel Model instance
        */
        addOne: function (prodbodeModel) {
            var view = new app.ProdbodeItemView({
                model: prodbodeModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            prodbodeModel.view = view;
            this.$el.prepend( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class ShowProductosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowProductoView = Backbone.View.extend({

        el: '#content-show',
        template: _.template( ($('#add-ubicacion-tpl').html() || '') ),
        events: {
            'click .get-series': 'getSeries',
            'click .add-ubicacion': 'addUbicacion',
            'submit #form-ubicacion-component': 'updateComponent'
        },

        /**
        * Constructor Method
        */
        initialize: function() {
            this.prodbodeList = new app.ProdbodeList();
        },

        getSeries: function(e){
            e.preventDefault();
            // Model exist
            if( this.prodbodeList.length == 0 ) {
                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle asignaciones list
            this.prodbodeListView = new app.ProdbodeListView({
                collection: this.prodbodeList,
                parameters: {
                    wrapper: this.$('#wrapper-series'),
                    dataFilter: {
                        'producto_id': this.model.get('id')
                    }
                }
            });
        },
    });

})(jQuery, this, this.document);

/**
* Class CreatePuntoventaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreatePuntoventaView = Backbone.View.extend({

        el: '#puntosventa-create',
        template: _.template( ($('#add-puntoventa-tpl').html() || '') ),
        events: {
            'submit #form-puntosventa': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-puntosventa');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('puntosventa.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainPuntoventaView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainPuntoventaView = Backbone.View.extend({

        el: '#puntosventa-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$puntosventaSearchTable = this.$('#puntosventa-search-table');

            this.$puntosventaSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('puntosventa.index') ),
                columns: [
                    { data: 'puntoventa_nombre', name: 'puntoventa_nombre' },
                    { data: 'puntoventa_prefijo', name: 'puntoventa_prefijo' },
                    { data: 'puntoventa_resolucion_dian', name: 'puntoventa_resolucion_dian' },
                    { data: 'puntoventa_numero', name: 'puntoventa_numero' },
                    { data: 'puntoventa_activo', name: 'puntoventa_activo' },
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo punto de venta',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('puntosventa.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('puntosventa.show', {puntosventa: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateReciboView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateReciboView = Backbone.View.extend({

        el: '#recibo1-create',
        template: _.template(($('#add-recibo-tpl').html() || '') ),
        templateDetalleRecibo3: _.template(($('#add-recibomedio-tpl').html() || '') ),
        events: {
            'click .submit-recibo' :'submitFormRecibo',
            'submit #form-recibo1' :'onStore',
            'submit #form-recibo2' :'onStoreItem',
            'submit #form-recibo3' :'onStoreItem3',
            'change .change-concepto' :'changeConcepto',
            'change .change-medio-pago' :'changeMedioPago',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-recibo1');
            
            this.detalleReciboList = new app.DetalleReciboList();
            this.detalleReciboMedioPagoList = new app.DetalleRecibo3List();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );            
            
            this.ready();
        },


        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );
            this.$form = this.$('#form-recibo1');

            this.$concepto = this.$('#recibo2_conceptosrc');
            this.$naturaleza = this.$('#recibo2_naturaleza');
            this.$valor = this.$('#recibo2_valor');
            
            this.referenceViews();
        },

        /**
        * Event submit recibo1
        */
        submitFormRecibo: function (e) {
            this.$form.submit();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            //DetalleReciboList
            this.detalleRecibosView = new app.DetalleRecibosView( {
                collection: this.detalleReciboList,
                parameters: {
                    wrapper: this.$('#wrapper-recibo2'),
                    edit: true,
                    dataFilter: {
                        'recibo2': this.model.get('id')
                    }
               }
            });
            
            //DetalleRecibo3List
            this.detalleRecibos3View = new app.DetalleMedioPagoReciboView( {
                collection: this.detalleReciboMedioPagoList,
                parameters: {
                    edit: true,
                    dataFilter: {
                        'recibo3': this.model.get('id')
                    }
               }
            });
        },

        /*
        * Event Create recibo
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.recibo2 = this.detalleReciboList.toJSON();
                    data.recibo3 = this.detalleReciboMedioPagoList.toJSON();
                this.model.save( data, {patch: true, silent: true} );
            }   
        },

        /**
        * Event add item detalle recibo
        */
        onStoreItem: function(e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.detalleReciboList.trigger( 'store', data );

                this.$concepto.val('').trigger('change');
                this.$naturaleza.val('').trigger('change');
                this.$valor.val('');
            }
        },
        /**
        * Event add item detalle recibo3
        */
        onStoreItem3: function(e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                    data.recibo2 = this.detalleReciboList.toJSON();
                this.detalleReciboMedioPagoList.trigger( 'store', data );
            }
        },
        /*
        * Render concepo
        */
        changeConcepto: function(e){
            // Preparo sucursal
            var sucursal = this.$('#recibo1_sucursal').val();
            if (sucursal == '')
                return alertify.error('Campo de sucursal se encuentra vacío por favor ingrese una sucursal');

            var data = window.Misc.formToJson( e.target );
                data.tercero = this.$(e.currentTarget).attr('data-tercero');
                data.sucursal = sucursal;
                data.call = 'recibo';

            if( !_.isUndefined(data.recibo2_conceptosrc) && !_.isNull(data.recibo2_conceptosrc) && data.recibo2_conceptosrc != ''){
                window.Misc.evaluateActionsCartera({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action )
                        {      
                            // Open CarteraActionView
                            if ( _this.carteraActionView instanceof Backbone.View ){
                                _this.carteraActionView.stopListening();
                                _this.carteraActionView.undelegateEvents();
                            }

                            _this.carteraActionView = new app.CarteraActionView({
                                model: _this.model,
                                collection: _this.detalleReciboList,
                                parameters: {
                                    data: data,
                                    action: action,
                                }
                            });
                            _this.carteraActionView.render();
                        }
                    })(this)
                });
            }
        },
        /**
        * Render detalle del medio de pago 
        */
        changeMedioPago:function(e){
            e.preventDefault();

            // Preparo sucursal
            var sucursal = this.$('#recibo1_sucursal').val();
            if (sucursal == '')
                return alertify.error('Campo de sucursal se encuentra vacío por favor ingrese una sucursal');

            // References
            this.$detailMedio = this.$('#detail-medio-pago');
            this.$detailMedio.empty();
            var _this = this;
                medio = _this.$(e.currentTarget).val();
                attributes = this.model.toJSON();
            if (!_.isUndefined(medio) && !_.isNull(medio) && medio != '') {
                $.ajax({
                    type: 'GET',
                    url: window.Misc.urlFull(Route.route('mediopagos.show',{ mediopagos: medio })),
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.el );
                    }
                })
                .done(function(resp) {

                    window.Misc.removeSpinner( _this.el );
                    
                    attributes.resp = resp;
                    if (resp.mediopago_ch == 1) {
                        // Open CarteraActionView
                        if ( _this.carteraActionView instanceof Backbone.View ){
                            _this.carteraActionView.stopListening();
                            _this.carteraActionView.undelegateEvents();
                        }
                        // Obtengo id tercero del attr del select de concepto
                        resp.tercero = _this.$('#recibo2_conceptosrc').attr('data-tercero');
                        resp.recibo2 = _this.detalleReciboList.toJSON();
                        // Adjunto sucursal
                        resp.sucursal = sucursal;
                        
                        _this.carteraActionView = new app.CarteraActionView({
                            model: _this.model,
                            collection: _this.detalleReciboMedioPagoList,
                            parameters: {
                                data: resp,
                                action: 'mediopago',
                            }
                        });
                        _this.carteraActionView.render();

                    }else{  
                        _this.$detailMedio.empty().html( _this.templateDetalleRecibo3( attributes ) );
                    }

                    //Render form detalle medioPago
                    _this.ready();
                })       
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.el );
                    alertify.error(thrownError);
                });
            }
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initDatePicker == 'function' )
                window.initComponent.initDatePicker();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );
            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return; 
                }
            }
            window.Misc.redirect( window.Misc.urlFull( Route.route('recibos.show', { recibos: resp.id}), { trigger:true }) );
        }
    });

})(jQuery, this, this.document);

/**
* Class DetalleMedioPagoItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleMedioPagoItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#add-recibo3-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class DetalleMedioPagoReciboView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleMedioPagoReciboView = Backbone.View.extend({

        el: '#browse-recibo3-list',
        events: {
            'click .item-recibo3-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.parameters.wrapper

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$valor = this.$('#total');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.recibo3) && !_.isNull(this.parameters.dataFilter.recibo3) ){
                this.confCollection.data.recibo3 = this.parameters.dataFilter.recibo3;
                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view contact by model
        * @param Object detalleReciboModel Model instance
        */
        addOne: function (recibo3Model) {
            var view = new app.DetalleMedioPagoItemView({
                model: recibo3Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            recibo3Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores recibi
        * @param form element
        */
        storeOne: function ( data ) {    
            var _this = this;
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );
            // Add model in collection
            var recibo3Model = new app.Recibo3Model();
            recibo3Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
                
                // Update total
                this.totalize();
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$valor.length) {
                this.$valor.html( window.Misc.currency(data.valor) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( model, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });
})(jQuery, this, this.document);

/**
* Class DetalleReciboItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleReciboItemView = Backbone.View.extend({
        
        tagName: 'tr',
        template: _.template( ($('#add-recibo-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });
})(jQuery, this, this.document);
/**
* Class DetalleRecibosView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.DetalleRecibosView = Backbone.View.extend({

        el: '#browse-recibo-list',
        events: {
            'click .item-recibo-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.parameters.wrapper

            //Init Attributes
            this.confCollection = { reset: true, data: {} };

            // References
            this.$valor = this.$('#total');

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);
            
            if( !_.isUndefined(this.parameters.dataFilter.recibo2) && !_.isNull(this.parameters.dataFilter.recibo2) ){
                this.confCollection.data.recibo2 = this.parameters.dataFilter.recibo2;
                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view contact by model
        * @param Object detalleReciboModel Model instance
        */
        addOne: function (recibo2Model) {
            var view = new app.DetalleReciboItemView({
                model: recibo2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            recibo2Model.view = view;
            this.$el.append( view.render().el );

            // Update total
            this.totalize();
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * stores recibi
        * @param form element
        */
        storeOne: function ( data ) {    
            var _this = this;

            if( !_.isUndefined(data.factura3_id) || !_.isUndefined(data.anticipo_id) || !_.isUndefined(data.chdevuelto_id) ){
                var valid = this.collection.validar(data);
                if(!valid.success){
                    this.totalize();
                    return;
                }
            }

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Add model in collection
            var recibo2Model = new app.Recibo2Model();
            recibo2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault(); 
            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
                
                // Update total
                this.totalize();
            }
        },

        /**
        * Render totalize valor
        */
        totalize: function () {
            var data = this.collection.totalize();

            if(this.$valor.length) {
                this.$valor.html( window.Misc.currency(data.valor) );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( model, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });
})(jQuery, this, this.document);

/**
* Class MainRecibosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainRecibosView = Backbone.View.extend({

        el: '#recibos1-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$recibos1SearchTable = this.$('#recibos1-search-table');

            this.$recibos1SearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('recibos.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'recibo1_observaciones', name: 'recibo1_observaciones'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo recibo',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('recibos.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('recibos.show', {recibos: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);
/**
* Class ShowRecibosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowRecibosView = Backbone.View.extend({

        el: '#recibo-show',
        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {
            	this.detalleReciboList = new app.DetalleReciboList();
                this.detalleReciboMedioPagoList = new app.DetalleRecibo3List();
                
                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
    		// Detalle asignaciones list
            this.detalleRecibosView = new app.DetalleRecibosView({
                collection: this.detalleReciboList,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                    	recibo2: this.model.get('id')
                    }
                }
            });
            //DetalleRecibo3List
            this.detalleRecibos3View = new app.DetalleMedioPagoReciboView( {
                collection: this.detalleReciboMedioPagoList,
                parameters: {
                    edit: false,
                    dataFilter: {
                        'recibo3': this.model.get('id')
                    }
               }
            });
        }
    });
})(jQuery, this, this.document);

/**
* Class CreateRegionalView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateRegionalView = Backbone.View.extend({

        el: '#regional-create',
        template: _.template( ($('#add-regional-tpl').html() || '') ),
        events: {
            'submit #form-regional': 'onStore'
        },
        
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-regional');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Regional
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('regionales.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainRegionalesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainRegionalesView = Backbone.View.extend({

        el: '#regionales-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$regionalesSearchTable = this.$('#regionales-search-table');

            this.$regionalesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('regionales.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'regional_nombre', name: 'regional_nombre' },
                    { data: 'regional_activo', name: 'regional_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva regional',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('regionales.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('regionales.show', {regionales: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        }
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateRolView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateRolView = Backbone.View.extend({

        el: '#rol-create',
        template: _.template( ($('#add-rol-tpl').html() || '') ),
        events: {
            'submit #form-roles': 'onStore',
            'click .toggle-children': 'toggleChildren',
            'click .btn-set-permission': 'changePermissions'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.stuffToDo = { };
            this.stuffToVw = { };
            this.$wraperForm = this.$('#render-form-rol');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-roles');
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * Event toggle children
        */
        toggleChildren: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                father = $(e.currentTarget).attr("data-father"),
                nivel1 = $(e.currentTarget).attr("data-nivel1"),
                nivel2 = $(e.currentTarget).attr("data-nivel2"),
                _this = this;

            if ( (this.stuffToVw[resource] instanceof Backbone.View) == false )
            {
                this.stuffToDo[resource] = new app.PermisosRolList();
                this.stuffToVw[resource] = new app.PermisosRolListView({
                    el: '#wrapper-permisions-'+resource,
                    collection: this.stuffToDo[resource],
                    parameters: {
                        wrapper: this.$('#wrapper-father-'+father),
                        permissions: this.model.get('permissions'),
                        father: resource,
                        dataFilter: {
                            'role_id': this.model.get('id'),
                            'nivel1': nivel1,
                            'nivel2': nivel2
                        }
                   }
                });
            }

        },

        changePermissions: function(e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                father = $(e.currentTarget).attr("data-father"),
                collection = this.stuffToDo[father],
                model = collection.get(resource),
                _this = this;

            if ( this.createPermisoRolView instanceof Backbone.View ){
                this.createPermisoRolView.stopListening();
                this.createPermisoRolView.undelegateEvents();
            }

            this.createPermisoRolView = new app.CreatePermisoRolView({
                model: model,
                collection: collection,
                parameters: {
                    permissions: this.model.get('permissions'),
                    dataFilter: {
                        'role_id': this.model.get('id'),
                        'nivel1': model.get('nivel1'),
                        'nivel2': model.get('nivel2')
                    }
                }
            });
            this.createPermisoRolView.render();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // Redirect to edit rol
                Backbone.history.navigate(Route.route('roles.edit', { roles: resp.id}), { trigger:true });
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class CreatePermisoRolView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreatePermisoRolView = Backbone.View.extend({

        el: '#modal-permisorol-component',
        template: _.template( ($('#edit-permissions-tpl').html() || '') ),
        events: {
            'submit #form-permisorol-component': 'onStore'
        },
        parameters: {
        	permissions : [],
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            this.$el.find('.inner-title-modal').empty().html( this.model.get('display_name') );
            this.$wraperContent = this.$el.find('.modal-body');

            // Events
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function(){
            // Attributes
            var attributes = this.model.toJSON();
            attributes.permissions = this.parameters.permissions;

            this.$el.find('.content-modal').empty().html( this.template( attributes ) );

            // to fire plugins
            this.ready();

            this.$el.modal('show');

            return this;
        },

        /**
        * fires libraries js
        */
        ready: function () {
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Event Create Contact
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                data.role_id = this.parameters.dataFilter.role_id;

                this.model.save( data, {patch: true} );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.$wraperContent );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.$wraperContent );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                this.collection.fetch({ data: this.parameters.dataFilter, reset: true });

            	this.$el.modal('hide');
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainRolesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainRolesView = Backbone.View.extend({

        el: '#roles-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$rolesSearchTable = this.$('#roles-search-table');
            this.$rolesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('roles.index') ),
                columns: [
                    { data: 'display_name', name: 'display_name' },
                    { data: 'name', name: 'name' },
                    { data: 'description', name: 'description' }
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo Rol',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('roles.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '25%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('roles.show', {roles: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class PermisosRolItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.PermisosRolItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#permissions-rol-list-tpl').html() || '') ),
        parameters: {
            father: null,
            permissions: [],
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            attributes.father = this.parameters.father;
            attributes.permissions = this.parameters.permissions;

            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class PermisosRolListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.PermisosRolListView = Backbone.View.extend({

        events: {

        },
        parameters: {
            wrapper: null,
            father: null,
            edit: false,
            permissions: [],
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: this.parameters.dataFilter, reset: true });
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view rol by model
        * @param Object contactModel Model instance
        */
        addOne: function (moduloModel) {
            var view = new app.PermisosRolItemView({
                model: moduloModel,
                parameters: {
                    father: this.parameters.father,
                    permissions: this.parameters.permissions,
                    edit: this.parameters.edit
                }
            });
            moduloModel.view = view;
            this.$el.append( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.$el.find('tbody').html('');
            this.collection.forEach( this.addOne, this );
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class CreateServicioView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateServicioView = Backbone.View.extend({

        el: '#servicio-create',
        template: _.template( ($('#add-servicio-tpl').html() || '') ),
        events: {
            'submit #form-servicio': 'onStore'
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-servicio');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('servicios.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainServiciosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainServiciosView = Backbone.View.extend({

        el: '#servicios-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$serviciosSearchTable = this.$('#servicios-search-table');

            this.$serviciosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('servicios.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'servicio_nombre', name: 'servicio_nombre' },
                    { data: 'servicio_activo', name: 'servicio_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo servicio',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('servicios.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('servicios.show', {servicios: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateSitioView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateSitioView = Backbone.View.extend({

        el: '#sitio-create',
        template: _.template( ($('#add-sitio-tpl').html() || '') ),
        events: {
            'submit #form-sitio': 'onStore'
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-sitio');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('sitios.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainSitiosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainSitiosView = Backbone.View.extend({

        el: '#sitios-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$sitiosSearchTable = this.$('#sitios-search-table');

            this.$sitiosSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('sitios.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'sitio_nombre', name: 'sitio_nombre' },
                    { data: 'sitio_activo', name: 'sitio_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo sitio',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('sitios.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('sitios.show', {sitios: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateSolicitanteView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateSolicitanteView = Backbone.View.extend({

        el: '#solicitante-create',
        template: _.template( ($('#add-solicitante-tpl').html() || '') ),
        events: {
            'submit #form-solicitante': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-solicitante');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('solicitantes.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainSolicitantesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainSolicitantesView = Backbone.View.extend({

        el: '#solicitantes-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$solicitantesSearchTable = this.$('#solicitantes-search-table');

            this.$solicitantesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('solicitantes.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'solicitante_nombre', name: 'solicitante_nombre' },
                    { data: 'solicitante_activo', name: 'solicitante_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva solicitud',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('solicitantes.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('solicitantes.show', {solicitantes: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return data ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class MainSoporteTecnicoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainSoporteTecnicoView = Backbone.View.extend({

        el: '#soportetecnico-main',
        templateEvent: _.template( ($('#add-info-event-tpl').html() || '') ),
        events: {
            'click .btn-search': 'changeTechnical',
            'click .btn-clear': 'clearFilters',
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Reference to fields
            this.spinnerCalendar = this.$('#spinner-calendar');
            this.$modalEvent = $('#modal-event-component');
            this.$calendar = this.$('#calendar');
            
            this.calendar();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initSelect2();
        },

        calendar: function (){
        	var _this = this;
        	this.$calendar.fullCalendar({
        		header: {
				    left: 'prev,next',
				    center: 'title',
				    right: 'month,agendaWeek,agendaDay'
        		},
    			eventClick: function(calEvent, jsEvent, view) {
    				_this.openmodalEvent(calEvent, jsEvent, view);
			    }
        	});
        },

        openmodalEvent: function (calEvent, jsEvent, view) {
        	this.$modalEvent.find('.content-modal').html( this.templateEvent( calEvent ) );
            this.$modalEvent.find('.modal-title').text( calEvent.title.trim() );
        	this.$modalEvent.modal('show');
        },

        /**
        * Event Change Asesor
        */
        changeTechnical: function (e) {
            e.preventDefault();

	    	var _this = this,
	    		technical = this.$('#search_technical').val(),
	    		tercero = this.$('#search_tercero').val();

			if( typeof(technical) !== 'undefined' && !_.isUndefined(technical) && !_.isNull(technical) && technical != '' || typeof(tercero) !== 'undefined' && !_.isUndefined(tercero) && !_.isNull(tercero) && tercero != '' ){
			    $.ajax({
			        type: 'GET',
			        url: window.Misc.urlFull( Route.route('soportetecnico.index') ),
			        data: { 
			            search_technical: technical,
			            search_tercero: tercero,
			        },
			        beforeSend: function() {
			            window.Misc.setSpinner( _this.spinnerCalendar );
			        }
			    })
			    .done(function(resp) {
			        window.Misc.removeSpinner( _this.spinnerCalendar );

			        if(!_.isUndefined(resp.success)) {
			            // response success or error
			            var text = resp.success ? '' : resp.errors;
			            if( _.isObject( resp.errors ) ) {
			                text = window.Misc.parseErrors(resp.errors);
			            }
			            if( !resp.success ) {
			                alertify.error(text);
			                return;
			            }

			            // Remove event && addEvenet && renderEvent lib -> fullcalendar.io
			        	_this.$calendar.fullCalendar('removeEvents');
			            _this.$calendar.fullCalendar('addEventSource', resp.ordenes);         
			            _this.$calendar.fullCalendar('rerenderEvents');
			        }	
			    })
			    .fail(function(jqXHR, ajaxOptions, thrownError) {
			        window.Misc.removeSpinner( _this.spinnerCalendar );
			        alertify.error(thrownError);
			    });
			}
        },

        clearFilters: function(e){
            e.preventDefault();

            window.Misc.clearForm( $('#form-koi-search-tercero-component') );
        },
    });

})(jQuery, this, this.document);

/**
* Class CreateSubCategoriaView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateSubCategoriaView = Backbone.View.extend({

        el: '#subcategoria-create',
        template: _.template( ($('#add-subcategoria-tpl').html() || '') ),
        events: {
            'submit #form-subcategoria': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-subcategoria');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initSpinner == 'function' )
                window.initComponent.initSpinner();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('subcategorias.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainSubCategoriasView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainSubCategoriasView = Backbone.View.extend({

        el: '#subcategorias-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$marcasSearchTable = this.$('#subcategorias-search-table');

            this.$marcasSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('subcategorias.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'subcategoria_nombre', name: 'subcategoria_nombre' },
                    { data: 'subcategoria_activo', name: 'subcategoria_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nueva subcategoria',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('subcategorias.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('subcategorias.show', {subcategorias: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateSucursalView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateSucursalView = Backbone.View.extend({

        el: '#sucursales-create',
        template: _.template( ($('#add-sucursal-tpl').html() || '') ),
        events: {
            'submit #form-sucursales': 'onStore',
            'ifChanged .changed-location': 'checkLocation',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-sucursal');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // References fields
            this.$sucursalDefecto = this.$("#sucursal_defecto");
            this.$locationCheck = this.$("#sucursal_ubicaciones");

            if(this.model.id != undefined){
                this.loadDataSelect();
            }

            this.ready();
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },
        /**
        * Change check edit 
        */
        checkLocation: function(e){
            var selected = $(e.target).is(':checked');
            if( selected ) {
                this.$sucursalDefecto.prop('required',true);
            }else{
                this.$sucursalDefecto.prop('required',false);
                this.$sucursalDefecto.val('').trigger('change');
            }
        },
        /**
        * Loader data of select locations 
        */
        loadDataSelect: function(){
            var _this = this;
            var idSucursal = this.model.get('id');
            if( typeof(idSucursal) !== 'undefined' && !_.isUndefined(idSucursal) && !_.isNull(idSucursal) && idSucursal != '' ){
                $.ajax({
                    url: window.Misc.urlFull( Route.route('ubicaciones.index', {sucursal: idSucursal}) ),
                    type: 'GET',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.el );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.el );
                    _this.$sucursalDefecto.empty().val(0);
                    _this.$sucursalDefecto.append("<option value=></option>");
                    (resp.length > 0) ? _this.$locationCheck.iCheck('check',true) : '' ;

                    _.each(resp, function(item){
                        _this.$sucursalDefecto.append("<option value="+item.id+">"+item.ubicacion_nombre+"</option>");
                        if (_this.model.get('sucursal_defecto') == item.id) {
                            _this.$sucursalDefecto.val(item.id).change();
                        }
                    });
                });
            }   
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();  
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('sucursales.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainSucursalesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainSucursalesView = Backbone.View.extend({

        el: '#sucursales-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$sucursalesSearchTable = this.$('#sucursales-search-table');

            this.$sucursalesSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('sucursales.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [
                    { data: 'sucursal_nombre', name: 'sucursal_nombre' },
                    { data: 'sucursal_direccion', name: 'sucursal_direccion' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nueva sucursal',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('sucursales.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('sucursales.show', {sucursales: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class ContactItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ContactItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#contact-item-list-tpl').html() || '') ),

        /**
        * Constructor Method
        */
        initialize: function(){

            //Init Attributes

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){

            var attributes = this.model.toJSON();
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class ContactsListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ContactsListView = Backbone.View.extend({

        el: '#browse-contact-list',
        events: {
            'click .btn-edit-tcontacto': 'editOne',
        },
        parameters: {
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            // Trigger
            this.on('createOne', this.createOne, this);

            this.collection.fetch({ data: {tercero_id: this.parameters.dataFilter.tercero_id}, reset: true });
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object contactModel Model instance
        */
        addOne: function (contactModel) {
            var view = new app.ContactItemView( { model: contactModel } );
            this.$el.append( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },


        editOne: function(e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.collection.get(resource),
                _this = this;

            if ( this.createTContactoView instanceof Backbone.View ){
                this.createTContactoView.stopListening();
                this.createTContactoView.undelegateEvents();
            }

            this.createTContactoView = new app.CreateTContactoView({
                model: model
            });
            this.createTContactoView.render();
        },

        createOne: function(tercero) {
             var _this = this;

            if ( this.createTContactoView instanceof Backbone.View ){
                this.createTContactoView.stopListening();
                this.createTContactoView.undelegateEvents();
            }

            this.createTContactoView = new app.CreateTContactoView({
                model: new app.ContactoModel(),
                collection: _this.collection,
                parameters: {
                    'tercero_id': tercero
               }
            });
            this.createTContactoView.render();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class CreateTerceroView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTerceroView = Backbone.View.extend({

        el: '#tercero-create',
        template: _.template( ($('#add-tercero-tpl').html() || '') ),
        events: {
            'submit #form-tercero': 'onStore',
            'submit #form-item-roles': 'onStoreRol',
            'submit #form-changed-password': 'onStorePassword',
            'ifChanged .change_employee': 'changedEmployee',
            'ifChanged #tercero_tecnico': 'changedTechnical',
            'ifChanged #tercero_vendedor': 'changedVendedor',
            'ifChanged #tercero_coordinador': 'changedCoordinador',
            'click .btn-add-tcontacto': 'addContacto'
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.msgSuccess = 'Tercero guardado con exito!';
            this.$wraperForm = this.$('#render-form-tercero');

            // Model exist
            if( this.model.id != undefined ) {
                this.contactsList = new app.ContactsList();
                this.rolList = new app.RolList();
            }

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.$form = this.$('#form-tercero');
            this.$formAccounting = this.$('#form-accounting');
            this.$formEmployee = this.$('#form-employee');

            this.$checkEmployee = this.$('#tercero_empleado');
            this.$checkInternal = this.$('#tercero_interno');

            // Reset atributes uncheck empleado o interno
            this.$coordinador_por = this.$('#tercero_coordinador_por');
            this.$sucursal = this.$('#tercero_sucursal');
            this.$activo = this.$('#tercero_activo');
            this.$coordinador = this.$('#tercero_coordinador');
            this.$tecnico = this.$('#tercero_tecnico');
            this.$vendedor = this.$('#tercero_vendedor');

            this.$username = this.$('#username');
            this.$password = this.$('#password');
            this.$password_confirmation = this.$('#password_confirmation');

            this.$wrapperEmployes = this.$('#wrapper-empleados');
            this.$wrapperCoordinador = this.$('#wrapper-coordinador');

            // Model exist
            if( this.model.id != undefined ) {

                // Reference views
                this.referenceViews();
            }
            this.ready();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Contact list
            this.contactsListView = new app.ContactsListView( {
                collection: this.contactsList,
                parameters: {
                    edit: true,
                    wrapper: this.$('#wrapper-tcontacto'),
                    dataFilter: {
                        'tercero_id': this.model.get('id')
                    }
               }
            });
            // Rol list
            this.rolesListView = new app.RolesListView( {
                collection: this.rolList,
                parameters: {
                    edit: true,
                    wrapper: this.$('#wrapper-roles'),
                    dataFilter: {
                        'tercero_id': this.model.get('id')
                    }
               }
            });
        },

        /**
        * Event Create Forum Post
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = $.extend({}, window.Misc.formToJson( e.target ), window.Misc.formToJson( this.$formAccounting ), window.Misc.formToJson( this.$formEmployee ));
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * Event add item rol
        */
        onStoreRol: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                // Prepare global data
                var data = window.Misc.formToJson( e.target );
                this.rolList.trigger( 'store', data );
            }
        },

        addContacto: function() {
            this.contactsListView.trigger('createOne', this.model.get('id'));
        },

        changedTechnical: function(e) {
            var selected = $(e.target).is(':checked');
            this.$coordinador_por.trigger('change');
            
            if( selected ) {
                this.$wrapperCoordinador.removeClass('hide');
            }else{
                this.$wrapperCoordinador.addClass('hide');
                this.$coordinador_por.val('');
            }
        },

        changedCoordinador: function(e){
            var selected = $(e.target).is(':checked');
            var nombre = this.model.get('tercero_nombre1')+' '+this.model.get('tercero_nombre2')+' '+this.model.get('tercero_apellido1')+' '+this.model.get('tercero_apellido2');
            var select = [{id: this.model.get('id') , text: nombre}];

            if( selected ) {
                this.$coordinador_por.select2({ data: select }).trigger('change');
                this.$coordinador_por.select2({ language: 'es', placeholder: 'Seleccione', allowClear: false });
            }else{
                this.$coordinador_por.find('option[value='+this.model.get('id')+']').remove();
            }
        },

        changedVendedor: function(e) {
            var selected = $(e.target).is(':checked');
            this.$coordinador_por.trigger('change');
        
            if( selected ) {
                this.$wrapperCoordinador.removeClass('hide');
            }else{
                this.$wrapperCoordinador.addClass('hide');
                this.$coordinador_por.val('');
            }
        },

        changedEmployee: function(e) {
            this.$sucursal.trigger('change');
            this.$coordinador_por.trigger('change');

            // Active if internal or employee
            if( this.$checkInternal.is(':checked') || this.$checkEmployee.is(':checked') ) {
                this.$wrapperEmployes.removeClass('hide')
            }else{
                this.$wrapperEmployes.addClass('hide')
                this.$sucursal.val('');
                this.$coordinador_por.val('');
                this.$activo.iCheck('uncheck');
                this.$vendedor.iCheck('uncheck');
                this.$coordinador.iCheck('uncheck');
                this.$tecnico.iCheck('uncheck');
            }
        },

        onStorePassword: function(e) {
            var _this = this;

            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
                data.id = this.model.get('id');

                $.ajax({
                    type: "POST",
                    url: window.Misc.urlFull( Route.route('terceros.setpassword') ),
                    data: data,
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.$('#wrapper-password') );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.el );
                    if(!_.isUndefined(resp.success)) {
                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        alertify.success(resp.message);
                    }
                })
                .fail(function(jqXHR, ajaxOptions, thrownError) {
                    window.Misc.removeSpinner( _this.$('#wrapper-password') );
                    alertify.error(thrownError);
                });
            }
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                alertify.success(this.msgSuccess);

                // CreateTerceroView undelegateEvents
                if ( this.createTerceroView instanceof Backbone.View ){
                    this.createTerceroView.stopListening();
                    this.createTerceroView.undelegateEvents();
                }

                // Redirect to edit tercero
                Backbone.history.navigate(Route.route('terceros.edit', { terceros: resp.id}), { trigger:true });
            }
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateTContactoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTContactoView = Backbone.View.extend({

        el: 'body',
        template: _.template( ($('#add-contacto-tpl').html() || '') ),
        events: {
            'submit #form-tcontacto-component': 'onStore'
        },
        parameters: {
        	tercero_id : null
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events
            this.listenTo( this.model, 'change:id', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );

            this.$modalComponent = this.$('#modal-tcontacto-component');
        },

        /*
        * Render View Element
        */
        render: function(){
            // Attributes
            var attributes = this.model.toJSON();
            this.$modalComponent.find('.content-modal').html('').html( this.template( attributes ) );
            this.$wraperContent = this.$('#content-tcontacto-component').find('.modal-body');

            // to fire plugins
            this.ready();

            this.$modalComponent.modal('show');

            return this;
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
        },

        /**
        * Event Create Contact
        */
        onStore: function (e) {
            if (!e.isDefaultPrevented()) {

                e.preventDefault();

                var data = window.Misc.formToJson( e.target );
				if( !_.isUndefined(this.parameters.tercero_id) && !_.isNull(this.parameters.tercero_id) && this.parameters.tercero_id != '') {
                	data.tcontacto_tercero = this.parameters.tercero_id;
                }
                this.model.save( data, {patch: true} );
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.$wraperContent );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.$wraperContent );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                if(this.collection instanceof Backbone.Collection) {
	                // Add model in collection
	            	this.collection.add(model);
	            }

            	this.$modalComponent.modal('hide');
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class GestionCobroItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.GestionCobroItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-gestioncobro-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
	        // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){

            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class GestionCobroListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.GestionCobroListView = Backbone.View.extend({

        el: '#browse-gestioncobro-list',
        events: {
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){

            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: { tercero: this.parameters.dataFilter.tercero }, reset: true });
            
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view contact by model
        * @param Object gestionCobroModel Model instance
        */
        addOne: function (gestionCobroModel) {
            
            var view = new app.GestionCobroItemView({
                model: gestionCobroModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            gestionCobroModel.view = view;
            this.$el.prepend( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },
    
        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.el );
        }
   });

})(jQuery, this, this.document);

/**
* Class MainTerceroView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTerceroView = Backbone.View.extend({

        el: '#terceros-main',
        events: {
            'click .btn-search': 'search',
            'click .btn-clear': 'clear'
        },

        /**
        * Constructor Method
        */
        initialize : function() {
            var _this = this;

            // Rerefences
            this.$tercerosSearchTable = this.$('#terceros-search-table');
            this.$searchNit = this.$('#tercero_nit');
            this.$searchName = this.$('#tercero_nombre');

            this.tercerosSearchTable = this.$tercerosSearchTable.DataTable({
				dom: "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('terceros.index') ),
                    data: function( data ) {
                        data.persistent = true;
                        data.tercero_nit = _this.$searchNit.val();
                        data.tercero_nombre = _this.$searchName.val();
                    }
                },
                columns: [
                    { data: 'tercero_nit', name: 'tercero_nit' },
                    { data: 'tercero_nombre', name: 'tercero_nombre' },
                    { data: 'tercero_razonsocial', name: 'tercero_razonsocial'},
                    { data: 'tercero_nombre1', name: 'tercero_nombre1' },
                    { data: 'tercero_nombre2', name: 'tercero_nombre2' },
                    { data: 'tercero_apellido1', name: 'tercero_apellido1' },
                    { data: 'tercero_apellido2', name: 'tercero_apellido2' }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('terceros.show', {terceros: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 1,
                        width: '85%',
                        searchable: false
                    },
                    {
                        targets: [2, 3, 4, 5, 6],
                        visible: false
                    }
                ]
			});
        },

        search: function(e) {
            e.preventDefault();

            this.tercerosSearchTable.ajax.reload();
        },

        clear: function(e) {
            e.preventDefault();

            this.$searchNit.val('');
            this.$searchName.val('');

            this.tercerosSearchTable.ajax.reload();
        },
    });

})(jQuery, this, this.document);

/**
* Class RolesListView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.RolesListView = Backbone.View.extend({

        el: '#browse-roles-list',
        events: {
            'click .item-roles-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner);
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer);

            this.collection.fetch({ data: {tercero_id: this.parameters.dataFilter.tercero_id}, reset: true });
        },

        /*
        * Render View Element
        */
        render: function() {

        },

        /**
        * Render view rol by model
        * @param Object contactModel Model instance
        */
        addOne: function (usuariorolModel) {
            var view = new app.RolItemView({
                model: usuariorolModel,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            usuariorolModel.view = view;
            this.$el.prepend( view.render().el );
        },

        /**
        * Render all view Marketplace of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * storesrol
        * @param form element
        */
        storeOne: function (data) {
            var _this = this
            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            // Prepare data
            data.user_id = this.parameters.dataFilter.tercero_id;

            // Add model in collection
            var usuariorolModel = new app.UsuarioRolModel();
            usuariorolModel.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
                        window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

                /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource"),
                model = this.collection.get(resource),
                _this = this;

            if ( model instanceof Backbone.Model ) {
                model.destroy({
                    data: { user_id: this.parameters.dataFilter.tercero_id },
                    processData: true,
                    success : function(model, resp) {
                        if(!_.isUndefined(resp.success)) {
                            window.Misc.removeSpinner( _this.parameters.wrapper );

                            if( !resp.success ) {
                                alertify.error(resp.errors);
                                return;
                            }

                            model.view.remove();
                        }
                    }
                });
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function ( target, xhr, opts ) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( target, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class RolItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.RolItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#roles-item-list-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // Extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
            attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );
            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class ShowTerceroView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowTerceroView = Backbone.View.extend({

        el: '#terceros-main',
        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {

                this.contactsList = new app.ContactsList();
                this.rolList = new app.RolList();
                this.detalleCarteraTercero = new app.DetalleCarteraTercero();
                this.gestionCobroList = new app.GestionCobrosCollection();
                this.$templateTercero = _.template( ($('#add-tercero-cartera-tpl').html() || '') );

                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Contact list
            this.contactsListView = new app.ContactsListView( {
                collection: this.contactsList,
                parameters: {
                    dataFilter: {
                        'tercero_id': this.model.get('id')
                    }
               }
            });
            // Gestion Cobro list
            this.gestionCobroListView = new app.GestionCobroListView( {
                collection: this.gestionCobroList,
                parameters: {
                    dataFilter: {
                        'tercero': this.model.get('id')
                    }
               }
            });

            // Rol list
            this.rolesListView = new app.RolesListView( {
                collection: this.rolList,
                parameters: {
                    edit: false,
                    wrapper: this.$('#wrapper-roles'),
                    dataFilter: {
                        'tercero_id': this.model.get('id')
                    }
               }
            });

            // Detalle list
            this.factura3ListView = new app.Factura3ListView({
                collection: this.detalleCarteraTercero,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    call: 'tercero',
                    template: this.$templateTercero,
                    dataFilter: {
                        'tercero': this.model.get('id'),
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateTipoActividadView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTipoActividadView = Backbone.View.extend({

        el: '#tiposactividad-create',
        template: _.template( ($('#add-tipoactividad-tpl').html() || '') ),
        events: {
            'submit #form-tiposactividad': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-tipoactividad');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('tiposactividad.show', { tiposactividad: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainTipoActividadView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTipoActividadView = Backbone.View.extend({

        el: '#tiposactividad-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$tiposactividadSearchTable = this.$('#tiposactividad-search-table');

            this.$tiposactividadSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('tiposactividad.index') ),
                columns: [
                    { data: 'tipoactividad_nombre', name: 'tipoactividad_nombre' },
                    { data: 'tipoactividad_activo', name: 'tipoactividad_activo' },
                    { data: 'tipoactividad_comercial', name: 'tipoactividad_comercial' },
                    { data: 'tipoactividad_tecnico', name: 'tipoactividad_tecnico' },
                    { data: 'tipoactividad_cartera', name: 'tipoactividad_cartera' },
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo tipo de actividad',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('tiposactividad.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '40%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('tiposactividad.show', {tiposactividad: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [1,2,3,4],
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },

                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateTipoAjusteView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTipoAjusteView = Backbone.View.extend({

        el: '#tipoajuste-create',
        template: _.template( ($('#add-tipoajuste-tpl').html() || '') ),
        events: {
            'submit #form-tipoajuste': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-tipoajuste');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Tipo Ajuste
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('tiposajuste.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainTipoAjusteView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTipoAjusteView = Backbone.View.extend({

        el: '#tiposajuste-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$tiposajusteSearchTable = this.$('#tiposajuste-search-table');

            this.$tiposajusteSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('tiposajuste.index') ),
                columns: [
                    { data: 'tipoajuste_sigla', name: 'tipoajuste_sigla' },
                    { data: 'tipoajuste_nombre', name: 'tipoajuste_nombre' },
                    { data: 'tipoajuste_tipo', name: 'tipoajuste_tipo' },
                    { data: 'tipoajuste_activo', name: 'tipoajuste_activo' },
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo tipo ajuste',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('tiposajuste.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('tiposajuste.show', {tiposajuste: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [3],
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },

                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateTipoOrdenView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTipoOrdenView = Backbone.View.extend({

        el: '#tipoorden-create',
        template: _.template( ($('#add-tipoorden-tpl').html() || '') ),
        events: {
            'submit #form-tipoorden': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-tipoorden');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('tiposorden.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainTiposOrdenView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTiposOrdenView = Backbone.View.extend({

        el: '#tiposorden-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$tiposordenSearchTable = this.$('#tiposorden-search-table');

            this.$tiposordenSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('tiposorden.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'tipoorden_nombre', name: 'tipoorden_nombre' },
                    { data: 'tipoorden_activo', name: 'tipoorden_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo Tipo',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('tiposorden.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('tiposorden.show', {tiposorden: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return data ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateTipoTrasladoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTipoTrasladoView = Backbone.View.extend({

        el: '#tipotraslado-create',
        template: _.template( ($('#add-tipotraslado-tpl').html() || '') ),
        events: {
            'submit #form-tipotraslado': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-tipotraslado');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Tipo Ajuste
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('tipostraslados.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainTipoTrasladosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTipoTrasladosView = Backbone.View.extend({

        el: '#tipostraslados-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$tipostraladosSearchTable = this.$('#tipostraslados-search-table');
            this.$tipostraladosSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('tipostraslados.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'tipotraslado_sigla', name: 'tipotraslado_sigla' },
                    { data: 'tipotraslado_nombre', name: 'tipotraslado_nombre' },
                    { data: 'tipotraslado_activo', name: 'tipotraslado_activo' },
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo tipo de traslado',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('tipostraslados.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('tipostraslados.show', {tipostraslados: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: [3],
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },

                    },

                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateTrasladoView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTrasladoView = Backbone.View.extend({

        el: '#traslados-create',
        template: _.template( ($('#add-traslado-tpl').html() || '') ),
        events: {
            'click .submit-traslado': 'submitTraslado',
            'submit #form-item-traslado': 'onStoreItem',
            'submit #form-traslado': 'onStore',
            'change .changed-koi-sucursal-repeat': 'changedRepeatSucursal',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {

            // Attributes
            this.$wraperForm = this.$('#render-form-traslado');

            this.trasladoProductosList = new app.TrasladoProductosList();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // References
            this.$form = this.$('#form-traslado');
            this.$formItem = this.$('#form-item-traslado');

            // Reference views
            this.referenceViews();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle traslado list
            this.productosListView = new app.TrasladoProductosListView({
                collection: this.trasladoProductosList,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'traslado': this.model.get('id')
                    }
                }
            });
        },

        /**
        * Event submit traslado
        */
        submitTraslado: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.detalle = this.trasladoProductosList.toJSON();

                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * Event add item detalle traslado
        */
        onStoreItem: function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.tipo = 'S';
                    data.sucursal = this.$('#traslado1_sucursal').val();
                    data.destino = this.$('#traslado1_destino').val();
                    
                window.Misc.evaluateActionsInventory({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action, tipo )
                        {      
                            // Open InventarioActionView
                            if ( _this.inventarioActionView instanceof Backbone.View ){
                                _this.inventarioActionView.stopListening();
                                _this.inventarioActionView.undelegateEvents();
                            }
                            _this.inventarioActionView = new app.InventarioActionView({
                                model: _this.model,
                                collection: _this.trasladoProductosList,
                                parameters: {
                                    data: data,
                                    action: action,
                                    tipo: tipo,
                                    form:_this.$formItem 
                                }
                            });
                            _this.inventarioActionView.render();
                        }
                    })(this)
                }); 
            }
        },
        /**
        *Event changed sucursal repeat
        */
        changedRepeatSucursal: function(e){
            e.preventDefault();
            var data = this.$(e.currentTarget).val();
            // if ( data != '' ) {
            //     this.$('#traslado1_destino').val('').trigger('change');
            //     this.$('#traslado1_destino').find('option:disabled').prop('disabled', false);
            //     this.$('#traslado1_destino>option[value='+ data + ']').prop('disabled', true);
            // }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('traslados.show', { traslados: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainTrasladosView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTrasladosView = Backbone.View.extend({

        el: '#traslados-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$trasladosSearchTable = this.$('#traslados-search-table');

            this.$trasladosSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('traslados.index') ),
                columns: [
                    { data: 'traslado1_numero', name: 'traslado1_numero' },
                    { data: 'sucursa_origen', name: 'sucursa_origen' },
                    { data: 'sucursa_destino', name: 'sucursa_destino' },
                    { data: 'traslado1_fecha', name: 'traslado1_fecha' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo traslado',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('traslados.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('traslados.show', {traslados: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class ShowTrasladoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowTrasladoView = Backbone.View.extend({

        el: '#traslados-show',

        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {

            	this.trasladoProductosList = new app.TrasladoProductosList();

                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
    		// Detalle traslado list
            this.productosListView = new app.TrasladoProductosListView({
                collection: this.trasladoProductosList,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                    	traslado: this.model.get('id')
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class TrasladoProductosListView of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.TrasladoProductosListView = Backbone.View.extend({

        el: '#browse-detalle-traslado-list',
        events: {
            'click .item-traslado2-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // References
            this.$costoTotal = this.$('#total-costo');

            // Init Attributes
            this.confCollection = { reset: true, data: {} };

            // // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer );
            
            /* if was passed traslado code */
            if( !_.isUndefined(this.parameters.dataFilter.traslado) && !_.isNull(this.parameters.dataFilter.traslado) ){
                 this.confCollection.data.traslado = this.parameters.dataFilter.traslado;

                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view task by model
        * @param Object mentoringTaskModel Model instance
        */
        addOne: function (traslado2Model) {
            var view = new app.TrasladoProductosItemView({
                model: traslado2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            traslado2Model.view = view;
            this.$el.append( view.render().el );
        },

        /**
        * Render all view tast of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * storescuenta
        * @param form element
        */
        storeOne: function (data) {
            var _this = this

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            data.id = this.parameters.dataFilter.id;
            // Add model in collection
            var traslado2Model = new app.Traslado2Model();
            traslado2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
						window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class TrasladoProductosItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.TrasladoProductosItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-traslado2-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateTrasladoUbicacionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateTrasladoUbicacionView = Backbone.View.extend({

        el: '#trasladosubicaciones-create',
        template: _.template( ($('#add-trasladoubicacion-tpl').html() || '') ),
        events: {
            'change #trasladou1_sucursal': 'changedSucursalUbicacion',
            'submit #form-item-trasladoubicacion': 'onStoreItem',
            'submit #form-trasladoubicacion': 'onStore',
            'click .submit-trasladoubicacion': 'submitTraslado',
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function() {

            // Attributes
            this.$wraperForm = this.$('#render-form-trasladoubicacion');

            this.trasladoUbicacionesList = new app.TrasladoUbicacionesList();

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            // References
            this.$form = this.$('#form-trasladoubicacion');
            this.$formItem = this.$('#form-item-trasladoubicacion');
            this.$origen = this.$('#trasladou1_origen');
            this.$destino = this.$('#trasladou1_destino');

            // Reference views
            this.referenceViews();
        },

        /**
        * reference to views
        */
        referenceViews: function () {
            // Detalle traslado list
            this.productosListView = new app.TrasladoUbicacionesListView({
                collection: this.trasladoUbicacionesList,
                parameters: {
                    wrapper: this.el,
                    edit: true,
                    dataFilter: {
                        'traslado': this.model.get('id')
                    }
                }
            });
        },

        /**
        * Event submit traslado
        */
        submitTraslado: function (e) {
            this.$form.submit();
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.detalle = this.trasladoUbicacionesList.toJSON();

                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /**
        * Event add item detalle traslado
        */
        onStoreItem: function(e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                    data.tipo = 'S';
                    data.sucursal = this.$('#trasladou1_sucursal').val();
                    data.destino = this.$('#trasladou1_destino').val();
                    data.origen = this.$('#trasladou1_origen').val();
                    
                window.Misc.evaluateActionsInventory({
                    'data': data,
                    'wrap': this.$el,
                    'callback': (function (_this) {
                        return function ( action, tipo )
                        {      
                            // Open InventarioActionView
                            if ( _this.inventarioActionView instanceof Backbone.View ){
                                _this.inventarioActionView.stopListening();
                                _this.inventarioActionView.undelegateEvents();
                            }
                            _this.inventarioActionView = new app.InventarioActionView({
                                model: _this.model,
                                collection: _this.trasladoUbicacionesList,
                                parameters: {
                                    data: data,
                                    action: action,
                                    tipo: tipo,
                                    form:_this.$formItem 
                                }
                            });
                            _this.inventarioActionView.render();
                        }
                    })(this)
                }); 
            }
        },
        /**
        *
        */
        changedSucursalUbicacion: function(e){
            e.preventDefault();
            var _this = this;
                id = this.$(e.currentTarget).val();
            // Data select2 origen and destino
            _this.$origen.empty().val(0);
            _this.$destino.empty().val(0);
            if( typeof(id) !== 'undefined' && !_.isUndefined(id) && !_.isNull(id) && id != '' ){
                $.ajax({
                    url: window.Misc.urlFull( Route.route('ubicaciones.index', {sucursal: id}) ),
                    type: 'GET',
                    beforeSend: function() {
                        window.Misc.setSpinner( _this.spinner );
                    }
                })
                .done(function(resp) {
                    window.Misc.removeSpinner( _this.spinner );
                    
                    _this.$origen.append("<option value=></option>");
                    _this.$destino.append("<option value=></option>");
                    _.each(resp, function(item){
                        _this.$origen.append("<option value="+item.id+">"+item.ubicacion_nombre+"</option>");
                        _this.$destino.append("<option value="+item.id+">"+item.ubicacion_nombre+"</option>");
                    });
                })
            }
        },
        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },
        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins

            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();
            
            if( typeof window.initComponent.initValidator == 'function' )
                window.initComponent.initValidator();
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }
                window.Misc.redirect( window.Misc.urlFull( Route.route('traslados.show', { traslados: resp.id})) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainTrasladosUbicacionesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainTrasladosUbicacionesView = Backbone.View.extend({

        el: '#trasladosubicaciones-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$trasladosSearchTable = this.$('#trasladosubicaciones-search-table');

            this.$trasladosSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('trasladosubicaciones.index') ),
                // columns: [
                // ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo traslado de ubicación',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('trasladosubicaciones.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('trasladosubicaciones.show', {traslados: full.id }) )  +'">' + data + '</a>';
                        }
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class ShowTrasladoView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.ShowTrasladoView = Backbone.View.extend({

        el: '#traslados-show',

        /**
        * Constructor Method
        */
        initialize : function() {
            // Model exist
            if( this.model.id != undefined ) {

            	this.trasladoProductosList = new app.TrasladoProductosList();

                // Reference views
                this.referenceViews();
            }
        },

        /**
        * reference to views
        */
        referenceViews: function () {
    		// Detalle traslado list
            this.productosListView = new app.TrasladoProductosListView({
                collection: this.trasladoProductosList,
                parameters: {
                    wrapper: this.el,
                    edit: false,
                    dataFilter: {
                    	traslado: this.model.get('id')
                    }
                }
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class TrasladoUbucaiionesListView of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.TrasladoUbicacionesListView = Backbone.View.extend({

        el: '#browse-detalle-trasladou-list',
        events: {
            'click .item-trasladou2-remove': 'removeOne'
        },
        parameters: {
            wrapper: null,
            edit: false,
            dataFilter: {}
        },

        /**
        * Constructor Method
        */
        initialize : function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // References
            this.$costoTotal = this.$('#total-costo');

            // Init Attributes
            this.confCollection = { reset: true, data: {} };

            // // Events Listeners
            this.listenTo( this.collection, 'add', this.addOne );
            this.listenTo( this.collection, 'reset', this.addAll );
            this.listenTo( this.collection, 'request', this.loadSpinner );
            this.listenTo( this.collection, 'store', this.storeOne );
            this.listenTo( this.collection, 'sync', this.responseServer );
            
            /* if was passed traslado code */
            if( !_.isUndefined(this.parameters.dataFilter.traslado) && !_.isNull(this.parameters.dataFilter.traslado) ){
                 this.confCollection.data.traslado = this.parameters.dataFilter.traslado;

                this.collection.fetch( this.confCollection );
            }
        },

        /**
        * Render view task by model
        * @param Object mentoringTaskModel Model instance
        */
        addOne: function (trasladou2Model) {
            var view = new app.TrasladoUbicacionItemView({
                model: trasladou2Model,
                parameters: {
                    edit: this.parameters.edit
                }
            });
            trasladou2Model.view = view;
            this.$el.append( view.render().el );
        },

        /**
        * Render all view tast of the collection
        */
        addAll: function () {
            this.collection.forEach( this.addOne, this );
        },

        /**
        * storescuenta
        * @param form element
        */
        storeOne: function (data) {
            var _this = this

            // Set Spinner
            window.Misc.setSpinner( this.parameters.wrapper );

            data.id = this.parameters.dataFilter.id;
            // Add model in collection
            var trasladou2Model = new app.TrasladoUbicacion2Model();
            trasladou2Model.save(data, {
                success : function(model, resp) {
                    if(!_.isUndefined(resp.success)) {
						window.Misc.removeSpinner( _this.parameters.wrapper );

                        // response success or error
                        var text = resp.success ? '' : resp.errors;
                        if( _.isObject( resp.errors ) ) {
                            text = window.Misc.parseErrors(resp.errors);
                        }

                        if( !resp.success ) {
                            alertify.error(text);
                            return;
                        }

                        // Add model in collection
                        _this.collection.add(model);
                    }
                },
                error : function(model, error) {
                    window.Misc.removeSpinner( _this.parameters.wrapper );
                    alertify.error(error.statusText)
                }
            });
        },

        /**
        * Event remove item
        */
        removeOne: function (e) {
            e.preventDefault();

            var resource = $(e.currentTarget).attr("data-resource");
            var model = this.collection.get(resource);
            if ( model instanceof Backbone.Model ) {
                model.view.remove();
                this.collection.remove(model);
            }
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.parameters.wrapper );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.parameters.wrapper );
        }
   });

})(jQuery, this, this.document);

/**
* Class TrasladoUbicacionItemView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.TrasladoUbicacionItemView = Backbone.View.extend({

        tagName: 'tr',
        template: _.template( ($('#add-trasladou2-item-tpl').html() || '') ),
        parameters: {
            edit: false
        },

        /**
        * Constructor Method
        */
        initialize: function(opts){
            // extends parameters
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({},this.parameters, opts.parameters);

            // Events Listener
            this.listenTo( this.model, 'change', this.render );
        },

        /*
        * Render View Element
        */
        render: function(){
            var attributes = this.model.toJSON();
                attributes.edit = this.parameters.edit;
            this.$el.html( this.template(attributes) );

            return this;
        }
    });

})(jQuery, this, this.document);
/**
* Class CreateUbicacionView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateUbicacionView = Backbone.View.extend({

        el: '#ubicaciones-create',
        template: _.template( ($('#add-ubicacion-tpl').html() || '') ),
        events: {
            'submit #form-ubicaciones': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-ubicacion');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();
            
            if( typeof window.initComponent.initInputMask == 'function' )
                window.initComponent.initInputMask();
            
            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();

            if( typeof window.initComponent.initSelect2 == 'function' )
                window.initComponent.initSelect2();  
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('ubicaciones.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainUbicacionesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainUbicacionesView = Backbone.View.extend({

        el: '#ubicaciones-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$ubicacionesSearchTable = this.$('#ubicaciones-search-table');

            this.$ubicacionesSearchTable.DataTable({
                dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                serverSide: true,
                language: window.Misc.dataTableES(),
                ajax: {
                    url: window.Misc.urlFull( Route.route('ubicaciones.index') ),
                    data: function( data ) {
                        data.datatables = true;
                    }
                },
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'ubicacion_nombre', name: 'ubicacion_nombre' },
                    { data: 'sucursal_nombre', name: 'sucursal_nombre'},
                    { data: 'ubicacion_activo', name: 'ubicacion_activo'}
                ],
                buttons: [
                    {
                        text: '<i class="fa fa-plus"></i> Nuevo ubicación',
                        className: 'btn-sm',
                        action: function ( e, dt, node, config ) {
                            window.Misc.redirect( window.Misc.urlFull( Route.route('ubicaciones.create') ) )
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        searchable:false,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('ubicaciones.show', {ubicaciones: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 3,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
            });
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateUnidadView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateUnidadView = Backbone.View.extend({

        el: '#unidades-create',
        template: _.template( ($('#add-unidad-tpl').html() || '') ),
        events: {
            'submit #form-unidades': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-unidad');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('unidades.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainUnidadesView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainUnidadesView = Backbone.View.extend({

        el: '#unidades-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$unidadesSearchTable = this.$('#unidades-search-table');

            this.$unidadesSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('unidades.index') ),
                columns: [
                    { data: 'unidadmedida_sigla', name: 'unidadmedida_sigla' },
                    { data: 'unidadmedida_nombre', name: 'unidadmedida_nombre' },
                    { data: 'unidad_medida_activo', name: 'unidad_medida_activo' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo unidad',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('unidades.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('unidades.show', {unidades: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
* Class CreateUnidadNegocioView  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.CreateUnidadNegocioView = Backbone.View.extend({

        el: '#unidadesnegocio-create',
        template: _.template( ($('#add-unidadnegocio-tpl').html() || '') ),
        events: {
            'submit #form-unidadesnegocio': 'onStore'
        },
        parameters: {
        },

        /**
        * Constructor Method
        */
        initialize : function(opts) {
            // Initialize
            if( opts !== undefined && _.isObject(opts.parameters) )
                this.parameters = $.extend({}, this.parameters, opts.parameters);

            // Attributes
            this.$wraperForm = this.$('#render-form-unidadnegocio');

            // Events
            this.listenTo( this.model, 'change', this.render );
            this.listenTo( this.model, 'sync', this.responseServer );
            this.listenTo( this.model, 'request', this.loadSpinner );
        },

        /**
        * Event Create Folder
        */
        onStore: function (e) {

            if (!e.isDefaultPrevented()) {

                e.preventDefault();
                var data = window.Misc.formToJson( e.target );
                this.model.save( data, {patch: true, silent: true} );
            }
        },

        /*
        * Render View Element
        */
        render: function() {

            var attributes = this.model.toJSON();
            this.$wraperForm.html( this.template(attributes) );

            this.ready();
        },

        /**
        * fires libraries js
        */
        ready: function () {
            // to fire plugins
            if( typeof window.initComponent.initToUpper == 'function' )
                window.initComponent.initToUpper();

            if( typeof window.initComponent.initICheck == 'function' )
                window.initComponent.initICheck();
        },

        /**
        * Load spinner on the request
        */
        loadSpinner: function (model, xhr, opts) {
            window.Misc.setSpinner( this.el );
        },

        /**
        * response of the server
        */
        responseServer: function ( model, resp, opts ) {
            window.Misc.removeSpinner( this.el );

            if(!_.isUndefined(resp.success)) {
                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                window.Misc.redirect( window.Misc.urlFull( Route.route('unidadesnegocio.index')) );
            }
        }
    });

})(jQuery, this, this.document);

/**
* Class MainUnidadesNegocioView
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.MainUnidadesNegocioView = Backbone.View.extend({

        el: '#unidadesnegocio-main',

        /**
        * Constructor Method
        */
        initialize : function() {

            this.$unidadesSearchTable = this.$('#unidadesnegocio-search-table');

            this.$unidadesSearchTable.DataTable({
				dom: "<'row'<'col-sm-4'B><'col-sm-4 text-center'l><'col-sm-4'f>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
				processing: true,
                serverSide: true,
            	language: window.Misc.dataTableES(),
                ajax: window.Misc.urlFull( Route.route('unidadesnegocio.index') ),
                columns: [
                    { data: 'id', name: 'id' },
                    { data: 'unidadnegocio_nombre', name: 'unidadnegocio_nombre' },
                    { data: 'unidadnegocio_activo', name: 'unidadnegocio_activo' }
                ],
				buttons: [
					{
						text: '<i class="fa fa-user-plus"></i> Nuevo unidad negocio',
                        className: 'btn-sm',
						action: function ( e, dt, node, config ) {
							window.Misc.redirect( window.Misc.urlFull( Route.route('unidadesnegocio.create') ) )
						}
					}
				],
                columnDefs: [
                    {
                        targets: 0,
                        width: '10%',
                        render: function ( data, type, full, row ) {
                            return '<a href="'+ window.Misc.urlFull( Route.route('unidadesnegocio.show', {unidadesnegocio: full.id }) )  +'">' + data + '</a>';
                        }
                    },
                    {
                        targets: 2,
                        width: '15%',
                        render: function ( data, type, full, row ) {
                            return parseInt(data) ? 'Si' : 'No';
                        },
                    }
                ]
			});
        }
    });

})(jQuery, this, this.document);

/**
 * Utilities for seg component
 *
 *
 */
( function( $, window, document, undefined ){

    var Misc = function( a ){

        // attributes or global vars here

    }

    Misc.prototype = {

        /**
        * Inializes the functions when DOM ready
        */
        initialize: function(){

        },

        /**
         *  Serialize form into json format
         *
         *  @param { string } name class or id of the html element to embed the loader
         *  @return { object } form into json
         *
         */

        formToJson: function( selector ){
            var o = {}, a = [];
            if( $.prototype.isPrototypeOf(selector) ){
                a = selector.serializeArray();
            }
            else{
                a = $(selector).serializeArray();
            }

            $.each( a, function() {
                if ( o[ this.name ] !== undefined ) {
                    if ( ! o[this.name].push ) {
                        o[ this.name ] = [ o[ this.name ] ];
                    }

                    o[ this.name ].push( this.value || '' );

                } else {
                    o[ this.name ] = this.value || '';
                }
            });

            return o;
        },

        /**
        * validate the urls
        */
        isUrl : function( str ){

            // var patt = /^(http[s]?:\/\/(www\.)?|ftp:\/\/(www\.)?|www\.){1}([0-9A-Za-z-\.@:%_\+~#=]+)+\.[a-zA-Z]{2,3}(\/([^\n\r\s])*)?(\?([^\n\r\s])*)?/i;
            var patt = /^(http[s]?:\/\/(www\.)?|ftp:\/\/(www\.)?|www\.){1}([0-9A-Za-z-\.@:%_\+~#=]+)+(\/(.)*)?(\?(.)*)?/i;

            return patt.test( str );
        },

        /**
        * Build URI with route and base url
        */
        urlFull: function ( route ){

            if( !this.isUrl(document.url) )
                return route;

            route || (route = '');
            var patt = /^\//;
            patt.test(route) || (route = '/'+route);

            return document.url + route;
        },

        /**
        * Build URI with route and base url
        */
        parseErrors: function ( errors ){
            var text = '';
            if( _.isObject( errors ) ){

                var listError = '<ul>';

                $.each(errors, function(field, item) {
                     listError += '<li>'+ item[0] +'</li>';
                });
                listError += '</ul>';

                text = listError;
            }
            return text;
        },
        
        /**
        *   ClearFields the forms
        */
        clearForm: function( form ){
            form.find(':input').each(function(){
                field_type = $(this);

                // Inputmask data-currency
                if ( field_type.attr('data-currency') == '' || field_type.attr('data-currency-negative') == ''|| field_type.attr('data-currency-price') == ''){
                    field_type.val('');
                }

                // Checkbox && radiobutton
                if( field_type.attr('checked') ){
                    field_type.iCheck('check');
                }else{
                    field_type.iCheck('uncheck');
                }

                // Select2
                if( field_type.hasClass('select2-default-clear') || field_type.hasClass('select2-default') ){
                    var name = field_type.attr('id');
                    field_type.val('').trigger('change');
                    $('#select2-'+name+'-container').removeAttr('title');

                    // Select2 with ajax
                }else if( field_type.hasClass('choice-select-autocomplete') ){
                    field_type.empty();
                    id = field_type.attr('id');
                    $('#select2-'+id+'-container').removeAttr('title');
                }

            });
            form.trigger('reset');
        },
        
        /**
        *  Sets a loading spinner in a box
        * @param { selector } String|Object Selector jQuery
        */
        setSpinner: function( selector ){
            if ( !selector ) return;

            $(selector).prepend('<div class="overlay"><i class="fa fa-refresh fa-spin"></i></div>');
        },

        /**
        * Removes the loading spinner and trigger a callback
        * @param { wrap } String|Object wrapper jQuery element
        *
        */
        removeSpinner: function( selector ){

            var $selector = $(selector).find( '.overlay' );

            if($selector.length)
                $selector.remove();
        },

        /**
        * Display the DataTables interface in Spanish
        */
        dataTableES: function(){
            return {
                "sProcessing":     "<div class=\"overlay\"><i class=\"fa fa-refresh fa-spin\"></i></div>",
                "sLengthMenu":     "Mostrar _MENU_ registros",
                "sZeroRecords":    "No se encontraron resultados",
                "sEmptyTable":     "Ningún dato disponible en esta tabla",
                "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix":    "",
                "sSearch":         "Buscar:",
                "sUrl":            "",
                "sInfoThousands":  ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst":    "Primero",
                    "sLast":     "Último",
                    "sNext":     "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        },

        /**
        * Redirect to an specific url or refresh the page
        * @param { string } the url to be redirect to
        *
        */
        redirect: function( url ){
            if( url !== undefined && url != ''){
                window.location = url;
            }else{
                window.location.reload();
            }
        },

        /**
        * Redirect to an specific url or refresh the page
        * @param { string } the url to be redirect to
        *
        */
        successRedirect: function( msg, url ){
            alertify.success(msg);
            setTimeout(function(){
                window.Misc.redirect( url );
            }, 500);
        },

        /**
        * Format COP currency
        * @param { value }
        *
        */
        currency: function( value ){
            return accounting.formatMoney(value, '', 2, ".", ",");
        },

        /**
        * Evaluate actions accounts
        */
        evaluateActionsAccount: function ( options ) {

            options || (options = {});

            var defaults = {
                'callback': null,
                'wrap': 'body',
                'data': null
            }, settings = {};

            settings = $.extend({}, defaults, options);

            // Search plancuenta
            $.ajax({
                url: window.Misc.urlFull(Route.route('asientos.detalle.evaluate')),
                type: 'POST',
                data: settings.data,
                beforeSend: function() {
                    window.Misc.setSpinner( settings.wrap );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( settings.wrap );

                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // return callback
                if( ({}).toString.call(settings.callback).slice(8,-1) === 'Function' )
                    settings.callback( resp.actions );
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( settings.wrap );
                alertify.error(thrownError);
            });
        },

        /**
        *Evaluate action Inventory
        */
        evaluateActionsInventory: function(options){
            options || (options = {});
            var defaults = {
                'callback': null,
                'wrap': 'body',
                'data': null
            }, settings = {};

            settings = $.extend({}, defaults, options);
            $.ajax({
                url: window.Misc.urlFull(Route.route('productos.evaluate')),
                type: 'POST',
                data: settings.data,
                beforeSend: function() {
                    window.Misc.setSpinner( settings.wrap );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( settings.wrap );

                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    alertify.error(text);
                    return;
                }

                // return callback
                if( ({}).toString.call(settings.callback).slice(8,-1) === 'Function' )
                    settings.callback( resp.action, resp.tipo );
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( settings.wrap );
                alertify.error(thrownError);
            });
        },

        /**
        *Evaluate action Cartera
        */
        evaluateActionsCartera: function(options){
            options || (options = {});
            var defaults = {
                'callback': null,
                'wrap': 'body',
                'data': null
            }, settings = {};

            settings = $.extend({}, defaults, options);
            $.ajax({
                url: window.Misc.urlFull(Route.route('conceptosrc.evaluate')),
                type: 'POST',
                data: settings.data,
                beforeSend: function() {
                    window.Misc.setSpinner( settings.wrap );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( settings.wrap );

                // response success or error
                var text = resp.success ? '' : resp.errors;
                if( _.isObject( resp.errors ) ) {
                    text = window.Misc.parseErrors(resp.errors);
                }

                if( !resp.success ) {
                    return; 
                }

                // return callback
                if( ({}).toString.call(settings.callback).slice(8,-1) === 'Function' )
                    settings.callback( resp.action, resp.tipo );
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( settings.wrap );
                alertify.error(thrownError);
            });
        },
        
        /**
        * Evaluate facturap
        */
        evaluateFacturap: function ( options ) {

            options || (options = {});

            var defaults = {
                'callback': null,
                'wrap': 'body',
                'facturap': null,
                'tercero': null,
                'naturaleza': null
            }, settings = {};
            settings = $.extend({}, defaults, options);

            // Search facturap
            $.ajax({
                url: window.Misc.urlFull(Route.route('facturap.search')),
                type: 'GET',
                data: { facturap1_factura: settings.facturap, tercero_nit: settings.tercero },
                beforeSend: function() {
                    window.Misc.setSpinner( settings.wrap );
                }
            })
            .done(function(resp) {
                window.Misc.removeSpinner( settings.wrap );
                var response = { actions: false };

                if(resp.success) {
                    // Evaluate actions
                    response.actions = true;
                    response.facturap = resp.id;
                    response.action = 'quota';

                }else{
                    if(settings.naturaleza == 'C') {
                        response.actions = true;
                        response.action = 'add';

                    }else if(settings.naturaleza == 'D') {
                        response.message = 'Para realizar movimientos de naturaleza débito de ingresar un numero de factura existente.';
                    }
                }

                // return callback
                if( ({}).toString.call(settings.callback).slice(8,-1) === 'Function' )
                    settings.callback( response );
            })
            .fail(function(jqXHR, ajaxOptions, thrownError) {
                window.Misc.removeSpinner( settings.wrap );
                alertify.error(thrownError);
            });
        }
    };

    window.Misc = new Misc();
    window.Misc.initialize();

})( jQuery, this, this.document );

(function () {

    var laroute = (function () {

        var routes = {

            absolute: false,
            rootUrl: 'http://localhost',
            routes : [{"host":null,"methods":["POST"],"uri":"login","name":"login","action":"App\Http\Controllers\Auth\AuthController@postLogin"},{"host":null,"methods":["GET","HEAD"],"uri":"login","name":"login","action":"App\Http\Controllers\Auth\AuthController@getLogin"},{"host":null,"methods":["GET","HEAD"],"uri":"logout","name":"logout","action":"App\Http\Controllers\Auth\AuthController@getLogout"},{"host":null,"methods":["GET","HEAD"],"uri":"\/","name":"dashboard","action":"App\Http\Controllers\HomeController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/dv","name":"terceros.dv","action":"App\Http\Controllers\Admin\TerceroController@dv"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/rcree","name":"terceros.rcree","action":"App\Http\Controllers\Admin\TerceroController@rcree"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/search","name":"terceros.search","action":"App\Http\Controllers\Admin\TerceroController@search"},{"host":null,"methods":["POST"],"uri":"terceros\/setpassword","name":"terceros.setpassword","action":"App\Http\Controllers\Admin\TerceroController@setpassword"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/contactos","name":"terceros.contactos.index","action":"App\Http\Controllers\Admin\ContactoController@index"},{"host":null,"methods":["POST"],"uri":"terceros\/contactos","name":"terceros.contactos.store","action":"App\Http\Controllers\Admin\ContactoController@store"},{"host":null,"methods":["PUT"],"uri":"terceros\/contactos\/{contactos}","name":"terceros.contactos.update","action":"App\Http\Controllers\Admin\ContactoController@update"},{"host":null,"methods":["PATCH"],"uri":"terceros\/contactos\/{contactos}","name":null,"action":"App\Http\Controllers\Admin\ContactoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/roles","name":"terceros.roles.index","action":"App\Http\Controllers\Admin\UsuarioRolController@index"},{"host":null,"methods":["POST"],"uri":"terceros\/roles","name":"terceros.roles.store","action":"App\Http\Controllers\Admin\UsuarioRolController@store"},{"host":null,"methods":["DELETE"],"uri":"terceros\/roles\/{roles}","name":"terceros.roles.destroy","action":"App\Http\Controllers\Admin\UsuarioRolController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"empresa","name":"empresa.index","action":"App\Http\Controllers\Admin\EmpresaController@index"},{"host":null,"methods":["PUT"],"uri":"empresa\/{empresa}","name":"empresa.update","action":"App\Http\Controllers\Admin\EmpresaController@update"},{"host":null,"methods":["PATCH"],"uri":"empresa\/{empresa}","name":null,"action":"App\Http\Controllers\Admin\EmpresaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros","name":"terceros.index","action":"App\Http\Controllers\Admin\TerceroController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/create","name":"terceros.create","action":"App\Http\Controllers\Admin\TerceroController@create"},{"host":null,"methods":["POST"],"uri":"terceros","name":"terceros.store","action":"App\Http\Controllers\Admin\TerceroController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/{terceros}","name":"terceros.show","action":"App\Http\Controllers\Admin\TerceroController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"terceros\/{terceros}\/edit","name":"terceros.edit","action":"App\Http\Controllers\Admin\TerceroController@edit"},{"host":null,"methods":["PUT"],"uri":"terceros\/{terceros}","name":"terceros.update","action":"App\Http\Controllers\Admin\TerceroController@update"},{"host":null,"methods":["PATCH"],"uri":"terceros\/{terceros}","name":null,"action":"App\Http\Controllers\Admin\TerceroController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"actividades","name":"actividades.index","action":"App\Http\Controllers\Admin\ActividadController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"actividades\/create","name":"actividades.create","action":"App\Http\Controllers\Admin\ActividadController@create"},{"host":null,"methods":["POST"],"uri":"actividades","name":"actividades.store","action":"App\Http\Controllers\Admin\ActividadController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"actividades\/{actividades}","name":"actividades.show","action":"App\Http\Controllers\Admin\ActividadController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"actividades\/{actividades}\/edit","name":"actividades.edit","action":"App\Http\Controllers\Admin\ActividadController@edit"},{"host":null,"methods":["PUT"],"uri":"actividades\/{actividades}","name":"actividades.update","action":"App\Http\Controllers\Admin\ActividadController@update"},{"host":null,"methods":["PATCH"],"uri":"actividades\/{actividades}","name":null,"action":"App\Http\Controllers\Admin\ActividadController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"departamentos","name":"departamentos.index","action":"App\Http\Controllers\Admin\DepartamentoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"departamentos\/{departamentos}","name":"departamentos.show","action":"App\Http\Controllers\Admin\DepartamentoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"municipios","name":"municipios.index","action":"App\Http\Controllers\Admin\MunicipioController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"paises","name":"paises.index","action":"App\Http\Controllers\Admin\PaisController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"sucursales","name":"sucursales.index","action":"App\Http\Controllers\Admin\SucursalController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"sucursales\/create","name":"sucursales.create","action":"App\Http\Controllers\Admin\SucursalController@create"},{"host":null,"methods":["POST"],"uri":"sucursales","name":"sucursales.store","action":"App\Http\Controllers\Admin\SucursalController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"sucursales\/{sucursales}","name":"sucursales.show","action":"App\Http\Controllers\Admin\SucursalController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"sucursales\/{sucursales}\/edit","name":"sucursales.edit","action":"App\Http\Controllers\Admin\SucursalController@edit"},{"host":null,"methods":["PUT"],"uri":"sucursales\/{sucursales}","name":"sucursales.update","action":"App\Http\Controllers\Admin\SucursalController@update"},{"host":null,"methods":["PATCH"],"uri":"sucursales\/{sucursales}","name":null,"action":"App\Http\Controllers\Admin\SucursalController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"ubicaciones","name":"ubicaciones.index","action":"App\Http\Controllers\Admin\UbicacionController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ubicaciones\/create","name":"ubicaciones.create","action":"App\Http\Controllers\Admin\UbicacionController@create"},{"host":null,"methods":["POST"],"uri":"ubicaciones","name":"ubicaciones.store","action":"App\Http\Controllers\Admin\UbicacionController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ubicaciones\/{ubicaciones}","name":"ubicaciones.show","action":"App\Http\Controllers\Admin\UbicacionController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"ubicaciones\/{ubicaciones}\/edit","name":"ubicaciones.edit","action":"App\Http\Controllers\Admin\UbicacionController@edit"},{"host":null,"methods":["PUT"],"uri":"ubicaciones\/{ubicaciones}","name":"ubicaciones.update","action":"App\Http\Controllers\Admin\UbicacionController@update"},{"host":null,"methods":["PATCH"],"uri":"ubicaciones\/{ubicaciones}","name":null,"action":"App\Http\Controllers\Admin\UbicacionController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"regionales","name":"regionales.index","action":"App\Http\Controllers\Admin\RegionalController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"regionales\/create","name":"regionales.create","action":"App\Http\Controllers\Admin\RegionalController@create"},{"host":null,"methods":["POST"],"uri":"regionales","name":"regionales.store","action":"App\Http\Controllers\Admin\RegionalController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"regionales\/{regionales}","name":"regionales.show","action":"App\Http\Controllers\Admin\RegionalController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"regionales\/{regionales}\/edit","name":"regionales.edit","action":"App\Http\Controllers\Admin\RegionalController@edit"},{"host":null,"methods":["PUT"],"uri":"regionales\/{regionales}","name":"regionales.update","action":"App\Http\Controllers\Admin\RegionalController@update"},{"host":null,"methods":["PATCH"],"uri":"regionales\/{regionales}","name":null,"action":"App\Http\Controllers\Admin\RegionalController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"puntosventa","name":"puntosventa.index","action":"App\Http\Controllers\Admin\PuntoVentaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"puntosventa\/create","name":"puntosventa.create","action":"App\Http\Controllers\Admin\PuntoVentaController@create"},{"host":null,"methods":["POST"],"uri":"puntosventa","name":"puntosventa.store","action":"App\Http\Controllers\Admin\PuntoVentaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"puntosventa\/{puntosventa}","name":"puntosventa.show","action":"App\Http\Controllers\Admin\PuntoVentaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"puntosventa\/{puntosventa}\/edit","name":"puntosventa.edit","action":"App\Http\Controllers\Admin\PuntoVentaController@edit"},{"host":null,"methods":["PUT"],"uri":"puntosventa\/{puntosventa}","name":"puntosventa.update","action":"App\Http\Controllers\Admin\PuntoVentaController@update"},{"host":null,"methods":["PATCH"],"uri":"puntosventa\/{puntosventa}","name":null,"action":"App\Http\Controllers\Admin\PuntoVentaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"documento","name":"documento.index","action":"App\Http\Controllers\Admin\DocumentosController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"documento\/create","name":"documento.create","action":"App\Http\Controllers\Admin\DocumentosController@create"},{"host":null,"methods":["POST"],"uri":"documento","name":"documento.store","action":"App\Http\Controllers\Admin\DocumentosController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"documento\/{documento}","name":"documento.show","action":"App\Http\Controllers\Admin\DocumentosController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"documento\/{documento}\/edit","name":"documento.edit","action":"App\Http\Controllers\Admin\DocumentosController@edit"},{"host":null,"methods":["PUT"],"uri":"documento\/{documento}","name":"documento.update","action":"App\Http\Controllers\Admin\DocumentosController@update"},{"host":null,"methods":["PATCH"],"uri":"documento\/{documento}","name":null,"action":"App\Http\Controllers\Admin\DocumentosController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposactividad","name":"tiposactividad.index","action":"App\Http\Controllers\Admin\TipoActividadController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposactividad\/create","name":"tiposactividad.create","action":"App\Http\Controllers\Admin\TipoActividadController@create"},{"host":null,"methods":["POST"],"uri":"tiposactividad","name":"tiposactividad.store","action":"App\Http\Controllers\Admin\TipoActividadController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposactividad\/{tiposactividad}","name":"tiposactividad.show","action":"App\Http\Controllers\Admin\TipoActividadController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposactividad\/{tiposactividad}\/edit","name":"tiposactividad.edit","action":"App\Http\Controllers\Admin\TipoActividadController@edit"},{"host":null,"methods":["PUT"],"uri":"tiposactividad\/{tiposactividad}","name":"tiposactividad.update","action":"App\Http\Controllers\Admin\TipoActividadController@update"},{"host":null,"methods":["PATCH"],"uri":"tiposactividad\/{tiposactividad}","name":null,"action":"App\Http\Controllers\Admin\TipoActividadController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"bitacoras","name":"bitacoras.index","action":"App\Http\Controllers\Admin\BitacoraController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"roles\/permisos","name":"roles.permisos.index","action":"App\Http\Controllers\Admin\PermisoRolController@index"},{"host":null,"methods":["PUT"],"uri":"roles\/permisos\/{permisos}","name":"roles.permisos.update","action":"App\Http\Controllers\Admin\PermisoRolController@update"},{"host":null,"methods":["PATCH"],"uri":"roles\/permisos\/{permisos}","name":null,"action":"App\Http\Controllers\Admin\PermisoRolController@update"},{"host":null,"methods":["DELETE"],"uri":"roles\/permisos\/{permisos}","name":"roles.permisos.destroy","action":"App\Http\Controllers\Admin\PermisoRolController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"roles","name":"roles.index","action":"App\Http\Controllers\Admin\RolController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"roles\/create","name":"roles.create","action":"App\Http\Controllers\Admin\RolController@create"},{"host":null,"methods":["POST"],"uri":"roles","name":"roles.store","action":"App\Http\Controllers\Admin\RolController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"roles\/{roles}","name":"roles.show","action":"App\Http\Controllers\Admin\RolController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"roles\/{roles}\/edit","name":"roles.edit","action":"App\Http\Controllers\Admin\RolController@edit"},{"host":null,"methods":["PUT"],"uri":"roles\/{roles}","name":"roles.update","action":"App\Http\Controllers\Admin\RolController@update"},{"host":null,"methods":["PATCH"],"uri":"roles\/{roles}","name":null,"action":"App\Http\Controllers\Admin\RolController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"permisos","name":"permisos.index","action":"App\Http\Controllers\Admin\PermisoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"modulos","name":"modulos.index","action":"App\Http\Controllers\Admin\ModuloController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/detalle","name":"pedidosc.detalle.index","action":"App\Http\Controllers\Comercial\DetallePedidoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/detalle\/create","name":"pedidosc.detalle.create","action":"App\Http\Controllers\Comercial\DetallePedidoController@create"},{"host":null,"methods":["POST"],"uri":"pedidosc\/detalle","name":"pedidosc.detalle.store","action":"App\Http\Controllers\Comercial\DetallePedidoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/detalle\/{detalle}","name":"pedidosc.detalle.show","action":"App\Http\Controllers\Comercial\DetallePedidoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/detalle\/{detalle}\/edit","name":"pedidosc.detalle.edit","action":"App\Http\Controllers\Comercial\DetallePedidoController@edit"},{"host":null,"methods":["PUT"],"uri":"pedidosc\/detalle\/{detalle}","name":"pedidosc.detalle.update","action":"App\Http\Controllers\Comercial\DetallePedidoController@update"},{"host":null,"methods":["PATCH"],"uri":"pedidosc\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Comercial\DetallePedidoController@update"},{"host":null,"methods":["DELETE"],"uri":"pedidosc\/detalle\/{detalle}","name":"pedidosc.detalle.destroy","action":"App\Http\Controllers\Comercial\DetallePedidoController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"presupuestoasesor","name":"presupuestoasesor.index","action":"App\Http\Controllers\Comercial\PresupuestoAsesorController@index"},{"host":null,"methods":["POST"],"uri":"presupuestoasesor","name":"presupuestoasesor.store","action":"App\Http\Controllers\Comercial\PresupuestoAsesorController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc","name":"pedidosc.index","action":"App\Http\Controllers\Comercial\PedidoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/create","name":"pedidosc.create","action":"App\Http\Controllers\Comercial\PedidoController@create"},{"host":null,"methods":["POST"],"uri":"pedidosc","name":"pedidosc.store","action":"App\Http\Controllers\Comercial\PedidoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/{pedidosc}","name":"pedidosc.show","action":"App\Http\Controllers\Comercial\PedidoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidosc\/{pedidosc}\/edit","name":"pedidosc.edit","action":"App\Http\Controllers\Comercial\PedidoController@edit"},{"host":null,"methods":["PUT"],"uri":"pedidosc\/{pedidosc}","name":"pedidosc.update","action":"App\Http\Controllers\Comercial\PedidoController@update"},{"host":null,"methods":["PATCH"],"uri":"pedidosc\/{pedidosc}","name":null,"action":"App\Http\Controllers\Comercial\PedidoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptoscomercial","name":"conceptoscomercial.index","action":"App\Http\Controllers\Comercial\ConceptoComercialController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptoscomercial\/create","name":"conceptoscomercial.create","action":"App\Http\Controllers\Comercial\ConceptoComercialController@create"},{"host":null,"methods":["POST"],"uri":"conceptoscomercial","name":"conceptoscomercial.store","action":"App\Http\Controllers\Comercial\ConceptoComercialController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptoscomercial\/{conceptoscomercial}","name":"conceptoscomercial.show","action":"App\Http\Controllers\Comercial\ConceptoComercialController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptoscomercial\/{conceptoscomercial}\/edit","name":"conceptoscomercial.edit","action":"App\Http\Controllers\Comercial\ConceptoComercialController@edit"},{"host":null,"methods":["PUT"],"uri":"conceptoscomercial\/{conceptoscomercial}","name":"conceptoscomercial.update","action":"App\Http\Controllers\Comercial\ConceptoComercialController@update"},{"host":null,"methods":["PATCH"],"uri":"conceptoscomercial\/{conceptoscomercial}","name":null,"action":"App\Http\Controllers\Comercial\ConceptoComercialController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionescomercial","name":"gestionescomercial.index","action":"App\Http\Controllers\Comercial\GestionComercialController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionescomercial\/create","name":"gestionescomercial.create","action":"App\Http\Controllers\Comercial\GestionComercialController@create"},{"host":null,"methods":["POST"],"uri":"gestionescomercial","name":"gestionescomercial.store","action":"App\Http\Controllers\Comercial\GestionComercialController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionescomercial\/{gestionescomercial}","name":"gestionescomercial.show","action":"App\Http\Controllers\Comercial\GestionComercialController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionescomercial\/{gestionescomercial}\/edit","name":"gestionescomercial.edit","action":"App\Http\Controllers\Comercial\GestionComercialController@edit"},{"host":null,"methods":["PUT"],"uri":"gestionescomercial\/{gestionescomercial}","name":"gestionescomercial.update","action":"App\Http\Controllers\Comercial\GestionComercialController@update"},{"host":null,"methods":["PATCH"],"uri":"gestionescomercial\/{gestionescomercial}","name":null,"action":"App\Http\Controllers\Comercial\GestionComercialController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"documentos","name":"documentos.index","action":"App\Http\Controllers\Contabilidad\DocumentoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"documentos\/create","name":"documentos.create","action":"App\Http\Controllers\Contabilidad\DocumentoController@create"},{"host":null,"methods":["POST"],"uri":"documentos","name":"documentos.store","action":"App\Http\Controllers\Contabilidad\DocumentoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"documentos\/{documentos}","name":"documentos.show","action":"App\Http\Controllers\Contabilidad\DocumentoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"documentos\/{documentos}\/edit","name":"documentos.edit","action":"App\Http\Controllers\Contabilidad\DocumentoController@edit"},{"host":null,"methods":["PUT"],"uri":"documentos\/{documentos}","name":"documentos.update","action":"App\Http\Controllers\Contabilidad\DocumentoController@update"},{"host":null,"methods":["PATCH"],"uri":"documentos\/{documentos}","name":null,"action":"App\Http\Controllers\Contabilidad\DocumentoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"folders","name":"folders.index","action":"App\Http\Controllers\Contabilidad\FolderController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"folders\/create","name":"folders.create","action":"App\Http\Controllers\Contabilidad\FolderController@create"},{"host":null,"methods":["POST"],"uri":"folders","name":"folders.store","action":"App\Http\Controllers\Contabilidad\FolderController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"folders\/{folders}","name":"folders.show","action":"App\Http\Controllers\Contabilidad\FolderController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"folders\/{folders}\/edit","name":"folders.edit","action":"App\Http\Controllers\Contabilidad\FolderController@edit"},{"host":null,"methods":["PUT"],"uri":"folders\/{folders}","name":"folders.update","action":"App\Http\Controllers\Contabilidad\FolderController@update"},{"host":null,"methods":["PATCH"],"uri":"folders\/{folders}","name":null,"action":"App\Http\Controllers\Contabilidad\FolderController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"centroscosto","name":"centroscosto.index","action":"App\Http\Controllers\Contabilidad\CentroCostoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"centroscosto\/create","name":"centroscosto.create","action":"App\Http\Controllers\Contabilidad\CentroCostoController@create"},{"host":null,"methods":["POST"],"uri":"centroscosto","name":"centroscosto.store","action":"App\Http\Controllers\Contabilidad\CentroCostoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"centroscosto\/{centroscosto}","name":"centroscosto.show","action":"App\Http\Controllers\Contabilidad\CentroCostoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"centroscosto\/{centroscosto}\/edit","name":"centroscosto.edit","action":"App\Http\Controllers\Contabilidad\CentroCostoController@edit"},{"host":null,"methods":["PUT"],"uri":"centroscosto\/{centroscosto}","name":"centroscosto.update","action":"App\Http\Controllers\Contabilidad\CentroCostoController@update"},{"host":null,"methods":["PATCH"],"uri":"centroscosto\/{centroscosto}","name":null,"action":"App\Http\Controllers\Contabilidad\CentroCostoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"plancuentas\/nivel","name":"plancuentas.nivel","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@nivel"},{"host":null,"methods":["GET","HEAD"],"uri":"plancuentas\/search","name":"plancuentas.search","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@search"},{"host":null,"methods":["GET","HEAD"],"uri":"plancuentas","name":"plancuentas.index","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"plancuentas\/create","name":"plancuentas.create","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@create"},{"host":null,"methods":["POST"],"uri":"plancuentas","name":"plancuentas.store","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"plancuentas\/{plancuentas}","name":"plancuentas.show","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"plancuentas\/{plancuentas}\/edit","name":"plancuentas.edit","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@edit"},{"host":null,"methods":["PUT"],"uri":"plancuentas\/{plancuentas}","name":"plancuentas.update","action":"App\Http\Controllers\Contabilidad\PlanCuentasController@update"},{"host":null,"methods":["PATCH"],"uri":"plancuentas\/{plancuentas}","name":null,"action":"App\Http\Controllers\Contabilidad\PlanCuentasController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos\/detalle","name":"asientos.detalle.index","action":"App\Http\Controllers\Contabilidad\DetalleAsientoController@index"},{"host":null,"methods":["POST"],"uri":"asientos\/detalle","name":"asientos.detalle.store","action":"App\Http\Controllers\Contabilidad\DetalleAsientoController@store"},{"host":null,"methods":["DELETE"],"uri":"asientos\/detalle\/{detalle}","name":"asientos.detalle.destroy","action":"App\Http\Controllers\Contabilidad\DetalleAsientoController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos\/exportar\/{asientos}","name":"asientos.exportar","action":"App\Http\Controllers\Contabilidad\AsientoController@exportar"},{"host":null,"methods":["POST"],"uri":"asientos\/detalle\/evaluate","name":"asientos.detalle.evaluate","action":"App\Http\Controllers\Contabilidad\DetalleAsientoController@evaluate"},{"host":null,"methods":["POST"],"uri":"asientos\/detalle\/validate","name":"asientos.detalle.validate","action":"App\Http\Controllers\Contabilidad\DetalleAsientoController@validation"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos\/detalle\/movimientos","name":"asientos.detalle.movimientos","action":"App\Http\Controllers\Contabilidad\DetalleAsientoController@movimientos"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos","name":"asientos.index","action":"App\Http\Controllers\Contabilidad\AsientoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos\/create","name":"asientos.create","action":"App\Http\Controllers\Contabilidad\AsientoController@create"},{"host":null,"methods":["POST"],"uri":"asientos","name":"asientos.store","action":"App\Http\Controllers\Contabilidad\AsientoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos\/{asientos}","name":"asientos.show","action":"App\Http\Controllers\Contabilidad\AsientoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"asientos\/{asientos}\/edit","name":"asientos.edit","action":"App\Http\Controllers\Contabilidad\AsientoController@edit"},{"host":null,"methods":["PUT"],"uri":"asientos\/{asientos}","name":"asientos.update","action":"App\Http\Controllers\Contabilidad\AsientoController@update"},{"host":null,"methods":["PATCH"],"uri":"asientos\/{asientos}","name":null,"action":"App\Http\Controllers\Contabilidad\AsientoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"rmayorbalance","name":"rmayorbalance.index","action":"App\Http\Controllers\Reporte\MayorBalanceController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"rplancuentas","name":"rplancuentas.index","action":"App\Http\Controllers\Reporte\PlanCuentasController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/search","name":"productos.search","action":"App\Http\Controllers\Inventario\ProductoController@search"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/rollos","name":"productos.rollos.index","action":"App\Http\Controllers\Inventario\RolloController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/lotes","name":"productos.lotes.index","action":"App\Http\Controllers\Inventario\LoteController@index"},{"host":null,"methods":["POST"],"uri":"productos\/evaluate","name":"productos.evaluate","action":"App\Http\Controllers\Inventario\ProductoController@evaluate"},{"host":null,"methods":["POST"],"uri":"productos\/validate","name":"productos.validate","action":"App\Http\Controllers\Inventario\ProductoController@validation"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/prodbode","name":"productos.prodbode.index","action":"App\Http\Controllers\Inventario\ProdbodeController@index"},{"host":null,"methods":["PUT"],"uri":"productos\/prodbode\/{prodbode}","name":"productos.prodbode.update","action":"App\Http\Controllers\Inventario\ProdbodeController@update"},{"host":null,"methods":["PATCH"],"uri":"productos\/prodbode\/{prodbode}","name":null,"action":"App\Http\Controllers\Inventario\ProdbodeController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/detalle","name":"pedidos.detalle.index","action":"App\Http\Controllers\Inventario\DetallePedidoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/detalle\/create","name":"pedidos.detalle.create","action":"App\Http\Controllers\Inventario\DetallePedidoController@create"},{"host":null,"methods":["POST"],"uri":"pedidos\/detalle","name":"pedidos.detalle.store","action":"App\Http\Controllers\Inventario\DetallePedidoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/detalle\/{detalle}","name":"pedidos.detalle.show","action":"App\Http\Controllers\Inventario\DetallePedidoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/detalle\/{detalle}\/edit","name":"pedidos.detalle.edit","action":"App\Http\Controllers\Inventario\DetallePedidoController@edit"},{"host":null,"methods":["PUT"],"uri":"pedidos\/detalle\/{detalle}","name":"pedidos.detalle.update","action":"App\Http\Controllers\Inventario\DetallePedidoController@update"},{"host":null,"methods":["PATCH"],"uri":"pedidos\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Inventario\DetallePedidoController@update"},{"host":null,"methods":["DELETE"],"uri":"pedidos\/detalle\/{detalle}","name":"pedidos.detalle.destroy","action":"App\Http\Controllers\Inventario\DetallePedidoController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/cerrar\/{pedidos}","name":"pedidos.cerrar","action":"App\Http\Controllers\Inventario\PedidoController@cerrar"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/anular\/{pedidos}","name":"pedidos.anular","action":"App\Http\Controllers\Inventario\PedidoController@anular"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes\/detalle","name":"ajustes.detalle.index","action":"App\Http\Controllers\Inventario\DetalleAjusteController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes\/detalle\/create","name":"ajustes.detalle.create","action":"App\Http\Controllers\Inventario\DetalleAjusteController@create"},{"host":null,"methods":["POST"],"uri":"ajustes\/detalle","name":"ajustes.detalle.store","action":"App\Http\Controllers\Inventario\DetalleAjusteController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes\/detalle\/{detalle}","name":"ajustes.detalle.show","action":"App\Http\Controllers\Inventario\DetalleAjusteController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes\/detalle\/{detalle}\/edit","name":"ajustes.detalle.edit","action":"App\Http\Controllers\Inventario\DetalleAjusteController@edit"},{"host":null,"methods":["PUT"],"uri":"ajustes\/detalle\/{detalle}","name":"ajustes.detalle.update","action":"App\Http\Controllers\Inventario\DetalleAjusteController@update"},{"host":null,"methods":["PATCH"],"uri":"ajustes\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Inventario\DetalleAjusteController@update"},{"host":null,"methods":["DELETE"],"uri":"ajustes\/detalle\/{detalle}","name":"ajustes.detalle.destroy","action":"App\Http\Controllers\Inventario\DetalleAjusteController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados\/detalle","name":"traslados.detalle.index","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados\/detalle\/create","name":"traslados.detalle.create","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@create"},{"host":null,"methods":["POST"],"uri":"traslados\/detalle","name":"traslados.detalle.store","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados\/detalle\/{detalle}","name":"traslados.detalle.show","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados\/detalle\/{detalle}\/edit","name":"traslados.detalle.edit","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@edit"},{"host":null,"methods":["PUT"],"uri":"traslados\/detalle\/{detalle}","name":"traslados.detalle.update","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@update"},{"host":null,"methods":["PATCH"],"uri":"traslados\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Inventario\DetalleTrasladoController@update"},{"host":null,"methods":["DELETE"],"uri":"traslados\/detalle\/{detalle}","name":"traslados.detalle.destroy","action":"App\Http\Controllers\Inventario\DetalleTrasladoController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones\/detalle","name":"trasladosubicaciones.detalle.index","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones\/detalle\/create","name":"trasladosubicaciones.detalle.create","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@create"},{"host":null,"methods":["POST"],"uri":"trasladosubicaciones\/detalle","name":"trasladosubicaciones.detalle.store","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones\/detalle\/{detalle}","name":"trasladosubicaciones.detalle.show","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones\/detalle\/{detalle}\/edit","name":"trasladosubicaciones.detalle.edit","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@edit"},{"host":null,"methods":["PUT"],"uri":"trasladosubicaciones\/detalle\/{detalle}","name":"trasladosubicaciones.detalle.update","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@update"},{"host":null,"methods":["PATCH"],"uri":"trasladosubicaciones\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@update"},{"host":null,"methods":["DELETE"],"uri":"trasladosubicaciones\/detalle\/{detalle}","name":"trasladosubicaciones.detalle.destroy","action":"App\Http\Controllers\Inventario\DetalleTrasladoUbicacionController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"modelos","name":"modelos.index","action":"App\Http\Controllers\Inventario\ModeloController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"modelos\/create","name":"modelos.create","action":"App\Http\Controllers\Inventario\ModeloController@create"},{"host":null,"methods":["POST"],"uri":"modelos","name":"modelos.store","action":"App\Http\Controllers\Inventario\ModeloController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"modelos\/{modelos}","name":"modelos.show","action":"App\Http\Controllers\Inventario\ModeloController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"modelos\/{modelos}\/edit","name":"modelos.edit","action":"App\Http\Controllers\Inventario\ModeloController@edit"},{"host":null,"methods":["PUT"],"uri":"modelos\/{modelos}","name":"modelos.update","action":"App\Http\Controllers\Inventario\ModeloController@update"},{"host":null,"methods":["PATCH"],"uri":"modelos\/{modelos}","name":null,"action":"App\Http\Controllers\Inventario\ModeloController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"marcas","name":"marcas.index","action":"App\Http\Controllers\Inventario\MarcaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"marcas\/create","name":"marcas.create","action":"App\Http\Controllers\Inventario\MarcaController@create"},{"host":null,"methods":["POST"],"uri":"marcas","name":"marcas.store","action":"App\Http\Controllers\Inventario\MarcaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"marcas\/{marcas}","name":"marcas.show","action":"App\Http\Controllers\Inventario\MarcaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"marcas\/{marcas}\/edit","name":"marcas.edit","action":"App\Http\Controllers\Inventario\MarcaController@edit"},{"host":null,"methods":["PUT"],"uri":"marcas\/{marcas}","name":"marcas.update","action":"App\Http\Controllers\Inventario\MarcaController@update"},{"host":null,"methods":["PATCH"],"uri":"marcas\/{marcas}","name":null,"action":"App\Http\Controllers\Inventario\MarcaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"categorias","name":"categorias.index","action":"App\Http\Controllers\Inventario\CategoriaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"categorias\/create","name":"categorias.create","action":"App\Http\Controllers\Inventario\CategoriaController@create"},{"host":null,"methods":["POST"],"uri":"categorias","name":"categorias.store","action":"App\Http\Controllers\Inventario\CategoriaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"categorias\/{categorias}","name":"categorias.show","action":"App\Http\Controllers\Inventario\CategoriaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"categorias\/{categorias}\/edit","name":"categorias.edit","action":"App\Http\Controllers\Inventario\CategoriaController@edit"},{"host":null,"methods":["PUT"],"uri":"categorias\/{categorias}","name":"categorias.update","action":"App\Http\Controllers\Inventario\CategoriaController@update"},{"host":null,"methods":["PATCH"],"uri":"categorias\/{categorias}","name":null,"action":"App\Http\Controllers\Inventario\CategoriaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"impuestos","name":"impuestos.index","action":"App\Http\Controllers\Inventario\ImpuestoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"impuestos\/create","name":"impuestos.create","action":"App\Http\Controllers\Inventario\ImpuestoController@create"},{"host":null,"methods":["POST"],"uri":"impuestos","name":"impuestos.store","action":"App\Http\Controllers\Inventario\ImpuestoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"impuestos\/{impuestos}","name":"impuestos.show","action":"App\Http\Controllers\Inventario\ImpuestoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"impuestos\/{impuestos}\/edit","name":"impuestos.edit","action":"App\Http\Controllers\Inventario\ImpuestoController@edit"},{"host":null,"methods":["PUT"],"uri":"impuestos\/{impuestos}","name":"impuestos.update","action":"App\Http\Controllers\Inventario\ImpuestoController@update"},{"host":null,"methods":["PATCH"],"uri":"impuestos\/{impuestos}","name":null,"action":"App\Http\Controllers\Inventario\ImpuestoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos","name":"pedidos.index","action":"App\Http\Controllers\Inventario\PedidoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/create","name":"pedidos.create","action":"App\Http\Controllers\Inventario\PedidoController@create"},{"host":null,"methods":["POST"],"uri":"pedidos","name":"pedidos.store","action":"App\Http\Controllers\Inventario\PedidoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/{pedidos}","name":"pedidos.show","action":"App\Http\Controllers\Inventario\PedidoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"pedidos\/{pedidos}\/edit","name":"pedidos.edit","action":"App\Http\Controllers\Inventario\PedidoController@edit"},{"host":null,"methods":["PUT"],"uri":"pedidos\/{pedidos}","name":"pedidos.update","action":"App\Http\Controllers\Inventario\PedidoController@update"},{"host":null,"methods":["PATCH"],"uri":"pedidos\/{pedidos}","name":null,"action":"App\Http\Controllers\Inventario\PedidoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"productos","name":"productos.index","action":"App\Http\Controllers\Inventario\ProductoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/create","name":"productos.create","action":"App\Http\Controllers\Inventario\ProductoController@create"},{"host":null,"methods":["POST"],"uri":"productos","name":"productos.store","action":"App\Http\Controllers\Inventario\ProductoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/{productos}","name":"productos.show","action":"App\Http\Controllers\Inventario\ProductoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"productos\/{productos}\/edit","name":"productos.edit","action":"App\Http\Controllers\Inventario\ProductoController@edit"},{"host":null,"methods":["PUT"],"uri":"productos\/{productos}","name":"productos.update","action":"App\Http\Controllers\Inventario\ProductoController@update"},{"host":null,"methods":["PATCH"],"uri":"productos\/{productos}","name":null,"action":"App\Http\Controllers\Inventario\ProductoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"lineas","name":"lineas.index","action":"App\Http\Controllers\Inventario\LineaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"lineas\/create","name":"lineas.create","action":"App\Http\Controllers\Inventario\LineaController@create"},{"host":null,"methods":["POST"],"uri":"lineas","name":"lineas.store","action":"App\Http\Controllers\Inventario\LineaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"lineas\/{lineas}","name":"lineas.show","action":"App\Http\Controllers\Inventario\LineaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"lineas\/{lineas}\/edit","name":"lineas.edit","action":"App\Http\Controllers\Inventario\LineaController@edit"},{"host":null,"methods":["PUT"],"uri":"lineas\/{lineas}","name":"lineas.update","action":"App\Http\Controllers\Inventario\LineaController@update"},{"host":null,"methods":["PATCH"],"uri":"lineas\/{lineas}","name":null,"action":"App\Http\Controllers\Inventario\LineaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"unidades","name":"unidades.index","action":"App\Http\Controllers\Inventario\UnidadesMedidaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"unidades\/create","name":"unidades.create","action":"App\Http\Controllers\Inventario\UnidadesMedidaController@create"},{"host":null,"methods":["POST"],"uri":"unidades","name":"unidades.store","action":"App\Http\Controllers\Inventario\UnidadesMedidaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"unidades\/{unidades}","name":"unidades.show","action":"App\Http\Controllers\Inventario\UnidadesMedidaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"unidades\/{unidades}\/edit","name":"unidades.edit","action":"App\Http\Controllers\Inventario\UnidadesMedidaController@edit"},{"host":null,"methods":["PUT"],"uri":"unidades\/{unidades}","name":"unidades.update","action":"App\Http\Controllers\Inventario\UnidadesMedidaController@update"},{"host":null,"methods":["PATCH"],"uri":"unidades\/{unidades}","name":null,"action":"App\Http\Controllers\Inventario\UnidadesMedidaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes","name":"ajustes.index","action":"App\Http\Controllers\Inventario\AjusteController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes\/create","name":"ajustes.create","action":"App\Http\Controllers\Inventario\AjusteController@create"},{"host":null,"methods":["POST"],"uri":"ajustes","name":"ajustes.store","action":"App\Http\Controllers\Inventario\AjusteController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustes\/{ajustes}","name":"ajustes.show","action":"App\Http\Controllers\Inventario\AjusteController@show"},{"host":null,"methods":["PUT"],"uri":"ajustes\/{ajustes}","name":"ajustes.update","action":"App\Http\Controllers\Inventario\AjusteController@update"},{"host":null,"methods":["PATCH"],"uri":"ajustes\/{ajustes}","name":null,"action":"App\Http\Controllers\Inventario\AjusteController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados","name":"traslados.index","action":"App\Http\Controllers\Inventario\TrasladoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados\/create","name":"traslados.create","action":"App\Http\Controllers\Inventario\TrasladoController@create"},{"host":null,"methods":["POST"],"uri":"traslados","name":"traslados.store","action":"App\Http\Controllers\Inventario\TrasladoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"traslados\/{traslados}","name":"traslados.show","action":"App\Http\Controllers\Inventario\TrasladoController@show"},{"host":null,"methods":["PUT"],"uri":"traslados\/{traslados}","name":"traslados.update","action":"App\Http\Controllers\Inventario\TrasladoController@update"},{"host":null,"methods":["PATCH"],"uri":"traslados\/{traslados}","name":null,"action":"App\Http\Controllers\Inventario\TrasladoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones","name":"trasladosubicaciones.index","action":"App\Http\Controllers\Inventario\TrasladoUbicacionController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones\/create","name":"trasladosubicaciones.create","action":"App\Http\Controllers\Inventario\TrasladoUbicacionController@create"},{"host":null,"methods":["POST"],"uri":"trasladosubicaciones","name":"trasladosubicaciones.store","action":"App\Http\Controllers\Inventario\TrasladoUbicacionController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"trasladosubicaciones\/{trasladosubicaciones}","name":"trasladosubicaciones.show","action":"App\Http\Controllers\Inventario\TrasladoUbicacionController@show"},{"host":null,"methods":["PUT"],"uri":"trasladosubicaciones\/{trasladosubicaciones}","name":"trasladosubicaciones.update","action":"App\Http\Controllers\Inventario\TrasladoUbicacionController@update"},{"host":null,"methods":["PATCH"],"uri":"trasladosubicaciones\/{trasladosubicaciones}","name":null,"action":"App\Http\Controllers\Inventario\TrasladoUbicacionController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposajuste","name":"tiposajuste.index","action":"App\Http\Controllers\Inventario\TipoAjusteController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposajuste\/create","name":"tiposajuste.create","action":"App\Http\Controllers\Inventario\TipoAjusteController@create"},{"host":null,"methods":["POST"],"uri":"tiposajuste","name":"tiposajuste.store","action":"App\Http\Controllers\Inventario\TipoAjusteController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposajuste\/{tiposajuste}","name":"tiposajuste.show","action":"App\Http\Controllers\Inventario\TipoAjusteController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposajuste\/{tiposajuste}\/edit","name":"tiposajuste.edit","action":"App\Http\Controllers\Inventario\TipoAjusteController@edit"},{"host":null,"methods":["PUT"],"uri":"tiposajuste\/{tiposajuste}","name":"tiposajuste.update","action":"App\Http\Controllers\Inventario\TipoAjusteController@update"},{"host":null,"methods":["PATCH"],"uri":"tiposajuste\/{tiposajuste}","name":null,"action":"App\Http\Controllers\Inventario\TipoAjusteController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"tipostraslados","name":"tipostraslados.index","action":"App\Http\Controllers\Inventario\TipoTrasladoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"tipostraslados\/create","name":"tipostraslados.create","action":"App\Http\Controllers\Inventario\TipoTrasladoController@create"},{"host":null,"methods":["POST"],"uri":"tipostraslados","name":"tipostraslados.store","action":"App\Http\Controllers\Inventario\TipoTrasladoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"tipostraslados\/{tipostraslados}","name":"tipostraslados.show","action":"App\Http\Controllers\Inventario\TipoTrasladoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"tipostraslados\/{tipostraslados}\/edit","name":"tipostraslados.edit","action":"App\Http\Controllers\Inventario\TipoTrasladoController@edit"},{"host":null,"methods":["PUT"],"uri":"tipostraslados\/{tipostraslados}","name":"tipostraslados.update","action":"App\Http\Controllers\Inventario\TipoTrasladoController@update"},{"host":null,"methods":["PATCH"],"uri":"tipostraslados\/{tipostraslados}","name":null,"action":"App\Http\Controllers\Inventario\TipoTrasladoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"subcategorias","name":"subcategorias.index","action":"App\Http\Controllers\Inventario\SubCategoriaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"subcategorias\/create","name":"subcategorias.create","action":"App\Http\Controllers\Inventario\SubCategoriaController@create"},{"host":null,"methods":["POST"],"uri":"subcategorias","name":"subcategorias.store","action":"App\Http\Controllers\Inventario\SubCategoriaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"subcategorias\/{subcategorias}","name":"subcategorias.show","action":"App\Http\Controllers\Inventario\SubCategoriaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"subcategorias\/{subcategorias}\/edit","name":"subcategorias.edit","action":"App\Http\Controllers\Inventario\SubCategoriaController@edit"},{"host":null,"methods":["PUT"],"uri":"subcategorias\/{subcategorias}","name":"subcategorias.update","action":"App\Http\Controllers\Inventario\SubCategoriaController@update"},{"host":null,"methods":["PATCH"],"uri":"subcategorias\/{subcategorias}","name":null,"action":"App\Http\Controllers\Inventario\SubCategoriaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"servicios","name":"servicios.index","action":"App\Http\Controllers\Inventario\ServicioController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"servicios\/create","name":"servicios.create","action":"App\Http\Controllers\Inventario\ServicioController@create"},{"host":null,"methods":["POST"],"uri":"servicios","name":"servicios.store","action":"App\Http\Controllers\Inventario\ServicioController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"servicios\/{servicios}","name":"servicios.show","action":"App\Http\Controllers\Inventario\ServicioController@show"},{"host":null,"methods":["PUT"],"uri":"servicios\/{servicios}","name":"servicios.update","action":"App\Http\Controllers\Inventario\ServicioController@update"},{"host":null,"methods":["PATCH"],"uri":"servicios\/{servicios}","name":null,"action":"App\Http\Controllers\Inventario\ServicioController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"unidadesnegocio","name":"unidadesnegocio.index","action":"App\Http\Controllers\Inventario\UnidadNegocioController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"unidadesnegocio\/create","name":"unidadesnegocio.create","action":"App\Http\Controllers\Inventario\UnidadNegocioController@create"},{"host":null,"methods":["POST"],"uri":"unidadesnegocio","name":"unidadesnegocio.store","action":"App\Http\Controllers\Inventario\UnidadNegocioController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"unidadesnegocio\/{unidadesnegocio}","name":"unidadesnegocio.show","action":"App\Http\Controllers\Inventario\UnidadNegocioController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"unidadesnegocio\/{unidadesnegocio}\/edit","name":"unidadesnegocio.edit","action":"App\Http\Controllers\Inventario\UnidadNegocioController@edit"},{"host":null,"methods":["PUT"],"uri":"unidadesnegocio\/{unidadesnegocio}","name":"unidadesnegocio.update","action":"App\Http\Controllers\Inventario\UnidadNegocioController@update"},{"host":null,"methods":["PATCH"],"uri":"unidadesnegocio\/{unidadesnegocio}","name":null,"action":"App\Http\Controllers\Inventario\UnidadNegocioController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/detalle","name":"recibos.detalle.index","action":"App\Http\Controllers\Cartera\Recibo2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/detalle\/create","name":"recibos.detalle.create","action":"App\Http\Controllers\Cartera\Recibo2Controller@create"},{"host":null,"methods":["POST"],"uri":"recibos\/detalle","name":"recibos.detalle.store","action":"App\Http\Controllers\Cartera\Recibo2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/detalle\/{detalle}","name":"recibos.detalle.show","action":"App\Http\Controllers\Cartera\Recibo2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/detalle\/{detalle}\/edit","name":"recibos.detalle.edit","action":"App\Http\Controllers\Cartera\Recibo2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"recibos\/detalle\/{detalle}","name":"recibos.detalle.update","action":"App\Http\Controllers\Cartera\Recibo2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"recibos\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\Recibo2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"recibos\/detalle\/{detalle}","name":"recibos.detalle.destroy","action":"App\Http\Controllers\Cartera\Recibo2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/factura","name":"recibos.factura.index","action":"App\Http\Controllers\Cartera\Factura3Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/factura\/create","name":"recibos.factura.create","action":"App\Http\Controllers\Cartera\Factura3Controller@create"},{"host":null,"methods":["POST"],"uri":"recibos\/factura","name":"recibos.factura.store","action":"App\Http\Controllers\Cartera\Factura3Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/factura\/{factura}","name":"recibos.factura.show","action":"App\Http\Controllers\Cartera\Factura3Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/factura\/{factura}\/edit","name":"recibos.factura.edit","action":"App\Http\Controllers\Cartera\Factura3Controller@edit"},{"host":null,"methods":["PUT"],"uri":"recibos\/factura\/{factura}","name":"recibos.factura.update","action":"App\Http\Controllers\Cartera\Factura3Controller@update"},{"host":null,"methods":["PATCH"],"uri":"recibos\/factura\/{factura}","name":null,"action":"App\Http\Controllers\Cartera\Factura3Controller@update"},{"host":null,"methods":["DELETE"],"uri":"recibos\/factura\/{factura}","name":"recibos.factura.destroy","action":"App\Http\Controllers\Cartera\Factura3Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/mediopago","name":"recibos.mediopago.index","action":"App\Http\Controllers\Cartera\Recibo3Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/mediopago\/create","name":"recibos.mediopago.create","action":"App\Http\Controllers\Cartera\Recibo3Controller@create"},{"host":null,"methods":["POST"],"uri":"recibos\/mediopago","name":"recibos.mediopago.store","action":"App\Http\Controllers\Cartera\Recibo3Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/mediopago\/{mediopago}","name":"recibos.mediopago.show","action":"App\Http\Controllers\Cartera\Recibo3Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/mediopago\/{mediopago}\/edit","name":"recibos.mediopago.edit","action":"App\Http\Controllers\Cartera\Recibo3Controller@edit"},{"host":null,"methods":["PUT"],"uri":"recibos\/mediopago\/{mediopago}","name":"recibos.mediopago.update","action":"App\Http\Controllers\Cartera\Recibo3Controller@update"},{"host":null,"methods":["PATCH"],"uri":"recibos\/mediopago\/{mediopago}","name":null,"action":"App\Http\Controllers\Cartera\Recibo3Controller@update"},{"host":null,"methods":["DELETE"],"uri":"recibos\/mediopago\/{mediopago}","name":"recibos.mediopago.destroy","action":"App\Http\Controllers\Cartera\Recibo3Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/mediopago","name":"anticipos.mediopago.index","action":"App\Http\Controllers\Cartera\Anticipo2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/mediopago\/create","name":"anticipos.mediopago.create","action":"App\Http\Controllers\Cartera\Anticipo2Controller@create"},{"host":null,"methods":["POST"],"uri":"anticipos\/mediopago","name":"anticipos.mediopago.store","action":"App\Http\Controllers\Cartera\Anticipo2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/mediopago\/{mediopago}","name":"anticipos.mediopago.show","action":"App\Http\Controllers\Cartera\Anticipo2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/mediopago\/{mediopago}\/edit","name":"anticipos.mediopago.edit","action":"App\Http\Controllers\Cartera\Anticipo2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"anticipos\/mediopago\/{mediopago}","name":"anticipos.mediopago.update","action":"App\Http\Controllers\Cartera\Anticipo2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"anticipos\/mediopago\/{mediopago}","name":null,"action":"App\Http\Controllers\Cartera\Anticipo2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"anticipos\/mediopago\/{mediopago}","name":"anticipos.mediopago.destroy","action":"App\Http\Controllers\Cartera\Anticipo2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/detalle","name":"anticipos.detalle.index","action":"App\Http\Controllers\Cartera\Anticipo3Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/detalle\/create","name":"anticipos.detalle.create","action":"App\Http\Controllers\Cartera\Anticipo3Controller@create"},{"host":null,"methods":["POST"],"uri":"anticipos\/detalle","name":"anticipos.detalle.store","action":"App\Http\Controllers\Cartera\Anticipo3Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/detalle\/{detalle}","name":"anticipos.detalle.show","action":"App\Http\Controllers\Cartera\Anticipo3Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/detalle\/{detalle}\/edit","name":"anticipos.detalle.edit","action":"App\Http\Controllers\Cartera\Anticipo3Controller@edit"},{"host":null,"methods":["PUT"],"uri":"anticipos\/detalle\/{detalle}","name":"anticipos.detalle.update","action":"App\Http\Controllers\Cartera\Anticipo3Controller@update"},{"host":null,"methods":["PATCH"],"uri":"anticipos\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\Anticipo3Controller@update"},{"host":null,"methods":["DELETE"],"uri":"anticipos\/detalle\/{detalle}","name":"anticipos.detalle.destroy","action":"App\Http\Controllers\Cartera\Anticipo3Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/detalle","name":"cheques.detalle.index","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/detalle\/create","name":"cheques.detalle.create","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@create"},{"host":null,"methods":["POST"],"uri":"cheques\/detalle","name":"cheques.detalle.store","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/detalle\/{detalle}","name":"cheques.detalle.show","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/detalle\/{detalle}\/edit","name":"cheques.detalle.edit","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"cheques\/detalle\/{detalle}","name":"cheques.detalle.update","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"cheques\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\ChposFechado2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"cheques\/detalle\/{detalle}","name":"cheques.detalle.destroy","action":"App\Http\Controllers\Cartera\ChposFechado2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/anular\/{cheques}","name":"cheques.anular","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@anular"},{"host":null,"methods":["POST"],"uri":"conceptosrc\/evaluate","name":"conceptosrc.evaluate","action":"App\Http\Controllers\Cartera\ConceptosrcController@evaluate"},{"host":null,"methods":["GET","HEAD"],"uri":"notas\/detalle","name":"notas.detalle.index","action":"App\Http\Controllers\Cartera\Nota2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"notas\/detalle\/create","name":"notas.detalle.create","action":"App\Http\Controllers\Cartera\Nota2Controller@create"},{"host":null,"methods":["POST"],"uri":"notas\/detalle","name":"notas.detalle.store","action":"App\Http\Controllers\Cartera\Nota2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"notas\/detalle\/{detalle}","name":"notas.detalle.show","action":"App\Http\Controllers\Cartera\Nota2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"notas\/detalle\/{detalle}\/edit","name":"notas.detalle.edit","action":"App\Http\Controllers\Cartera\Nota2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"notas\/detalle\/{detalle}","name":"notas.detalle.update","action":"App\Http\Controllers\Cartera\Nota2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"notas\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\Nota2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"notas\/detalle\/{detalle}","name":"notas.detalle.destroy","action":"App\Http\Controllers\Cartera\Nota2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/detalle","name":"facturas.detalle.index","action":"App\Http\Controllers\Cartera\Factura2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/detalle\/create","name":"facturas.detalle.create","action":"App\Http\Controllers\Cartera\Factura2Controller@create"},{"host":null,"methods":["POST"],"uri":"facturas\/detalle","name":"facturas.detalle.store","action":"App\Http\Controllers\Cartera\Factura2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/detalle\/{detalle}","name":"facturas.detalle.show","action":"App\Http\Controllers\Cartera\Factura2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/detalle\/{detalle}\/edit","name":"facturas.detalle.edit","action":"App\Http\Controllers\Cartera\Factura2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"facturas\/detalle\/{detalle}","name":"facturas.detalle.update","action":"App\Http\Controllers\Cartera\Factura2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"facturas\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\Factura2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"facturas\/detalle\/{detalle}","name":"facturas.detalle.destroy","action":"App\Http\Controllers\Cartera\Factura2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/search","name":"facturas.search","action":"App\Http\Controllers\Cartera\Factura1Controller@search"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/anular\/{facturas}","name":"facturas.anular","action":"App\Http\Controllers\Cartera\Factura1Controller@anular"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/exportar\/{facturas}","name":"facturas.exportar","action":"App\Http\Controllers\Cartera\Factura1Controller@exportar"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones\/detalle","name":"devoluciones.detalle.index","action":"App\Http\Controllers\Cartera\Devolucion2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones\/detalle\/create","name":"devoluciones.detalle.create","action":"App\Http\Controllers\Cartera\Devolucion2Controller@create"},{"host":null,"methods":["POST"],"uri":"devoluciones\/detalle","name":"devoluciones.detalle.store","action":"App\Http\Controllers\Cartera\Devolucion2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones\/detalle\/{detalle}","name":"devoluciones.detalle.show","action":"App\Http\Controllers\Cartera\Devolucion2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones\/detalle\/{detalle}\/edit","name":"devoluciones.detalle.edit","action":"App\Http\Controllers\Cartera\Devolucion2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"devoluciones\/detalle\/{detalle}","name":"devoluciones.detalle.update","action":"App\Http\Controllers\Cartera\Devolucion2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"devoluciones\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\Devolucion2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"devoluciones\/detalle\/{detalle}","name":"devoluciones.detalle.destroy","action":"App\Http\Controllers\Cartera\Devolucion2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/detalle","name":"ajustesc.detalle.index","action":"App\Http\Controllers\Cartera\Ajustec2Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/detalle\/create","name":"ajustesc.detalle.create","action":"App\Http\Controllers\Cartera\Ajustec2Controller@create"},{"host":null,"methods":["POST"],"uri":"ajustesc\/detalle","name":"ajustesc.detalle.store","action":"App\Http\Controllers\Cartera\Ajustec2Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/detalle\/{detalle}","name":"ajustesc.detalle.show","action":"App\Http\Controllers\Cartera\Ajustec2Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/detalle\/{detalle}\/edit","name":"ajustesc.detalle.edit","action":"App\Http\Controllers\Cartera\Ajustec2Controller@edit"},{"host":null,"methods":["PUT"],"uri":"ajustesc\/detalle\/{detalle}","name":"ajustesc.detalle.update","action":"App\Http\Controllers\Cartera\Ajustec2Controller@update"},{"host":null,"methods":["PATCH"],"uri":"ajustesc\/detalle\/{detalle}","name":null,"action":"App\Http\Controllers\Cartera\Ajustec2Controller@update"},{"host":null,"methods":["DELETE"],"uri":"ajustesc\/detalle\/{detalle}","name":"ajustesc.detalle.destroy","action":"App\Http\Controllers\Cartera\Ajustec2Controller@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"autorizacionesca","name":"autorizacionesca.index","action":"App\Http\Controllers\Cartera\AutorizaCaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"bancos","name":"bancos.index","action":"App\Http\Controllers\Cartera\BancoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"bancos\/create","name":"bancos.create","action":"App\Http\Controllers\Cartera\BancoController@create"},{"host":null,"methods":["POST"],"uri":"bancos","name":"bancos.store","action":"App\Http\Controllers\Cartera\BancoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"bancos\/{bancos}","name":"bancos.show","action":"App\Http\Controllers\Cartera\BancoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"bancos\/{bancos}\/edit","name":"bancos.edit","action":"App\Http\Controllers\Cartera\BancoController@edit"},{"host":null,"methods":["PUT"],"uri":"bancos\/{bancos}","name":"bancos.update","action":"App\Http\Controllers\Cartera\BancoController@update"},{"host":null,"methods":["PATCH"],"uri":"bancos\/{bancos}","name":null,"action":"App\Http\Controllers\Cartera\BancoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"causas","name":"causas.index","action":"App\Http\Controllers\Cartera\CausalController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"causas\/create","name":"causas.create","action":"App\Http\Controllers\Cartera\CausalController@create"},{"host":null,"methods":["POST"],"uri":"causas","name":"causas.store","action":"App\Http\Controllers\Cartera\CausalController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"causas\/{causas}","name":"causas.show","action":"App\Http\Controllers\Cartera\CausalController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"causas\/{causas}\/edit","name":"causas.edit","action":"App\Http\Controllers\Cartera\CausalController@edit"},{"host":null,"methods":["PUT"],"uri":"causas\/{causas}","name":"causas.update","action":"App\Http\Controllers\Cartera\CausalController@update"},{"host":null,"methods":["PATCH"],"uri":"causas\/{causas}","name":null,"action":"App\Http\Controllers\Cartera\CausalController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"cuentabancos","name":"cuentabancos.index","action":"App\Http\Controllers\Cartera\CuentaBancoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"cuentabancos\/create","name":"cuentabancos.create","action":"App\Http\Controllers\Cartera\CuentaBancoController@create"},{"host":null,"methods":["POST"],"uri":"cuentabancos","name":"cuentabancos.store","action":"App\Http\Controllers\Cartera\CuentaBancoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"cuentabancos\/{cuentabancos}","name":"cuentabancos.show","action":"App\Http\Controllers\Cartera\CuentaBancoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"cuentabancos\/{cuentabancos}\/edit","name":"cuentabancos.edit","action":"App\Http\Controllers\Cartera\CuentaBancoController@edit"},{"host":null,"methods":["PUT"],"uri":"cuentabancos\/{cuentabancos}","name":"cuentabancos.update","action":"App\Http\Controllers\Cartera\CuentaBancoController@update"},{"host":null,"methods":["PATCH"],"uri":"cuentabancos\/{cuentabancos}","name":null,"action":"App\Http\Controllers\Cartera\CuentaBancoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"mediopagos","name":"mediopagos.index","action":"App\Http\Controllers\Cartera\MedioPagoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"mediopagos\/create","name":"mediopagos.create","action":"App\Http\Controllers\Cartera\MedioPagoController@create"},{"host":null,"methods":["POST"],"uri":"mediopagos","name":"mediopagos.store","action":"App\Http\Controllers\Cartera\MedioPagoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"mediopagos\/{mediopagos}","name":"mediopagos.show","action":"App\Http\Controllers\Cartera\MedioPagoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"mediopagos\/{mediopagos}\/edit","name":"mediopagos.edit","action":"App\Http\Controllers\Cartera\MedioPagoController@edit"},{"host":null,"methods":["PUT"],"uri":"mediopagos\/{mediopagos}","name":"mediopagos.update","action":"App\Http\Controllers\Cartera\MedioPagoController@update"},{"host":null,"methods":["PATCH"],"uri":"mediopagos\/{mediopagos}","name":null,"action":"App\Http\Controllers\Cartera\MedioPagoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosrc","name":"conceptosrc.index","action":"App\Http\Controllers\Cartera\ConceptosrcController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosrc\/create","name":"conceptosrc.create","action":"App\Http\Controllers\Cartera\ConceptosrcController@create"},{"host":null,"methods":["POST"],"uri":"conceptosrc","name":"conceptosrc.store","action":"App\Http\Controllers\Cartera\ConceptosrcController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosrc\/{conceptosrc}","name":"conceptosrc.show","action":"App\Http\Controllers\Cartera\ConceptosrcController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosrc\/{conceptosrc}\/edit","name":"conceptosrc.edit","action":"App\Http\Controllers\Cartera\ConceptosrcController@edit"},{"host":null,"methods":["PUT"],"uri":"conceptosrc\/{conceptosrc}","name":"conceptosrc.update","action":"App\Http\Controllers\Cartera\ConceptosrcController@update"},{"host":null,"methods":["PATCH"],"uri":"conceptosrc\/{conceptosrc}","name":null,"action":"App\Http\Controllers\Cartera\ConceptosrcController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptonotas","name":"conceptonotas.index","action":"App\Http\Controllers\Cartera\ConceptoNotaController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptonotas\/create","name":"conceptonotas.create","action":"App\Http\Controllers\Cartera\ConceptoNotaController@create"},{"host":null,"methods":["POST"],"uri":"conceptonotas","name":"conceptonotas.store","action":"App\Http\Controllers\Cartera\ConceptoNotaController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptonotas\/{conceptonotas}","name":"conceptonotas.show","action":"App\Http\Controllers\Cartera\ConceptoNotaController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptonotas\/{conceptonotas}\/edit","name":"conceptonotas.edit","action":"App\Http\Controllers\Cartera\ConceptoNotaController@edit"},{"host":null,"methods":["PUT"],"uri":"conceptonotas\/{conceptonotas}","name":"conceptonotas.update","action":"App\Http\Controllers\Cartera\ConceptoNotaController@update"},{"host":null,"methods":["PATCH"],"uri":"conceptonotas\/{conceptonotas}","name":null,"action":"App\Http\Controllers\Cartera\ConceptoNotaController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptocobros","name":"conceptocobros.index","action":"App\Http\Controllers\Cartera\ConceptoCobroController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptocobros\/create","name":"conceptocobros.create","action":"App\Http\Controllers\Cartera\ConceptoCobroController@create"},{"host":null,"methods":["POST"],"uri":"conceptocobros","name":"conceptocobros.store","action":"App\Http\Controllers\Cartera\ConceptoCobroController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptocobros\/{conceptocobros}","name":"conceptocobros.show","action":"App\Http\Controllers\Cartera\ConceptoCobroController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptocobros\/{conceptocobros}\/edit","name":"conceptocobros.edit","action":"App\Http\Controllers\Cartera\ConceptoCobroController@edit"},{"host":null,"methods":["PUT"],"uri":"conceptocobros\/{conceptocobros}","name":"conceptocobros.update","action":"App\Http\Controllers\Cartera\ConceptoCobroController@update"},{"host":null,"methods":["PATCH"],"uri":"conceptocobros\/{conceptocobros}","name":null,"action":"App\Http\Controllers\Cartera\ConceptoCobroController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos","name":"recibos.index","action":"App\Http\Controllers\Cartera\Recibo1Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/create","name":"recibos.create","action":"App\Http\Controllers\Cartera\Recibo1Controller@create"},{"host":null,"methods":["POST"],"uri":"recibos","name":"recibos.store","action":"App\Http\Controllers\Cartera\Recibo1Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"recibos\/{recibos}","name":"recibos.show","action":"App\Http\Controllers\Cartera\Recibo1Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"notas","name":"notas.index","action":"App\Http\Controllers\Cartera\Nota1Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"notas\/create","name":"notas.create","action":"App\Http\Controllers\Cartera\Nota1Controller@create"},{"host":null,"methods":["POST"],"uri":"notas","name":"notas.store","action":"App\Http\Controllers\Cartera\Nota1Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"notas\/{notas}","name":"notas.show","action":"App\Http\Controllers\Cartera\Nota1Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas","name":"facturas.index","action":"App\Http\Controllers\Cartera\Factura1Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/create","name":"facturas.create","action":"App\Http\Controllers\Cartera\Factura1Controller@create"},{"host":null,"methods":["POST"],"uri":"facturas","name":"facturas.store","action":"App\Http\Controllers\Cartera\Factura1Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"facturas\/{facturas}","name":"facturas.show","action":"App\Http\Controllers\Cartera\Factura1Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones","name":"devoluciones.index","action":"App\Http\Controllers\Cartera\Devolucion1Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones\/create","name":"devoluciones.create","action":"App\Http\Controllers\Cartera\Devolucion1Controller@create"},{"host":null,"methods":["POST"],"uri":"devoluciones","name":"devoluciones.store","action":"App\Http\Controllers\Cartera\Devolucion1Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"devoluciones\/{devoluciones}","name":"devoluciones.show","action":"App\Http\Controllers\Cartera\Devolucion1Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"gestioncobros","name":"gestioncobros.index","action":"App\Http\Controllers\Cartera\GestionCobroController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"gestioncobros\/create","name":"gestioncobros.create","action":"App\Http\Controllers\Cartera\GestionCobroController@create"},{"host":null,"methods":["POST"],"uri":"gestioncobros","name":"gestioncobros.store","action":"App\Http\Controllers\Cartera\GestionCobroController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"gestioncobros\/{gestioncobros}","name":"gestioncobros.show","action":"App\Http\Controllers\Cartera\GestionCobroController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosajustec","name":"conceptosajustec.index","action":"App\Http\Controllers\Cartera\ConceptoAjustecController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosajustec\/create","name":"conceptosajustec.create","action":"App\Http\Controllers\Cartera\ConceptoAjustecController@create"},{"host":null,"methods":["POST"],"uri":"conceptosajustec","name":"conceptosajustec.store","action":"App\Http\Controllers\Cartera\ConceptoAjustecController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosajustec\/{conceptosajustec}","name":"conceptosajustec.show","action":"App\Http\Controllers\Cartera\ConceptoAjustecController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptosajustec\/{conceptosajustec}\/edit","name":"conceptosajustec.edit","action":"App\Http\Controllers\Cartera\ConceptoAjustecController@edit"},{"host":null,"methods":["PUT"],"uri":"conceptosajustec\/{conceptosajustec}","name":"conceptosajustec.update","action":"App\Http\Controllers\Cartera\ConceptoAjustecController@update"},{"host":null,"methods":["PATCH"],"uri":"conceptosajustec\/{conceptosajustec}","name":null,"action":"App\Http\Controllers\Cartera\ConceptoAjustecController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc","name":"ajustesc.index","action":"App\Http\Controllers\Cartera\Ajustec1Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/create","name":"ajustesc.create","action":"App\Http\Controllers\Cartera\Ajustec1Controller@create"},{"host":null,"methods":["POST"],"uri":"ajustesc","name":"ajustesc.store","action":"App\Http\Controllers\Cartera\Ajustec1Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/{ajustesc}","name":"ajustesc.show","action":"App\Http\Controllers\Cartera\Ajustec1Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"ajustesc\/{ajustesc}\/edit","name":"ajustesc.edit","action":"App\Http\Controllers\Cartera\Ajustec1Controller@edit"},{"host":null,"methods":["PUT"],"uri":"ajustesc\/{ajustesc}","name":"ajustesc.update","action":"App\Http\Controllers\Cartera\Ajustec1Controller@update"},{"host":null,"methods":["PATCH"],"uri":"ajustesc\/{ajustesc}","name":null,"action":"App\Http\Controllers\Cartera\Ajustec1Controller@update"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos","name":"anticipos.index","action":"App\Http\Controllers\Cartera\AnticipoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/create","name":"anticipos.create","action":"App\Http\Controllers\Cartera\AnticipoController@create"},{"host":null,"methods":["POST"],"uri":"anticipos","name":"anticipos.store","action":"App\Http\Controllers\Cartera\AnticipoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/{anticipos}","name":"anticipos.show","action":"App\Http\Controllers\Cartera\AnticipoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"anticipos\/{anticipos}\/edit","name":"anticipos.edit","action":"App\Http\Controllers\Cartera\AnticipoController@edit"},{"host":null,"methods":["PUT"],"uri":"anticipos\/{anticipos}","name":"anticipos.update","action":"App\Http\Controllers\Cartera\AnticipoController@update"},{"host":null,"methods":["PATCH"],"uri":"anticipos\/{anticipos}","name":null,"action":"App\Http\Controllers\Cartera\AnticipoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques","name":"cheques.index","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@index"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/create","name":"cheques.create","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@create"},{"host":null,"methods":["POST"],"uri":"cheques","name":"cheques.store","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@store"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/{cheques}","name":"cheques.show","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@show"},{"host":null,"methods":["GET","HEAD"],"uri":"cheques\/{cheques}\/edit","name":"cheques.edit","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@edit"},{"host":null,"methods":["PUT"],"uri":"cheques\/{cheques}","name":"cheques.update","action":"App\Http\Controllers\Cartera\ChposFechado1Controller@update"},{"host":null,"methods":["PATCH"],"uri":"cheques\/{cheques}","name":null,"action":"App\Http\Controllers\Cartera\ChposFechado1Controller@update"},{"host":null,"methods":["GET","HEAD"],"uri":"chequesdevueltos","name":"chequesdevueltos.index","action":"App\Http\Controllers\Cartera\ChDevueltoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"chequesdevueltos\/create","name":"chequesdevueltos.create","action":"App\Http\Controllers\Cartera\ChDevueltoController@create"},{"host":null,"methods":["POST"],"uri":"chequesdevueltos","name":"chequesdevueltos.store","action":"App\Http\Controllers\Cartera\ChDevueltoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"chequesdevueltos\/{chequesdevueltos}","name":"chequesdevueltos.show","action":"App\Http\Controllers\Cartera\ChDevueltoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"chequesdevueltos\/{chequesdevueltos}\/edit","name":"chequesdevueltos.edit","action":"App\Http\Controllers\Cartera\ChDevueltoController@edit"},{"host":null,"methods":["PUT"],"uri":"chequesdevueltos\/{chequesdevueltos}","name":"chequesdevueltos.update","action":"App\Http\Controllers\Cartera\ChDevueltoController@update"},{"host":null,"methods":["PATCH"],"uri":"chequesdevueltos\/{chequesdevueltos}","name":null,"action":"App\Http\Controllers\Cartera\ChDevueltoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"carteraterceros","name":"carteraterceros.index","action":"App\Http\Controllers\Cartera\CarteraController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/visitas","name":"ordenes.visitas.index","action":"App\Http\Controllers\Tecnico\VisitaController@index"},{"host":null,"methods":["POST"],"uri":"ordenes\/visitas","name":"ordenes.visitas.store","action":"App\Http\Controllers\Tecnico\VisitaController@store"},{"host":null,"methods":["DELETE"],"uri":"ordenes\/visitas\/{visitas}","name":"ordenes.visitas.destroy","action":"App\Http\Controllers\Tecnico\VisitaController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/remrepuestos","name":"ordenes.remrepuestos.index","action":"App\Http\Controllers\Tecnico\RemRepuController@index"},{"host":null,"methods":["POST"],"uri":"ordenes\/remrepuestos","name":"ordenes.remrepuestos.store","action":"App\Http\Controllers\Tecnico\RemRepuController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/imagenes","name":"ordenes.imagenes.index","action":"App\Http\Controllers\Tecnico\OrdenImagenController@index"},{"host":null,"methods":["POST"],"uri":"ordenes\/imagenes","name":"ordenes.imagenes.store","action":"App\Http\Controllers\Tecnico\OrdenImagenController@store"},{"host":null,"methods":["DELETE"],"uri":"ordenes\/imagenes\/{imagenes}","name":"ordenes.imagenes.destroy","action":"App\Http\Controllers\Tecnico\OrdenImagenController@destroy"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/cerrar\/{ordenes}","name":"ordenes.cerrar","action":"App\Http\Controllers\Tecnico\OrdenController@cerrar"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/mail\/{ordenes}","name":"ordenes.mail","action":"App\Http\Controllers\Tecnico\OrdenController@mail"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/detalle\/remrepuestos","name":"ordenes.detalle.remrepuestos.index","action":"App\Http\Controllers\Tecnico\RemRepuDetalleController@index"},{"host":null,"methods":["POST"],"uri":"ordenes\/detalle\/remrepuestos","name":"ordenes.detalle.remrepuestos.store","action":"App\Http\Controllers\Tecnico\RemRepuDetalleController@store"},{"host":null,"methods":["PUT"],"uri":"ordenes\/detalle\/remrepuestos\/{remrepuestos}","name":"ordenes.detalle.remrepuestos.update","action":"App\Http\Controllers\Tecnico\RemRepuDetalleController@update"},{"host":null,"methods":["PATCH"],"uri":"ordenes\/detalle\/remrepuestos\/{remrepuestos}","name":null,"action":"App\Http\Controllers\Tecnico\RemRepuDetalleController@update"},{"host":null,"methods":["POST"],"uri":"ordenes\/detalle\/legalizacion","name":"ordenes.detalle.remrepuestos.legalizacion","action":"App\Http\Controllers\Tecnico\RemRepuDetalleController@legalizacion"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes","name":"ordenes.index","action":"App\Http\Controllers\Tecnico\OrdenController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/create","name":"ordenes.create","action":"App\Http\Controllers\Tecnico\OrdenController@create"},{"host":null,"methods":["POST"],"uri":"ordenes","name":"ordenes.store","action":"App\Http\Controllers\Tecnico\OrdenController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/{ordenes}","name":"ordenes.show","action":"App\Http\Controllers\Tecnico\OrdenController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"ordenes\/{ordenes}\/edit","name":"ordenes.edit","action":"App\Http\Controllers\Tecnico\OrdenController@edit"},{"host":null,"methods":["PUT"],"uri":"ordenes\/{ordenes}","name":"ordenes.update","action":"App\Http\Controllers\Tecnico\OrdenController@update"},{"host":null,"methods":["PATCH"],"uri":"ordenes\/{ordenes}","name":null,"action":"App\Http\Controllers\Tecnico\OrdenController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"danos","name":"danos.index","action":"App\Http\Controllers\Tecnico\DanoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"danos\/create","name":"danos.create","action":"App\Http\Controllers\Tecnico\DanoController@create"},{"host":null,"methods":["POST"],"uri":"danos","name":"danos.store","action":"App\Http\Controllers\Tecnico\DanoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"danos\/{danos}","name":"danos.show","action":"App\Http\Controllers\Tecnico\DanoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"danos\/{danos}\/edit","name":"danos.edit","action":"App\Http\Controllers\Tecnico\DanoController@edit"},{"host":null,"methods":["PUT"],"uri":"danos\/{danos}","name":"danos.update","action":"App\Http\Controllers\Tecnico\DanoController@update"},{"host":null,"methods":["PATCH"],"uri":"danos\/{danos}","name":null,"action":"App\Http\Controllers\Tecnico\DanoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposorden","name":"tiposorden.index","action":"App\Http\Controllers\Tecnico\TipoOrdenController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposorden\/create","name":"tiposorden.create","action":"App\Http\Controllers\Tecnico\TipoOrdenController@create"},{"host":null,"methods":["POST"],"uri":"tiposorden","name":"tiposorden.store","action":"App\Http\Controllers\Tecnico\TipoOrdenController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposorden\/{tiposorden}","name":"tiposorden.show","action":"App\Http\Controllers\Tecnico\TipoOrdenController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"tiposorden\/{tiposorden}\/edit","name":"tiposorden.edit","action":"App\Http\Controllers\Tecnico\TipoOrdenController@edit"},{"host":null,"methods":["PUT"],"uri":"tiposorden\/{tiposorden}","name":"tiposorden.update","action":"App\Http\Controllers\Tecnico\TipoOrdenController@update"},{"host":null,"methods":["PATCH"],"uri":"tiposorden\/{tiposorden}","name":null,"action":"App\Http\Controllers\Tecnico\TipoOrdenController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"solicitantes","name":"solicitantes.index","action":"App\Http\Controllers\Tecnico\SolicitanteController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"solicitantes\/create","name":"solicitantes.create","action":"App\Http\Controllers\Tecnico\SolicitanteController@create"},{"host":null,"methods":["POST"],"uri":"solicitantes","name":"solicitantes.store","action":"App\Http\Controllers\Tecnico\SolicitanteController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"solicitantes\/{solicitantes}","name":"solicitantes.show","action":"App\Http\Controllers\Tecnico\SolicitanteController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"solicitantes\/{solicitantes}\/edit","name":"solicitantes.edit","action":"App\Http\Controllers\Tecnico\SolicitanteController@edit"},{"host":null,"methods":["PUT"],"uri":"solicitantes\/{solicitantes}","name":"solicitantes.update","action":"App\Http\Controllers\Tecnico\SolicitanteController@update"},{"host":null,"methods":["PATCH"],"uri":"solicitantes\/{solicitantes}","name":null,"action":"App\Http\Controllers\Tecnico\SolicitanteController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"prioridades","name":"prioridades.index","action":"App\Http\Controllers\Tecnico\PrioridadController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"prioridades\/create","name":"prioridades.create","action":"App\Http\Controllers\Tecnico\PrioridadController@create"},{"host":null,"methods":["POST"],"uri":"prioridades","name":"prioridades.store","action":"App\Http\Controllers\Tecnico\PrioridadController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"prioridades\/{prioridades}","name":"prioridades.show","action":"App\Http\Controllers\Tecnico\PrioridadController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"prioridades\/{prioridades}\/edit","name":"prioridades.edit","action":"App\Http\Controllers\Tecnico\PrioridadController@edit"},{"host":null,"methods":["PUT"],"uri":"prioridades\/{prioridades}","name":"prioridades.update","action":"App\Http\Controllers\Tecnico\PrioridadController@update"},{"host":null,"methods":["PATCH"],"uri":"prioridades\/{prioridades}","name":null,"action":"App\Http\Controllers\Tecnico\PrioridadController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptostecnico","name":"conceptostecnico.index","action":"App\Http\Controllers\Tecnico\ConceptoTecController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptostecnico\/create","name":"conceptostecnico.create","action":"App\Http\Controllers\Tecnico\ConceptoTecController@create"},{"host":null,"methods":["POST"],"uri":"conceptostecnico","name":"conceptostecnico.store","action":"App\Http\Controllers\Tecnico\ConceptoTecController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptostecnico\/{conceptostecnico}","name":"conceptostecnico.show","action":"App\Http\Controllers\Tecnico\ConceptoTecController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"conceptostecnico\/{conceptostecnico}\/edit","name":"conceptostecnico.edit","action":"App\Http\Controllers\Tecnico\ConceptoTecController@edit"},{"host":null,"methods":["PUT"],"uri":"conceptostecnico\/{conceptostecnico}","name":"conceptostecnico.update","action":"App\Http\Controllers\Tecnico\ConceptoTecController@update"},{"host":null,"methods":["PATCH"],"uri":"conceptostecnico\/{conceptostecnico}","name":null,"action":"App\Http\Controllers\Tecnico\ConceptoTecController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionestecnico","name":"gestionestecnico.index","action":"App\Http\Controllers\Tecnico\GestionTecnicoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionestecnico\/create","name":"gestionestecnico.create","action":"App\Http\Controllers\Tecnico\GestionTecnicoController@create"},{"host":null,"methods":["POST"],"uri":"gestionestecnico","name":"gestionestecnico.store","action":"App\Http\Controllers\Tecnico\GestionTecnicoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionestecnico\/{gestionestecnico}","name":"gestionestecnico.show","action":"App\Http\Controllers\Tecnico\GestionTecnicoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"gestionestecnico\/{gestionestecnico}\/edit","name":"gestionestecnico.edit","action":"App\Http\Controllers\Tecnico\GestionTecnicoController@edit"},{"host":null,"methods":["PUT"],"uri":"gestionestecnico\/{gestionestecnico}","name":"gestionestecnico.update","action":"App\Http\Controllers\Tecnico\GestionTecnicoController@update"},{"host":null,"methods":["PATCH"],"uri":"gestionestecnico\/{gestionestecnico}","name":null,"action":"App\Http\Controllers\Tecnico\GestionTecnicoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"soportetecnico","name":"soportetecnico.index","action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"soportetecnico\/create","name":"soportetecnico.create","action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@create"},{"host":null,"methods":["POST"],"uri":"soportetecnico","name":"soportetecnico.store","action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"soportetecnico\/{soportetecnico}","name":"soportetecnico.show","action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"soportetecnico\/{soportetecnico}\/edit","name":"soportetecnico.edit","action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@edit"},{"host":null,"methods":["PUT"],"uri":"soportetecnico\/{soportetecnico}","name":"soportetecnico.update","action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@update"},{"host":null,"methods":["PATCH"],"uri":"soportetecnico\/{soportetecnico}","name":null,"action":"App\Http\Controllers\Tecnico\SoporteTecnicoController@update"},{"host":null,"methods":["GET","HEAD"],"uri":"sitios","name":"sitios.index","action":"App\Http\Controllers\Tecnico\SitioController@index"},{"host":null,"methods":["GET","HEAD"],"uri":"sitios\/create","name":"sitios.create","action":"App\Http\Controllers\Tecnico\SitioController@create"},{"host":null,"methods":["POST"],"uri":"sitios","name":"sitios.store","action":"App\Http\Controllers\Tecnico\SitioController@store"},{"host":null,"methods":["GET","HEAD"],"uri":"sitios\/{sitios}","name":"sitios.show","action":"App\Http\Controllers\Tecnico\SitioController@show"},{"host":null,"methods":["GET","HEAD"],"uri":"sitios\/{sitios}\/edit","name":"sitios.edit","action":"App\Http\Controllers\Tecnico\SitioController@edit"},{"host":null,"methods":["PUT"],"uri":"sitios\/{sitios}","name":"sitios.update","action":"App\Http\Controllers\Tecnico\SitioController@update"},{"host":null,"methods":["PATCH"],"uri":"sitios\/{sitios}","name":null,"action":"App\Http\Controllers\Tecnico\SitioController@update"}],
            prefix: '',

            route : function (name, parameters, route) {
                route = route || this.getByName(name);

                if ( ! route ) {
                    return undefined;
                }

                return this.toRoute(route, parameters);
            },

            url: function (url, parameters) {
                parameters = parameters || [];

                var uri = url + '/' + parameters.join('/');

                return this.getCorrectUrl(uri);
            },

            toRoute : function (route, parameters) {
                var uri = this.replaceNamedParameters(route.uri, parameters);
                var qs  = this.getRouteQueryString(parameters);

                if (this.absolute && this.isOtherHost(route)){
                    return "//" + route.host + "/" + uri + qs;
                }

                return this.getCorrectUrl(uri + qs);
            },

            isOtherHost: function (route){
                return route.host && route.host != window.location.hostname;
            },

            replaceNamedParameters : function (uri, parameters) {
                uri = uri.replace(/\{(.*?)\??\}/g, function(match, key) {
                    if (parameters.hasOwnProperty(key)) {
                        var value = parameters[key];
                        delete parameters[key];
                        return value;
                    } else {
                        return match;
                    }
                });

                // Strip out any optional parameters that were not given
                uri = uri.replace(/\/\{.*?\?\}/g, '');

                return uri;
            },

            getRouteQueryString : function (parameters) {
                var qs = [];
                for (var key in parameters) {
                    if (parameters.hasOwnProperty(key)) {
                        qs.push(key + '=' + parameters[key]);
                    }
                }

                if (qs.length < 1) {
                    return '';
                }

                return '?' + qs.join('&');
            },

            getByName : function (name) {
                for (var key in this.routes) {
                    if (this.routes.hasOwnProperty(key) && this.routes[key].name === name) {
                        return this.routes[key];
                    }
                }
            },

            getByAction : function(action) {
                for (var key in this.routes) {
                    if (this.routes.hasOwnProperty(key) && this.routes[key].action === action) {
                        return this.routes[key];
                    }
                }
            },

            getCorrectUrl: function (uri) {
                var url = this.prefix + '/' + uri.replace(/^\/?/, '');

                if ( ! this.absolute) {
                    return url;
                }

                return this.rootUrl.replace('/\/?$/', '') + url;
            }
        };

        var getLinkAttributes = function(attributes) {
            if ( ! attributes) {
                return '';
            }

            var attrs = [];
            for (var key in attributes) {
                if (attributes.hasOwnProperty(key)) {
                    attrs.push(key + '="' + attributes[key] + '"');
                }
            }

            return attrs.join(' ');
        };

        var getHtmlLink = function (url, title, attributes) {
            title      = title || url;
            attributes = getLinkAttributes(attributes);

            return '<a href="' + url + '" ' + attributes + '>' + title + '</a>';
        };

        return {
            // Generate a url for a given controller action.
            // Route.action('HomeController@getIndex', [params = {}])
            action : function (name, parameters) {
                parameters = parameters || {};

                return routes.route(name, parameters, routes.getByAction(name));
            },

            // Generate a url for a given named route.
            // Route.route('routeName', [params = {}])
            route : function (route, parameters) {
                parameters = parameters || {};

                return routes.route(route, parameters);
            },

            // Generate a fully qualified URL to the given path.
            // Route.route('url', [params = {}])
            url : function (route, parameters) {
                parameters = parameters || {};

                return routes.url(route, parameters);
            },

            // Generate a html link to the given url.
            // Route.link_to('foo/bar', [title = url], [attributes = {}])
            link_to : function (url, title, attributes) {
                url = this.url(url);

                return getHtmlLink(url, title, attributes);
            },

            // Generate a html link to the given route.
            // Route.link_to_route('route.name', [title=url], [parameters = {}], [attributes = {}])
            link_to_route : function (route, title, parameters, attributes) {
                var url = this.route(route, parameters);

                return getHtmlLink(url, title, attributes);
            },

            // Generate a html link to the given controller action.
            // Route.link_to_action('HomeController@getIndex', [title=url], [parameters = {}], [attributes = {}])
            link_to_action : function(action, title, parameters, attributes) {
                var url = this.action(action, parameters);

                return getHtmlLink(url, title, attributes);
            }

        };

    }).call(this);

    /**
     * Expose the class either via AMD, CommonJS or the global object
     */
    if (typeof define === 'function' && define.amd) {
        define(function () {
            return laroute;
        });
    }
    else if (typeof module === 'object' && module.exports){
        module.exports = laroute;
    }
    else {
        window.Route = laroute;
    }

}).call(this);


/**
* Class AppRouter  of Backbone Router
* @author KOI || @dropecamargo
* @link http://koi-ti.com
*/

//Global App Backbone
app || (app = {});

(function ($, window, document, undefined) {

    app.AppRouter = new( Backbone.Router.extend({
        routes : {
            //Login
            'login(/)': 'getLogin',

            /*
            |-----------------------
            | Administracion
            |-----------------------
            */

            //Terceros
            'terceros(/)': 'getTercerosMain',
            'terceros/create(/)': 'getTercerosCreate',
            'terceros/:tercero(/)': 'getTercerosShow',
            'terceros/:tercero/edit(/)': 'getTercerosEdit',

            //Empresa
            'empresa(/)': 'getEmpresaEdit',

            //Actividades
            'actividades(/)': 'getActividadesMain',
            'actividades/create(/)': 'getActividadesCreate',
            'actividades/:actividad/edit(/)': 'getActividadesEdit',

            //Sucursales
            'sucursales(/)': 'getSucursalesMain',
            'sucursales/create(/)': 'getSucursalesCreate',
            'sucursales/:sucursal/edit(/)': 'getSucursalesEdit',

            //Ubicaciones
            'ubicaciones(/)': 'getUbicacionesMain',
            'ubicaciones/create(/)': 'getUbicacionCreate',
            'ubicaciones/:ubicacion/edit(/)': 'getUbicacionEdit',

            //Regionales
            'regionales(/)': 'getRegionalesMain',
            'regionales/create(/)': 'getRegionalesCreate',
            'regionales/:regional/edit(/)': 'getRegionalesEdit',

            //Documento
            'documento(/)': 'getDocumentoMain',
            'documento/create(/)': 'getDocumentoCreate',
            'documento/:documentos/edit(/)':'getDocumentoEdit',

            //Departamentos & Municipios
            'departamentos(/)': 'getDepartamentosMain',
            'municipios(/)': 'getMunicipiosMain',

            // Paises
            'paises(/)': 'getPaisesMain',

            'puntosventa(/)': 'getPuntosVentaMain',
            'puntosventa/create(/)': 'getPuntosVentaCreate',
            'puntosventa/:puntoventa/edit(/)': 'getPuntosVentaEdit',

            //Tipos Actividad
            'tiposactividad(/)': 'getTiposActividadMain',
            'tiposactividad/create(/)': 'getTiposActividadCreate',
            'tiposactividad/:tipoactividad/edit(/)': 'getTiposActividadEdit',

            'tiposajuste(/)': 'getTiposAjusteMain',
            'tiposajuste/create(/)': 'getTipoAjusteCreate',
            'tiposajuste/:tipoajuste/edit(/)': 'getTipoAjusteEdit',

            //Tipos Traslados
            'tipostraslados(/)': 'getTiposTrasladosMain',
            'tipostraslados/create(/)': 'getTipoTrasladoCreate',
            'tipostraslados/:tipostraslados/edit(/)': 'getTipoTrasladoEdit',

            //permisos
            'permisos(/)': 'getPermisosMain',
            'modulos(/)': 'getModulosMain',

            'roles(/)': 'getRolesMain',
            'roles/create(/)': 'getRolesCreate',
            'roles/:rol/edit(/)': 'getRolesEdit',

            /*
            |----------------------
            | Comercial
            |----------------------
            */
            'presupuestoasesor(/)': 'getPresupuestoAsesorMain',

            'pedidosc(/)': 'getPedidoscMain',
            'pedidosc/create(/)': 'getPedidoscCreate',
            'pedidosc/:pedidosc(/)': 'getPedidoscShow',

            'conceptoscomercial(/)': 'getConceptosComMain',
            'conceptoscomercial/create(/)': 'getConceptoComCreate',
            'conceptoscomercial/:conceptoscomercial/edit(/)': 'getConceptoComEdit',

            'gestionescomercial(/)': 'getGestionesComercialMain',
            'gestionescomercial/create(/)': 'getGestionComercialCreate',

            /*
            |-----------------------
            | Contabilidad
            |-----------------------
            */
            'documentos(/)': 'getDocumentosMain',
            'documentos/create(/)': 'getDocumentosCreate',
            'documentos/:documento/edit(/)':'getDocumentosEdit',

            'folders(/)': 'getFoldersMain',
            'folders/create(/)': 'getFoldersCreate',
            'folders/:folder/edit(/)':'getFoldersEdit',

            'plancuentas(/)': 'getPlanCuentasMain',
            'plancuentas/create(/)': 'getPlanCuentasCreate',
            'plancuentas/:plancuenta/edit(/)': 'getPlanCuentasEdit',

            'centroscosto(/)': 'getCentrosCostoMain',
            'centroscosto/create(/)': 'getCentrosCostoCreate',
            'centroscosto/:centrocosto/edit(/)': 'getCentrosCostoEdit',

            'asientos(/)': 'getAsientosMain',
            'asientos/create(/)': 'getAsientosCreate',
            'asientos/:asientos(/)': 'getAsientosShow',
            'asientos/:asiento/edit(/)': 'getAsientosEdit',

            /*
            |-----------------------
            | Inventario
            |-----------------------
            */
            'productos(/)': 'getProductosMain',
            'productos/create(/)': 'getProductosCreate',
            'productos/:producto(/)': 'getProductosShow',
            'productos/:producto/edit(/)': 'getProductosEdit',

            'pedidos(/)': 'getPedidosMain',
            'pedidos/create(/)': 'getPedidosCreate',
            'pedidos/:pedido/edit(/)': 'getPedidosEdit',
            'pedidos/:pedidos(/)': 'getPedidoShow',

            'marcas(/)': 'getMarcasMain',
            'marcas/create(/)': 'getMarcasCreate',
            'marcas/:marcas/edit(/)': 'getMarcasEdit',

            'categorias(/)': 'getCategoriasMain',
            'categorias/create(/)': 'getCategoriasCreate',
            'categorias/:categorias/edit(/)': 'getCategoriasEdit',

            'subcategorias(/)': 'getSubCategoriasMain',
            'subcategorias/create(/)': 'getSubCategoriasCreate',
            'subcategorias/:subcategorias/edit(/)': 'getSubCategoriasEdit',

            'impuestos(/)': 'getImpuestosMain',
            'impuestos/create(/)': 'getImpuestoCreate',
            'impuestos/:impuestos/edit(/)': 'getImpuestoEdit',

            'modelos(/)': 'getModelosMain',
            'modelos/create(/)': 'getModelosCreate',
            'modelos/:modelo/edit(/)': 'getModelosEdit',

            'lineas(/)': 'getLineasMain',
            'lineas/create(/)': 'getLineaCreate',
            'lineas/:lineas/edit(/)': 'getLineasEdit',

            'unidades(/)': 'getUnidadesMain',
            'unidades/create(/)': 'getUnidadesCreate',
            'unidades/:unidad/edit(/)': 'getUnidadesEdit',

            'unidadesnegocio(/)': 'getUnidadesNegocioMain',
            'unidadesnegocio/create(/)': 'getUnidadNegocioCreate',
            'unidadesnegocio/:unidadnegocio/edit(/)': 'getUnidadNegocioEdit',

            'servicios(/)': 'getServiciosMain',
            'servicios/create(/)': 'getServiciosCreate',
            'servicios/:servicios/edit(/)': 'getServiciosEdit',

            'ajustes(/)': 'getAjustesMain',
            'ajustes/create(/)': 'getAjustesCreate',
            'ajustes/:ajustes(/)': 'getAjusteShow',

            'traslados(/)': 'getTrasladosMain',
            'traslados/create(/)': 'getTrasladosCreate',
            'traslados/:traslado(/)': 'getTrasladosShow',

            'trasladosubicaciones(/)': 'getTrasladosUbicacionesMain',
            'trasladosubicaciones/create(/)': 'getTrasladoUbicacionCreate',
            'trasladosubicaciones/:traslado(/)': 'getTrasladoUbicacionShow',

            /*
            |-----------------------
            | Cartera
            |-----------------------
            */
            'autorizacionesca(/)': 'getAutorizacionesCaMain',
            'autorizacionesca/:autorizacionesca(/)': 'getAutorizacionesCaShow',

            'bancos(/)': 'getBancosMain',
            'bancos/create(/)': 'getBancosCreate',
            'bancos/:bancos/edit(/)': 'getBancosEdit',

            'causas(/)': 'getCausasMain',
            'causas/create(/)': 'getCausaCreate',
            'causas/:causas/edit(/)': 'getCausaEdit',

            'cuentabancos(/)': 'getCuentaBancosMain',
            'cuentabancos/create(/)': 'getCuentaBancosCreate',
            'cuentabancos/:cuentabancos/edit(/)': 'getCuentaBancosEdit',

            'mediopagos(/)': 'getMedioPagosMain',
            'mediopagos/create(/)': 'getMedioPagosCreate',
            'mediopagos/:mediopagos/edit(/)': 'getMedioPagosEdit',

            'conceptocobros(/)': 'getConceptosCobMain',
            'conceptocobros/create(/)': 'getConceptoCobCreate',
            'conceptocobros/:conceptocobros/edit(/)': 'getConceptoCobEdit',

            'conceptosrc(/)': 'getConceptosrcMain',
            'conceptosrc/create(/)': 'getConceptosrcCreate',
            'conceptosrc/:conceptosrc/edit(/)': 'getConceptosrcEdit',

            'conceptonotas(/)': 'getConceptoNotasMain',
            'conceptonotas/create(/)': 'getConceptoNotasCreate',
            'conceptonotas/:conceptonotas/edit(/)': 'getConceptoNotasEdit',

            'notas(/)': 'getNotasMain',
            'notas/create(/)': 'getNotasCreate',
            'notas/:notas(/)': 'getNotasShow',
            
            'facturas(/)': 'getFacturasMain',
            'facturas/create(/)': 'getFacturaCreate',
            'facturas/:facturas(/)': 'getFacturaShow',

            'recibos(/)': 'getRecibosMain',
            'recibos/create(/)': 'getRecibosCreate',
            'recibos/:recibos(/)': 'getRecibosShow',

            'conceptosajustec(/)': 'getConceptosAjustecMain',
            'conceptosajustec/create(/)': 'getConceptosAjustecCreate',
            'conceptosajustec/:conceptosajustec/edit(/)': 'getConceptosAjustecEdit',

            'ajustesc(/)': 'getAjustescMain',
            'ajustesc/create(/)': 'getAjustescCreate',
            'ajustesc/:ajustesc(/)': 'getAjustescShow',

            'devoluciones(/)': 'getDevolucionesMain',
            'devoluciones/create(/)': 'getDevolucionesCreate',
            'devoluciones/:devoluciones(/)': 'getDevolucionesShow',
    
            'anticipos(/)': 'getAnticiposMain',
            'anticipos/create(/)': 'getAnticipoCreate',
            'anticipos/:anticipos(/)': 'getAnticiposShow',

            'cheques(/)': 'getChequesMain',
            'cheques/create(/)': 'getChequeCreate',
            'cheques/:cheques(/)': 'getChequeShow',

            'chequesdevueltos(/)': 'getChequesDevueltosMain',

            'gestioncobros(/)': 'getGestionCobrosMain',
            'gestioncobros/create(/)': 'getGestionCobroCreate',

            /*
            |----------------------
            | Tecnico
            |----------------------
            */
            'conceptostecnico(/)': 'getConceptosTecMain',
            'conceptostecnico/create(/)': 'getConceptoTecCreate',
            'conceptostecnico/:conceptostecnico/edit(/)': 'getConceptoTecEdit',

            'tiposorden(/)': 'getTiposOrdenMain',
            'tiposorden/create(/)': 'getTiposOrdenCreate',
            'tiposorden/:tiposorden/edit(/)': 'getTiposOrdenEdit',

            'solicitantes(/)': 'getSolicitantesMain',
            'solicitantes/create(/)': 'getSolicitantesCreate',
            'solicitantes/:solicitantes/edit(/)': 'getSolicitantesEdit',

            'danos(/)': 'getDanosMain',
            'danos/create(/)': 'getDanosCreate',
            'danos/:danos/edit(/)': 'getDanosEdit',

            'ordenes(/)': 'getOrdenesMain',
            'ordenes/create(/)': 'getOrdenesCreate',
            'ordenes/:orden/edit(/)': 'getOrdenesEdit',
            'ordenes/:orden(/)': 'getOrdenesShow',

            'prioridades(/)': 'getPrioridadesMain',
            'prioridades/create(/)': 'getPrioridadesCreate',
            'prioridades/:prioridades/edit(/)': 'getPrioridadesEdit',

            'gestionestecnico(/)': 'getGestionesTecnicoMain',
            'gestionestecnico/create(/)': 'getGestionTecnicoCreate',

            'sitios(/)': 'getSitiosMain',
            'sitios/create(/)': 'getSitiosCreate',
            'sitios/:sitios/edit(/)': 'getSitiosEdit',

            'soportetecnico(/)': 'getSoporteTecnicoMain',
        },

        /**
        * Parse queryString to object
        */
        parseQueryString : function(queryString) {
            var params = {};
            if(queryString) {
                _.each(
                    _.map(decodeURI(queryString).split(/&/g),function(el,i){
                        var aux = el.split('='), o = {};
                        if(aux.length >= 1){
                            var val = undefined;
                            if(aux.length == 2)
                                val = aux[1];
                            o[aux[0]] = val;
                        }
                        return o;
                    }),
                    function(o){
                        _.extend(params,o);
                    }
                );
            }
            return params;
        },

        /**
        * Constructor Method
        */
        initialize : function ( opts ){
            // Initialize resources
            this.componentGlobalView = new app.ComponentGlobalView();
            this.componentAddressView = new app.ComponentAddressView();
            this.componentSearchTerceroView = new app.ComponentSearchTerceroView();
            this.componentSearchProductoView = new app.ComponentSearchProductoView();
            this.componentTerceroView = new app.ComponentTerceroView();
            this.componentReporteView = new app.ComponentReporteView();
            this.componentCreateResourceView = new app.ComponentCreateResourceView();
            this.componentSearchCuentaView = new app.ComponentSearchCuentaView();
            this.componentSearchContactoView = new app.ComponentSearchContactoView();
            this.componentConsecutiveView = new app.ComponentConsecutiveView();
            this.componentPedidocView = new app.ComponentSearchPedidocView();
            this.componentFacturaView = new app.ComponentSearchFacturaView();

      	},

        /**
        * Start Backbone history
        */
        start: function () {
            var config = { pushState: true };

            if( document.documentURI.search(/(dev-signsupply)/gi) != '-1' ) {
                config.root = '/dev-signsupply/public/';

            }else if( document.domain.search(/(104.236.57.82|localhost)/gi) != '-1' ) {
                config.root = '/signsupply/public/';
            }

            Backbone.history.start( config );
        },

        /**
        * show view in Calendar Event
        * @param String show
        */
        getLogin: function () {

            if ( this.loginView instanceof Backbone.View ){
                this.loginView.stopListening();
                this.loginView.undelegateEvents();
            }

            this.loginView = new app.UserLoginView( );
        },

        /*------------------------
        | Administracion
        /*-----------------------*/

        //Empresa
        getEmpresaEdit: function () {
            this.empresaModel = new app.EmpresaModel();

            if ( this.createEmpresaView instanceof Backbone.View ){
                this.createEmpresaView.stopListening();
                this.createEmpresaView.undelegateEvents();
            }

            this.createEmpresaView = new app.CreateEmpresaView({ model: this.empresaModel });
            this.empresaModel.fetch();
        },

        // Tercero
        getTercerosMain: function () {

            if ( this.mainTerceroView instanceof Backbone.View ){
                this.mainTerceroView.stopListening();
                this.mainTerceroView.undelegateEvents();
            }

            this.mainTerceroView = new app.MainTerceroView( );
        },

        getTercerosCreate: function () {
            this.terceroModel = new app.TerceroModel();

            if ( this.createTerceroView instanceof Backbone.View ){
                this.createTerceroView.stopListening();
                this.createTerceroView.undelegateEvents();
            }

            this.createTerceroView = new app.CreateTerceroView({ model: this.terceroModel });
            this.createTerceroView.render();
        },

        getTercerosShow: function (tercero) {
            this.terceroModel = new app.TerceroModel();
            this.terceroModel.set({'id': tercero}, {'silent':true});

            if ( this.showTerceroView instanceof Backbone.View ){
                this.showTerceroView.stopListening();
                this.showTerceroView.undelegateEvents();
            }

            this.showTerceroView = new app.ShowTerceroView({ model: this.terceroModel });
        },

        getTercerosEdit: function (tercero) {
            this.terceroModel = new app.TerceroModel();
            this.terceroModel.set({'id': tercero}, {'silent':true});

            if ( this.createTerceroView instanceof Backbone.View ){
                this.createTerceroView.stopListening();
                this.createTerceroView.undelegateEvents();
            }

            this.createTerceroView = new app.CreateTerceroView({ model: this.terceroModel });
            this.terceroModel.fetch();
        },

        /**
        * show view main actividades
        */
        getActividadesMain: function () {

            if ( this.mainActividadView instanceof Backbone.View ){
                this.mainActividadView.stopListening();
                this.mainActividadView.undelegateEvents();
            }

            this.mainActividadView = new app.MainActividadView( );
        },

        getActividadesCreate: function () {
            this.actividadModel = new app.ActividadModel();

            if ( this.createActividadView instanceof Backbone.View ){
                this.createActividadView.stopListening();
                this.createActividadView.undelegateEvents();
            }

            this.createActividadView = new app.CreateActividadView({ model: this.actividadModel });
            this.createActividadView.render();
        },

        getActividadesEdit: function (actividad) {
            this.actividadModel = new app.ActividadModel();
            this.actividadModel.set({'id': actividad}, {silent: true});

            if ( this.createActividadView instanceof Backbone.View ){
                this.createActividadView.stopListening();
                this.createActividadView.undelegateEvents();
            }

            this.createActividadView = new app.CreateActividadView({ model: this.actividadModel });
            this.actividadModel.fetch();
        },

        // Sucursales
        getSucursalesMain: function () {

            if ( this.mainSucursalesView instanceof Backbone.View ){
                this.mainSucursalesView.stopListening();
                this.mainSucursalesView.undelegateEvents();
            }

            this.mainSucursalesView = new app.MainSucursalesView( );
        },

        getSucursalesCreate: function () {
            this.sucursalModel = new app.SucursalModel();

            if ( this.createSucursalView instanceof Backbone.View ){
                this.createSucursalView.stopListening();
                this.createSucursalView.undelegateEvents();
            }

            this.createSucursalView = new app.CreateSucursalView({ model: this.sucursalModel });
            this.createSucursalView.render();
        },

        getSucursalesEdit: function (sucursal) {
            this.sucursalModel = new app.SucursalModel();
            this.sucursalModel.set({'id': sucursal}, {silent: true});

            if ( this.createSucursalView instanceof Backbone.View ){
                this.createSucursalView.stopListening();
                this.createSucursalView.undelegateEvents();
            }

            this.createSucursalView = new app.CreateSucursalView({ model: this.sucursalModel });
            this.sucursalModel.fetch();
        },
        // Ubicaciones
        getUbicacionesMain: function () {

            if ( this.mainUbicacionesView instanceof Backbone.View ){
                this.mainUbicacionesView.stopListening();
                this.mainUbicacionesView.undelegateEvents();
            }
            this.mainUbicacionesView = new app.MainUbicacionesView( );
        },

        getUbicacionCreate: function () {
            this.ubicacionModel = new app.UbicacionModel();

            if ( this.createUbicacionView instanceof Backbone.View ){
                this.createUbicacionView.stopListening();
                this.createUbicacionView.undelegateEvents();
            }
            this.createUbicacionView = new app.CreateUbicacionView({ model: this.ubicacionModel });
            this.createUbicacionView.render();
        },

        getUbicacionEdit: function (ubicacion) {
            this.ubicacionModel = new app.UbicacionModel();
            this.ubicacionModel.set({'id': ubicacion}, {silent: true});

            if ( this.createUbicacionView instanceof Backbone.View ){
                this.createUbicacionView.stopListening();
                this.createUbicacionView.undelegateEvents();
            }
            this.createUbicacionView = new app.CreateUbicacionView({ model: this.ubicacionModel });
            this.ubicacionModel.fetch();
        },
        //Regionales
        getRegionalesMain:function(){
            if ( this.mainRegionalesView instanceof Backbone.View ){
                this.mainRegionalesView.stopListening();
                this.mainRegionalesView.undelegateEvents();
            }

            this.mainRegionalesView = new app.MainRegionalesView( );
        },

        getRegionalesCreate: function () {
            this.regionalModel = new app.RegionalModel();

            if ( this.createRegionalView instanceof Backbone.View ){
                this.createRegionalView.stopListening();
                this.createRegionalView.undelegateEvents();
            }

            this.createRegionalView = new app.CreateRegionalView({ model: this.regionalModel });
            this.createRegionalView.render();
        },

        getRegionalesEdit: function (regional) {
            this.regionalModel = new app.RegionalModel();
            this.regionalModel.set({'id': regional}, {silent: true});

            if ( this.createRegionalView instanceof Backbone.View ){
                this.createRegionalView.stopListening();
                this.createRegionalView.undelegateEvents();
            }

            this.createRegionalView = new app.CreateRegionalView({ model: this.regionalModel });
            this.regionalModel.fetch();
        },

        // Vistas de Departamentos
        getDepartamentosMain: function () {

            if ( this.mainDepartamentoView instanceof Backbone.View ){
                this.mainDepartamentoView.stopListening();
                this.mainDepartamentoView.undelegateEvents();
            }

            this.mainDepartamentoView = new app.MainDepartamentoView( );
        },

        //Documento
        getDocumentoMain: function () {
            if ( this.mainDocumentoView instanceof Backbone.View ){
                this.mainDocumentoView.stopListening();
                this.mainDocumentoView.undelegateEvents();
            }

            this.mainDocumentoView = new app.MainDocumentoView( );
        },

        getDocumentoCreate: function () {
            this.documentosModel = new app.DocumentosModel();

            if ( this.createDocumentosView instanceof Backbone.View ){
                this.createDocumentosView.stopListening();
                this.createDocumentosView.undelegateEvents();
            }

            this.createDocumentosView = new app.CreateDocumentosView({ model: this.documentosModel });
            this.createDocumentosView.render();
        },

        getDocumentoEdit: function (documento) {
            this.documentosModel = new app.DocumentosModel();
            this.documentosModel.set({'id': documento}, {silent: true});

            if ( this.createDocumentosView instanceof Backbone.View ){
                this.createDocumentosView.stopListening();
                this.createDocumentosView.undelegateEvents();
            }

            this.createDocumentosView = new app.CreateDocumentosView({ model: this.documentosModel });
            this.documentosModel.fetch();
        },

        // Vistas de Municipios
        getMunicipiosMain: function () {

            if ( this.mainMunicipioView instanceof Backbone.View ){
                this.mainMunicipioView.stopListening();
                this.mainMunicipioView.undelegateEvents();
            }

            this.mainMunicipioView = new app.MainMunicipioView( );
        },
        // Vistas de Paises
        getPaisesMain: function () {

            if ( this.mainPaisesView instanceof Backbone.View ){
                this.mainPaisesView.stopListening();
                this.mainPaisesView.undelegateEvents();
            }
            this.mainPaisesView = new app.MainPaisesView( );
        },

        // Puntos de Venta
        getPuntosVentaMain: function () {

            if ( this.mainPuntoventaView instanceof Backbone.View ){
                this.mainPuntoventaView.stopListening();
                this.mainPuntoventaView.undelegateEvents();
            }

            this.mainPuntoventaView = new app.MainPuntoventaView( );
        },

        /**
        * show view create puntos de venta
        */
        getPuntosVentaCreate: function () {
            this.puntoVentaModel = new app.PuntoVentaModel();

            if ( this.createPuntoventaView instanceof Backbone.View ){
                this.createPuntoventaView.stopListening();
                this.createPuntoventaView.undelegateEvents();
            }

            this.createPuntoventaView = new app.CreatePuntoventaView({ model: this.puntoVentaModel });
            this.createPuntoventaView.render();
        },

        /**
        * show view edit puntos de venta
        */
        getPuntosVentaEdit: function (puntoventa) {
            this.puntoVentaModel = new app.PuntoVentaModel();
            this.puntoVentaModel.set({'id': puntoventa}, {silent: true});

            if ( this.createPuntoventaView instanceof Backbone.View ){
                this.createPuntoventaView.stopListening();
                this.createPuntoventaView.undelegateEvents();
            }

            this.createPuntoventaView = new app.CreatePuntoventaView({ model: this.puntoVentaModel });
            this.puntoVentaModel.fetch();
        },

        // Tipos Actividad
        getTiposActividadMain: function () {

            if ( this.mainTipoActividadView instanceof Backbone.View ){
                this.mainTipoActividadView.stopListening();
                this.mainTipoActividadView.undelegateEvents();
            }

            this.mainTipoActividadView = new app.MainTipoActividadView( );
        },

        /**
        * show view create tipos actividad
        */
        getTiposActividadCreate: function () {
            this.tipoActividadModel = new app.TipoActividadModel();

            if ( this.createTipoactividadView instanceof Backbone.View ){
                this.createTipoactividadView.stopListening();
                this.createTipoactividadView.undelegateEvents();
            }

            this.createTipoactividadView = new app.CreateTipoActividadView({ model: this.tipoActividadModel });
            this.createTipoactividadView.render();
        },

        /**
        * show view edit tipos actividad
        */
        getTiposActividadEdit: function (tipoactividad) {
            this.tipoActividadModel = new app.TipoActividadModel();
            this.tipoActividadModel.set({'id': tipoactividad}, {silent: true});

            if ( this.createTipoActividadView instanceof Backbone.View ){
                this.createTipoActividadView.stopListening();
                this.createTipoActividadView.undelegateEvents();
            }

            this.createTipoActividadView = new app.CreateTipoActividadView({ model: this.tipoActividadModel });
            this.tipoActividadModel.fetch();
        },
        // Tipos Ajuste
        getTiposAjusteMain: function () {

            if ( this.mainTipoAjusteView instanceof Backbone.View ){
                this.mainTipoAjusteView.stopListening();
                this.mainTipoAjusteView.undelegateEvents();
            }

            this.mainTipoAjusteView = new app.MainTipoAjusteView( );
        },

        /**
        * show view create tipos ajuste
        */
        getTipoAjusteCreate: function () {
            this.tipoAjusteModel = new app.TipoAjusteModel();

            if ( this.createTipoajusteView instanceof Backbone.View ){
                this.createTipoajusteView.stopListening();
                this.createTipoajusteView.undelegateEvents();
            }

            this.createTipoajusteView = new app.CreateTipoAjusteView({ model: this.tipoAjusteModel });
            this.createTipoajusteView.render();
        },

        /**
        * show view edit tipos ajuste
        */
        getTipoAjusteEdit: function (tipoajuste) {
            this.tipoAjusteModel = new app.TipoAjusteModel();
            this.tipoAjusteModel.set({'id': tipoajuste}, {silent: true});

            if ( this.createTipoAjusteView instanceof Backbone.View ){
                this.createTipoAjusteView.stopListening();
                this.createTipoAjusteView.undelegateEvents();
            }

            this.createTipoAjusteView = new app.CreateTipoAjusteView({ model: this.tipoAjusteModel });
            this.tipoAjusteModel.fetch();
        },

        //Tipos Traslados
        getTiposTrasladosMain: function () {

            if ( this.mainTipoTrasladosView instanceof Backbone.View ){
                this.mainTipoTrasladosView.stopListening();
                this.mainTipoTrasladosView.undelegateEvents();
            }

            this.mainTipoTrasladosView = new app.MainTipoTrasladosView( );
        },

        /**
        * show view create tipos traslado
        */
        getTipoTrasladoCreate: function () {
            this.tipoTrasladoModel = new app.TipoTrasladoModel();

            if ( this.createTipoTrasladoView instanceof Backbone.View ){
                this.createTipoTrasladoView.stopListening();
                this.createTipoTrasladoView.undelegateEvents();
            }

            this.createTipoTrasladoView = new app.CreateTipoTrasladoView({ model: this.tipoTrasladoModel });
            this.createTipoTrasladoView.render();
        },

        /**
        * show view edit tipos traslado
        */
        getTipoTrasladoEdit: function (tipotraslado) {
            this.tipoTrasladoModel = new app.TipoTrasladoModel();
            this.tipoTrasladoModel.set({'id': tipotraslado}, {silent: true});

            if ( this.createTipoTrasladoView instanceof Backbone.View ){
                this.createTipoTrasladoView.stopListening();
                this.createTipoTrasladoView.undelegateEvents();
            }

            this.createTipoTrasladoView = new app.CreateTipoTrasladoView({ model: this.tipoTrasladoModel });
            this.tipoTrasladoModel.fetch();
        },

        /*
        |-----------------------
        | Comercial
        |-----------------------
        */
        getPresupuestoAsesorMain: function () {
            if ( this.mainPresupuestoAsesorView instanceof Backbone.View ){
                this.mainPresupuestoAsesorView.stopListening();
                this.mainPresupuestoAsesorView.undelegateEvents();
            }

            this.mainPresupuestoAsesorView = new app.MainPresupuestoAsesorView( );
        },

        getConceptosComMain: function () {

            if ( this.mainConceptoComView instanceof Backbone.View ){
                this.mainConceptoComView.stopListening();
                this.mainConceptoComView.undelegateEvents();
            }

            this.mainConceptoComView = new app.MainConceptosComView( );
        },

        getConceptoComCreate: function () {
            this.conceptoComModel = new app.ConceptoComModel();

            if ( this.createConceptoComView instanceof Backbone.View ){
                this.createConceptoComView.stopListening();
                this.createConceptoComView.undelegateEvents();
            }

            this.createConceptoComView = new app.CreateConceptoComView({ model: this.conceptoComModel });
            this.createConceptoComView.render();
        },

        getConceptoComEdit: function (conceptoscomercial) {
            this.conceptoComModel = new app.ConceptoComModel();
            this.conceptoComModel.set({'id': conceptoscomercial}, {'silent':true});

            if ( this.createConceptoComView instanceof Backbone.View ){
                this.createConceptoComView.stopListening();
                this.createConceptoComView.undelegateEvents();
            }

            this.createConceptoComView = new app.CreateConceptoComView({ model: this.conceptoComModel });
            this.conceptoComModel.fetch();
        },

        getGestionesComercialMain: function(){

            if (this.mainGestionesComercialView instanceof Backbone.View) {
                this.mainGestionesComercialView.stopListening();
                this.mainGestionesComercialView.undelegateEvents();
            }
            this.mainGestionesComercialView = new app.MainGestionesComercialView( );
        },
        getGestionComercialCreate: function(){
            this.gestionComercialModel = new app.GestionComercialModel();

            if (this.createGestionComercialView instanceof Backbone.View) {
                this.createGestionComercialView.stopListening();
                this.createGestionComercialView.undelegateEvents();
            }
            this.createGestionComercialView = new app.CreateGestionComercialView({ model: this.gestionComercialModel });
            this.createGestionComercialView.render();
        },

        /*
        |-----------------------
        | Contabilidad
        |-----------------------
        */

        getFoldersMain: function () {

            if ( this.mainFoldersView instanceof Backbone.View ){
                this.mainFoldersView.stopListening();
                this.mainFoldersView.undelegateEvents();
            }

            this.mainFoldersView = new app.MainFoldersView( );
        },

        getFoldersCreate: function () {
            this.folderModel = new app.FolderModel();

            if ( this.createFolderView instanceof Backbone.View ){
                this.createFolderView.stopListening();
                this.createFolderView.undelegateEvents();
            }

            this.createFolderView = new app.CreateFolderView({ model: this.folderModel });
            this.createFolderView.render();
        },

        getFoldersEdit: function (folder) {
            this.folderModel = new app.FolderModel();
            this.folderModel.set({'id': folder}, {silent: true});

            if ( this.createFolderView instanceof Backbone.View ){
                this.createFolderView.stopListening();
                this.createFolderView.undelegateEvents();
            }

            this.createFolderView = new app.CreateFolderView({ model: this.folderModel });
            this.folderModel.fetch();
        },

        //Documento
        getDocumentosMain: function () {
            if ( this.mainDocumentosView instanceof Backbone.View ){
                this.mainDocumentosView.stopListening();
                this.mainDocumentosView.undelegateEvents();
            }

            this.mainDocumentosView = new app.MainDocumentosView( );
        },

        getDocumentosCreate: function () {
            this.documentoModel = new app.DocumentoModel();

            if ( this.createDocumentoView instanceof Backbone.View ){
                this.createDocumentoView.stopListening();
                this.createDocumentoView.undelegateEvents();
            }

            this.createDocumentoView = new app.CreateDocumentoView({ model: this.documentoModel });
            this.createDocumentoView.render();
        },

        getDocumentosEdit: function (documento) {
            this.documentoModel = new app.DocumentoModel();
            this.documentoModel.set({'id': documento}, {silent: true});

            if ( this.createDocumentoView instanceof Backbone.View ){
                this.createDocumentoView.stopListening();
                this.createDocumentoView.undelegateEvents();
            }

            this.createDocumentoView = new app.CreateDocumentoView({ model: this.documentoModel });
            this.documentoModel.fetch();
        },

        // Plan cuentas
        getPlanCuentasMain: function () {

            if ( this.mainPlanCuentasView instanceof Backbone.View ){
                this.mainPlanCuentasView.stopListening();
                this.mainPlanCuentasView.undelegateEvents();
            }

            this.mainPlanCuentasView = new app.MainPlanCuentasView( );
        },

        getPlanCuentasCreate: function () {
            this.planCuentaModel = new app.PlanCuentaModel();

            if ( this.createPlanCuentaView instanceof Backbone.View ){
                this.createPlanCuentaView.stopListening();
                this.createPlanCuentaView.undelegateEvents();
            }

            this.createPlanCuentaView = new app.CreatePlanCuentaView({ model: this.planCuentaModel });
            this.createPlanCuentaView.render();
        },

        getPlanCuentasEdit: function (plancuenta) {
            this.planCuentaModel = new app.PlanCuentaModel();
            this.planCuentaModel.set({'id': plancuenta}, {silent: true});

            if ( this.createPlanCuentaView instanceof Backbone.View ){
                this.createPlanCuentaView.stopListening();
                this.createPlanCuentaView.undelegateEvents();
            }

            this.createPlanCuentaView = new app.CreatePlanCuentaView({ model: this.planCuentaModel });
            this.planCuentaModel.fetch();
        },

        // Centro de Costos
        getCentrosCostoMain: function () {

            if ( this.mainCentrosCostoView instanceof Backbone.View ){
                this.mainCentrosCostoView.stopListening();
                this.mainCentrosCostoView.undelegateEvents();
            }

            this.mainCentrosCostoView = new app.MainCentrosCostoView( );
        },

        getCentrosCostoCreate: function () {
            this.centroCostoModel = new app.CentroCostoModel();

            if ( this.createCentroCostoView instanceof Backbone.View ){
                this.createCentroCostoView.stopListening();
                this.createCentroCostoView.undelegateEvents();
            }

            this.createCentroCostoView = new app.CreateCentroCostoView({ model: this.centroCostoModel, parameters: { callback: 'toShow' } });
            this.createCentroCostoView.render();
        },

        getCentrosCostoEdit: function (centrocosto) {
            this.centroCostoModel = new app.CentroCostoModel();
            this.centroCostoModel.set({'id': centrocosto}, {silent: true});

            if ( this.createCentroCostoView instanceof Backbone.View ){
                this.createCentroCostoView.stopListening();
                this.createCentroCostoView.undelegateEvents();
            }

            this.createCentroCostoView = new app.CreateCentroCostoView({ model: this.centroCostoModel, parameters: { callback: 'toShow' } });
            this.centroCostoModel.fetch();
        },

        // Asientos
         getAsientosMain: function () {

            if ( this.mainAsientosView instanceof Backbone.View ){
                this.mainAsientosView.stopListening();
                this.mainAsientosView.undelegateEvents();
            }

            this.mainAsientosView = new app.MainAsientosView( );
        },

        getAsientosCreate: function () {
            this.asientoModel = new app.AsientoModel();

            if ( this.createAsientoView instanceof Backbone.View ){
                this.createAsientoView.stopListening();
                this.createAsientoView.undelegateEvents();
            }

            this.createAsientoView = new app.CreateAsientoView({ model: this.asientoModel });
            this.createAsientoView.render();
        },

        getAsientosShow: function (asiento) {
            this.asientoModel = new app.AsientoModel();
            this.asientoModel.set({'id': asiento}, {'silent':true});

            if ( this.showAsientoView instanceof Backbone.View ){
                this.showAsientoView.stopListening();
                this.showAsientoView.undelegateEvents();
            }

            this.showAsientoView = new app.ShowAsientoView({ model: this.asientoModel });
        },

        getAsientosEdit: function (asiento) {
            this.asientoModel = new app.AsientoModel();
            this.asientoModel.set({'id': asiento}, {'silent':true});

            if ( this.editAsientoView instanceof Backbone.View ){
                this.editAsientoView.stopListening();
                this.editAsientoView.undelegateEvents();
            }

            if ( this.createAsientoView instanceof Backbone.View ){
                this.createAsientoView.stopListening();
                this.createAsientoView.undelegateEvents();
            }

            this.editAsientoView = new app.EditAsientoView({ model: this.asientoModel });
            this.asientoModel.fetch();
        },

        // Inventario

        // Marca
        getMarcasMain: function () {

            if ( this.mainMarcaView instanceof Backbone.View ){
                this.mainMarcaView.stopListening();
                this.mainMarcaView.undelegateEvents();
            }

            this.mainMarcaView = new app.MainMarcasView( );
        },

        getMarcasCreate: function () {
            this.marcaModel = new app.MarcaModel();

            if ( this.createMarcaView instanceof Backbone.View ){
                this.createMarcaView.stopListening();
                this.createMarcaView.undelegateEvents();
            }

            this.createMarcaView = new app.CreateMarcaView({ model: this.marcaModel });
            this.createMarcaView.render();
        },

        getMarcasEdit: function (marcas) {
            this.marcaModel = new app.MarcaModel();
            this.marcaModel.set({'id': marcas}, {'silent':true});

            if ( this.createMarcaView instanceof Backbone.View ){
                this.createMarcaView.stopListening();
                this.createMarcaView.undelegateEvents();
            }

            this.createMarcaView = new app.CreateMarcaView({ model: this.marcaModel });
            this.marcaModel.fetch();
        },

        getCategoriasMain: function () {

            if ( this.mainCategoriasView instanceof Backbone.View ){
                this.mainCategoriasView.stopListening();
                this.mainCategoriasView.undelegateEvents();
            }

            this.mainCategoriasView = new app.MainCategoriasView( );
        },

        getCategoriasCreate: function () {
            this.categoriaModel = new app.CategoriaModel();

            if ( this.createCategoriaView instanceof Backbone.View ){
                this.createCategoriaView.stopListening();
                this.createCategoriaView.undelegateEvents();
            }

            this.createCategoriaView = new app.CreateCategoriaView({ model: this.categoriaModel });
            this.createCategoriaView.render();
        },

        getCategoriasEdit: function (categorias) {
            this.categoriaModel = new app.CategoriaModel();
            this.categoriaModel.set({'id': categorias}, {'silent':true});

            if ( this.createCategoriaView instanceof Backbone.View ){
                this.createCategoriaView.stopListening();
                this.createCategoriaView.undelegateEvents();
            }

            this.createCategoriaView = new app.CreateCategoriaView({ model: this.categoriaModel });
            this.categoriaModel.fetch();
        },
        getSubCategoriasMain: function () {

            if ( this.mainSubCategoriasView instanceof Backbone.View ){
                this.mainSubCategoriasView.stopListening();
                this.mainSubCategoriasView.undelegateEvents();
            }

            this.mainSubCategoriasView = new app.MainSubCategoriasView( );
        },

        getSubCategoriasCreate: function () {
            this.subcategoriaModel = new app.SubCategoriaModel();

            if ( this.createSubCategoriaView instanceof Backbone.View ){
                this.createSubCategoriaView.stopListening();
                this.createSubCategoriaView.undelegateEvents();
            }

            this.createCategoriaView = new app.CreateSubCategoriaView({ model: this.subcategoriaModel });
            this.createCategoriaView.render();
        },

        getSubCategoriasEdit: function (subcategorias) {
            this.subcategoriaModel = new app.SubCategoriaModel();
            this.subcategoriaModel.set({'id': subcategorias}, {'silent':true});

            if ( this.createSubCategoriaView instanceof Backbone.View ){
                this.createSubCategoriaView.stopListening();
                this.createSubCategoriaView.undelegateEvents();
            }

            this.createSubCategoriaView = new app.CreateSubCategoriaView({ model: this.subcategoriaModel });
            this.subcategoriaModel.fetch();
        },

        getImpuestosMain: function () {

            if ( this.mainImpuestosView instanceof Backbone.View ){
                this.mainImpuestosView.stopListening();
                this.mainImpuestosView.undelegateEvents();
            }

            this.mainImpuestosView = new app.MainImpuestosView( );
        },

        getImpuestoCreate: function () {
            this.impuestoModel = new app.ImpuestoModel();

            if ( this.createImpuestoView instanceof Backbone.View ){
                this.createImpuestoView.stopListening();
                this.createImpuestoView.undelegateEvents();
            }

            this.createImpuestoView = new app.CreateImpuestoView({ model: this.impuestoModel });
            this.createImpuestoView.render();
        },

        getImpuestoEdit: function (impuestos) {
            this.impuestoModel = new app.ImpuestoModel();
            this.impuestoModel.set({'id': impuestos}, {'silent':true});

            if ( this.createImpuestoView instanceof Backbone.View ){
                this.createImpuestoView.stopListening();
                this.createImpuestoView.undelegateEvents();
            }

            this.createImpuestoView = new app.CreateImpuestoView({ model: this.impuestoModel });
            this.impuestoModel.fetch();
        },

        getModelosMain: function () {

            if ( this.mainModeloView instanceof Backbone.View ){
                this.mainModeloView.stopListening();
                this.mainModeloView.undelegateEvents();
            }

            this.mainModeloView = new app.MainModelosView( );
        },

        getModelosCreate: function () {
            this.modeloModel = new app.ModeloModel();

            if ( this.createModeloView instanceof Backbone.View ){
                this.createModeloView.stopListening();
                this.createModeloView.undelegateEvents();
            }

            this.createModeloView = new app.CreateModeloView({ model: this.modeloModel });
            this.createModeloView.render();
        },

        getModelosEdit: function (modelos) {
            this.modeloModel = new app.ModeloModel();
            this.modeloModel.set({'id': modelos}, {'silent':true});

            if ( this.createModeloView instanceof Backbone.View ){
                this.createModeloView.stopListening();
                this.createModeloView.undelegateEvents();
            }

            this.createModeloView = new app.CreateModeloView({ model: this.modeloModel });
            this.modeloModel.fetch();
        },

        getLineasMain: function () {

            if ( this.mainLineasView instanceof Backbone.View ){
                this.mainLineasView.stopListening();
                this.mainLineasView.undelegateEvents();
            }

            this.mainLineasView = new app.MainLineasView( );
        },

        getLineaCreate: function () {
            this.lineaModel = new app.LineaModel();

            if ( this.createLineaView instanceof Backbone.View ){
                this.createLineaView.stopListening();
                this.createLineaView.undelegateEvents();
            }

            this.createLineaView = new app.CreateLineaView({ model: this.lineaModel });
            this.createLineaView.render();
        },

        getLineasEdit: function (lineas) {
            this.lineaModel = new app.LineaModel();
            this.lineaModel.set({'id': lineas}, {silent: true});

            if ( this.createLineaView instanceof Backbone.View ){
                this.createLineaView.stopListening();
                this.createLineaView.undelegateEvents();
            }

            this.createLineaView = new app.CreateLineaView({ model: this.lineaModel });
            this.lineaModel.fetch();
        },

        getUnidadesMain: function () {

            if ( this.mainUnidadesView instanceof Backbone.View ){
                this.mainUnidadesView.stopListening();
                this.mainUnidadesView.undelegateEvents();
            }

            this.mainUnidadesView = new app.MainUnidadesView( );
        },

        getUnidadesCreate: function () {
            this.unidadModel = new app.UnidadModel();

            if ( this.createUnidadView instanceof Backbone.View ){
                this.createUnidadView.stopListening();
                this.createUnidadView.undelegateEvents();
            }

            this.createUnidadView = new app.CreateUnidadView({ model: this.unidadModel });
            this.createUnidadView.render();
        },

        getUnidadesEdit: function (unidad) {
            this.unidadModel = new app.UnidadModel();
            this.unidadModel.set({'id': unidad}, {silent: true});

            if ( this.createUnidadView instanceof Backbone.View ){
                this.createUnidadView.stopListening();
                this.createUnidadView.undelegateEvents();
            }

            this.createUnidadView = new app.CreateUnidadView({ model: this.unidadModel });
            this.unidadModel.fetch();
        },

        getUnidadesNegocioMain: function () {

            if ( this.mainUnidadesNegocioView instanceof Backbone.View ){
                this.mainUnidadesNegocioView.stopListening();
                this.mainUnidadesNegocioView.undelegateEvents();
            }

            this.mainUnidadesNegocioView = new app.MainUnidadesNegocioView( );
        },

        getUnidadNegocioCreate: function () {
            this.unidadNegocioModel = new app.UnidadNegocioModel();

            if ( this.createUnidadNegocioView instanceof Backbone.View ){
                this.createUnidadNegocioView.stopListening();
                this.createUnidadNegocioView.undelegateEvents();
            }

            this.createUnidadNegocioView = new app.CreateUnidadNegocioView({ model: this.unidadNegocioModel });
            this.createUnidadNegocioView.render();
        },

        getUnidadNegocioEdit: function (unidadnegocio) {
            this.unidadNegocioModel = new app.UnidadNegocioModel();
            this.unidadNegocioModel.set({'id': unidadnegocio}, {silent: true});

            if ( this.createUnidadNegocioView instanceof Backbone.View ){
                this.createUnidadNegocioView.stopListening();
                this.createUnidadNegocioView.undelegateEvents();
            }

            this.createUnidadNegocioView = new app.CreateUnidadNegocioView({ model: this.unidadNegocioModel });
            this.unidadNegocioModel.fetch();
        },

        // Servicios
        getServiciosMain: function () {

            if ( this.mainServiciosView instanceof Backbone.View ){
                this.mainServiciosView.stopListening();
                this.mainServiciosView.undelegateEvents();
            }

            this.mainServiciosView = new app.MainServiciosView( );
        },

        getServiciosCreate: function () {
            this.servicioModel = new app.ServicioModel();

            if ( this.createServicioView instanceof Backbone.View ){
                this.createServicioView.stopListening();
                this.createServicioView.undelegateEvents();
            }

            this.createServicioView = new app.CreateServicioView({ model: this.servicioModel });
            this.createServicioView.render();
        },

        getServiciosEdit: function ( servicios ) {
            this.servicioModel = new app.ServicioModel();
            this.servicioModel.set({'id': servicios }, {'silent':true});

            if ( this.createServicioView instanceof Backbone.View ){
                this.createServicioView.stopListening();
                this.createServicioView.undelegateEvents();
            }

            this.createServicioView = new app.CreateServicioView({ model: this.servicioModel });
            this.servicioModel.fetch();
        },

        /**
        * show view main producto
        */
        getProductosMain: function () {

            if ( this.mainProductosView instanceof Backbone.View ){
                this.mainProductosView.stopListening();
                this.mainProductosView.undelegateEvents();
            }

            this.mainProductosView = new app.MainProductosView( );
        },

        /**
        * show view create producto
        */
        getProductosCreate: function () {
            this.productoModel = new app.ProductoModel();

            if ( this.createProductoView instanceof Backbone.View ){
                this.createProductoView.stopListening();
                this.createProductoView.undelegateEvents();
            }

            this.createProductoView = new app.CreateProductoView({ model: this.productoModel });
            this.createProductoView.render();
        },

        /**
        * show view edit producto
        */
        getProductosEdit: function (producto) {
            this.productoModel = new app.ProductoModel();
            this.productoModel.set({'id': producto}, {silent: true});

            if ( this.createProductoView instanceof Backbone.View ){
                this.createProductoView.stopListening();
                this.createProductoView.undelegateEvents();
            }

            this.createProductoView = new app.CreateProductoView({ model: this.productoModel });
            this.productoModel.fetch();
        },

        getProductosShow: function (producto) {
            this.productoModel = new app.ProductoModel();
            this.productoModel.set({'id': producto}, {'silent':true});

            if ( this.showProductoView instanceof Backbone.View ){
                this.showProductoView.stopListening();
                this.showProductoView.undelegateEvents();
            }

            this.showProductoView = new app.ShowProductoView({ model: this.productoModel });
        },

        /**
        * show view main pedido
        */
        getPedidosMain: function () {

            if ( this.mainPedidosView instanceof Backbone.View ){
                this.mainPedidosView.stopListening();
                this.mainPedidosView.undelegateEvents();
            }

            this.mainPedidosView = new app.MainPedidosView( );
        },

        /**
        * show view create pedido
        */
        getPedidosCreate: function () {

            this.pedidoModel = new app.PedidoModel();

            if ( this.createPedidoView instanceof Backbone.View ){
                this.createPedidoView.stopListening();
                this.createPedidoView.undelegateEvents();
            }

            this.createPedidoView = new app.CreatePedidoView({ model: this.pedidoModel });
            this.createPedidoView.render();
        },

        /**
        * show view show pedido
        */
        getPedidoShow: function (pedidos) {
            this.pedidoModel = new app.PedidoModel();
            this.pedidoModel.set({'id': pedidos}, {'silent':true});

            if ( this.showPedidoView instanceof Backbone.View ){
                this.showPedidoView.stopListening();
                this.showPedidoView.undelegateEvents();
            }

            this.showPedidoView = new app.ShowPedidoView({ model: this.pedidoModel });
            this.pedidoModel.fetch();
        },

        /**
        * show view edit pedido
        */
        getPedidosEdit: function (pedido) {

            this.pedidoModel = new app.PedidoModel();
            this.pedidoModel.set({'id': pedido}, {silent: true});

            if ( this.editPedidoView instanceof Backbone.View ){
                this.editPedidoView.stopListening();
                this.editPedidoView.undelegateEvents();
            }
            if ( this.createPedidoView instanceof Backbone.View ){
                this.createPedidoView.stopListening();
                this.createPedidoView.undelegateEvents();
            }

            this.editPedidoView = new app.EditPedidoView({ model: this.pedidoModel });
            this.pedidoModel.fetch();

        },

        /**
        * show view main ajuste
        */
        getAjustesMain:function(){

            if ( this.mainAjustesView instanceof Backbone.View ){
                this.mainAjustesView.stopListening();
                this.mainAjustesView.undelegateEvents();
            }

            this.mainAjustesView = new app.MainAjustesView();
        },
        /**
        * show view create ajuste
        */
        getAjustesCreate:function(){
            this.ajusteModel = new app.AjusteModel();

            if ( this.createAjusteView instanceof Backbone.View ){
                this.createAjusteView.stopListening();
                this.createAjusteView.undelegateEvents();
            }

            this.createAjusteView = new app.CreateAjusteView({ model: this.ajusteModel });
            this.createAjusteView.render();
        },

        /**
        * show view show ajustes
        */
        getAjusteShow: function (ajustes) {
            this.ajusteModel = new app.AjusteModel();
            this.ajusteModel.set({'id': ajustes}, {'silent':true});

            if ( this.showAjusteView instanceof Backbone.View ){
                this.showAjusteView.stopListening();
                this.showAjusteView.undelegateEvents();
            }

            this.showAjusteView = new app.ShowAjusteView({ model: this.ajusteModel });
            this.ajusteModel.fetch();
        },

        /**
        * show view main traslados
        */
        getTrasladosMain: function () {

            if ( this.mainTrasladosView instanceof Backbone.View ){
                this.mainTrasladosView.stopListening();
                this.mainTrasladosView.undelegateEvents();
            }

            this.mainTrasladosView = new app.MainTrasladosView( );
        },

        /**
        * show view create traslado
        */
        getTrasladosCreate: function () {
            this.trasladoModel = new app.TrasladoModel();

            if ( this.createTrasladoView instanceof Backbone.View ){
                this.createTrasladoView.stopListening();
                this.createTrasladoView.undelegateEvents();
            }

            this.createTrasladoView = new app.CreateTrasladoView({ model: this.trasladoModel });
            this.createTrasladoView.render();
        },

        /**
        * show view show traslado
        */
        getTrasladosShow: function (traslado) {
            this.trasladoModel = new app.TrasladoModel();
            this.trasladoModel.set({'id': traslado}, {'silent':true});

            if ( this.showTrasladoView instanceof Backbone.View ){
                this.showTrasladoView.stopListening();
                this.showTrasladoView.undelegateEvents();
            }

            this.showTrasladoView = new app.ShowTrasladoView({ model: this.trasladoModel });
        }, 
        /**
        * show view main traslados ubicaciones
        */
        getTrasladosUbicacionesMain: function () {

            if ( this.mainTrasladosUbicacionesView instanceof Backbone.View ){
                this.mainTrasladosUbicacionesView.stopListening();
                this.mainTrasladosUbicacionesView.undelegateEvents();
            }

            this.mainTrasladosUbicacionesView = new app.MainTrasladosUbicacionesView( );
        },

        /**
        * show view create traslado ubicacion
        */
        getTrasladoUbicacionCreate: function () {
            this.trasladoUbicacionModel = new app.TrasladoUbicacionModel();

            if ( this.createTrasladoUbicacionView instanceof Backbone.View ){
                this.createTrasladoUbicacionView.stopListening();
                this.createTrasladoUbicacionView.undelegateEvents();
            }

            this.createTrasladoUbicacionView = new app.CreateTrasladoUbicacionView({ model: this.trasladoUbicacionModel });
            this.createTrasladoUbicacionView.render();
        },

        /**
        * show view show traslado ubicacion
        */
        getTrasladoUbicacionShow: function (trasladoUbicacion) {
            this.trasladoUbicacionModel = new app.TrasladoUbicacionModel();
            this.trasladoUbicacionModel.set({'id': trasladoUbicacion}, {'silent':true});

            if ( this.showTrasladoUbicacionView instanceof Backbone.View ){
                this.showTrasladoUbicacionView.stopListening();
                this.showTrasladoUbicacionView.undelegateEvents();
            }

            this.showTrasladoUbicacionView = new app.ShowTrasladoUbicacionView({ model: this.trasladoUbicacionModel });
        },        

        /**
        * show view main Autorizaciones Cartera
        */
        getAutorizacionesCaMain: function () {

            if ( this.mainAutorizacionesCaView instanceof Backbone.View ){
                this.mainAutorizacionesCaView.stopListening();
                this.mainAutorizacionesCaView.undelegateEvents();
            }

            this.mainAutorizacionesCaView = new app.MainAutorizacionesCaView( );
        },

        /**
        *show view main pedidosc Cartera
        */
        getPedidoscMain: function(){

            if ( this.mainPedidoscView instanceof Backbone.View ){
                this.mainPedidoscView.stopListening();
                this.mainPedidoscView.undelegateEvents();
            }

            this.mainPedidoscView = new app.MainPedidoscView( );
        },
        /**
        *show view create pedidosc Cartera
        */
        getPedidoscCreate: function(){
            this.pedidoscModel = new app.PedidoscModel();

            if ( this.createPedidoscView instanceof Backbone.View ){
                this.createPedidoscView.stopListening();
                this.createPedidoscView.undelegateEvents();
            }

            this.createPedidoscView = new app.CreatePedidoscView({ model: this.pedidoscModel });
            this.createPedidoscView.render();
        },
        /**
        * show view show pedido comercial
        */
        getPedidoscShow: function (pedidosc) {
            this.pedidoscModel = new app.PedidoscModel();
            this.pedidoscModel.set({'id': pedidosc}, {'silent':true});

            if ( this.showPedidocView instanceof Backbone.View ){
                this.showPedidocView.stopListening();
                this.showPedidocView.undelegateEvents();
            }

            this.showPedidocView = new app.ShowPedidocView({ model: this.pedidoscModel });
        },
        /**
        * show main view permisos
        */
        getPermisosMain: function () {

            if ( this.mainPermisoView instanceof Backbone.View ){
                this.mainPermisoView.stopListening();
                this.mainPermisoView.undelegateEvents();
            }

            this.mainPermisoView = new app.MainPermisoView( );
        },

        /**
        * show main view modulos
        */
        getModulosMain: function () {

            if ( this.mainModuloView instanceof Backbone.View ){
                this.mainModuloView.stopListening();
                this.mainModuloView.undelegateEvents();
            }

            this.mainModuloView = new app.MainModuloView( );
        },

        /**
        * show view main roles
        */
        getRolesMain: function () {

            if ( this.mainRolesView instanceof Backbone.View ){
                this.mainRolesView.stopListening();
                this.mainRolesView.undelegateEvents();
            }

            this.mainRolesView = new app.MainRolesView( );
        },

        /**
        * show view create roles
        */
        getRolesCreate: function () {
            this.rolModel = new app.RolModel();

            if ( this.createRolView instanceof Backbone.View ){
                this.createRolView.stopListening();
                this.createRolView.undelegateEvents();
            }

            this.createRolView = new app.CreateRolView({ model: this.rolModel });
            this.createRolView.render();
        },

        /**
        * show view edit roles
        */
        getRolesEdit: function (rol) {
            this.rolModel = new app.RolModel();
            this.rolModel.set({'id': rol}, {silent: true});

            if ( this.createRolView instanceof Backbone.View ){
                this.createRolView.stopListening();
                this.createRolView.undelegateEvents();
            }

            this.createRolView = new app.CreateRolView({ model: this.rolModel });
            this.rolModel.fetch();
        },

        // Banco
        getBancosMain: function () {

            if ( this.mainBancoView instanceof Backbone.View ){
                this.mainBancoView.stopListening();
                this.mainBancoView.undelegateEvents();
            }

            this.mainBancoView = new app.MainBancosView( );
        },

        getBancosCreate: function () {
            this.bancoModel = new app.BancoModel();

            if ( this.createBancoView instanceof Backbone.View ){
                this.createBancoView.stopListening();
                this.createBancoView.undelegateEvents();
            }

            this.createBancoView = new app.CreateBancoView({ model: this.bancoModel });
            this.createBancoView.render();
        },

        getBancosEdit: function (bancos) {
            this.bancoModel = new app.BancoModel();
            this.bancoModel.set({'id': bancos}, {'silent':true});

            if ( this.createBancoView instanceof Backbone.View ){
                this.createBancoView.stopListening();
                this.createBancoView.undelegateEvents();
            }

            this.createBancoView = new app.CreateBancoView({ model: this.bancoModel });
            this.bancoModel.fetch();
        },
        // Causa
        getCausasMain: function () {

            if ( this.mainCausasView instanceof Backbone.View ){
                this.mainCausasView.stopListening();
                this.mainCausasView.undelegateEvents();
            }

            this.mainCausasView = new app.MainCausasView( );
        },

        getCausaCreate: function () {
            this.causaModel = new app.CausaModel();

            if ( this.createCausaView instanceof Backbone.View ){
                this.createCausaView.stopListening();
                this.createCausaView.undelegateEvents();
            }

            this.createCausaView = new app.CreateCausaView({ model: this.causaModel });
            this.createCausaView.render();
        },

        getCausaEdit: function (causas) {
            this.causaModel = new app.CausaModel();
            this.causaModel.set({'id': causas}, {'silent':true});

            if ( this.createCausaView instanceof Backbone.View ){
                this.createCausaView.stopListening();
                this.createCausaView.undelegateEvents();
            }

            this.createCausaView = new app.CreateCausaView({ model: this.causaModel });
            this.causaModel.fetch();
        },

        // Cuenta de banco
        getCuentaBancosMain: function () {

            if ( this.mainCuentaBancoView instanceof Backbone.View ){
                this.mainCuentaBancoView.stopListening();
                this.mainCuentaBancoView.undelegateEvents();
            }

            this.mainCuentaBancoView = new app.MainCuentaBancosView( );
        },

        getCuentaBancosCreate: function () {
            this.cuentabancoModel = new app.CuentaBancoModel();

            if ( this.createCuentaBancoView instanceof Backbone.View ){
                this.createCuentaBancoView.stopListening();
                this.createCuentaBancoView.undelegateEvents();
            }

            this.createCuentaBancoView = new app.CreateCuentaBancoView({ model: this.cuentabancoModel });
            this.createCuentaBancoView.render();
        },

        getCuentaBancosEdit: function (cuentabancos) {
            this.cuentabancoModel = new app.CuentaBancoModel();
            this.cuentabancoModel.set({'id': cuentabancos}, {'silent':true});

            if ( this.createCuentaBancoView instanceof Backbone.View ){
                this.createCuentaBancoView.stopListening();
                this.createCuentaBancoView.undelegateEvents();
            }

            this.createCuentaBancoView = new app.CreateCuentaBancoView({ model: this.cuentabancoModel });
            this.cuentabancoModel.fetch();
        },

        // Medio Pago
        getMedioPagosMain: function () {

            if ( this.mainMedioPagoView instanceof Backbone.View ){
                this.mainMedioPagoView.stopListening();
                this.mainMedioPagoView.undelegateEvents();
            }

            this.mainMedioPagoView = new app.MainMedioPagosView( );
        },

        getMedioPagosCreate: function () {
            this.mediopagoModel = new app.MedioPagoModel();

            if ( this.createMedioPagoView instanceof Backbone.View ){
                this.createMedioPagoView.stopListening();
                this.createMedioPagoView.undelegateEvents();
            }

            this.createMedioPagoView = new app.CreateMedioPagoView({ model: this.mediopagoModel });
            this.createMedioPagoView.render();
        },

        getMedioPagosEdit: function (mediopagos) {
            this.mediopagoModel = new app.MedioPagoModel();
            this.mediopagoModel.set({'id': mediopagos}, {'silent':true});

            if ( this.createMedioPagoView instanceof Backbone.View ){
                this.createMedioPagoView.stopListening();
                this.createMedioPagoView.undelegateEvents();
            }

            this.createMedioPagoView = new app.CreateMedioPagoView({ model: this.mediopagoModel });
            this.mediopagoModel.fetch();
        },
        // Concepto Cobro
        getConceptosCobMain: function () {

            if ( this.mainConceptoCobView instanceof Backbone.View ){
                this.mainConceptoCobView.stopListening();
                this.mainConceptoCobView.undelegateEvents();
            }

            this.mainConceptoCobView = new app.MainConceptosCobView( );
        },

        getConceptoCobCreate: function () {
            this.conceptoCobModel = new app.ConceptoCobModel();

            if ( this.createConceptoCobView instanceof Backbone.View ){
                this.createConceptoCobView.stopListening();
                this.createConceptoCobView.undelegateEvents();
            }

            this.createConceptoCobView = new app.CreateConceptoCobView({ model: this.conceptoCobModel });
            this.createConceptoCobView.render();
        },

        getConceptoCobEdit: function (conceptocobros) {
            this.conceptoCobModel = new app.ConceptoCobModel();
            this.conceptoCobModel.set({'id': conceptocobros}, {'silent':true});

            if ( this.createConceptoCobView instanceof Backbone.View ){
                this.createConceptoCobView.stopListening();
                this.createConceptoCobView.undelegateEvents();
            }

            this.createConceptoCobView = new app.CreateConceptoCobView({ model: this.conceptoCobModel });
            this.conceptoCobModel.fetch();
        },
        // Conceptosrc
        getConceptosrcMain: function () {

            if ( this.mainConceptosrcView instanceof Backbone.View ){
                this.mainConceptosrcView.stopListening();
                this.mainConceptosrcView.undelegateEvents();
            }

            this.mainConceptosrcView = new app.MainConceptosrcView( );
        },

        getConceptosrcCreate: function () {
            this.conceptosrcModel = new app.ConceptosrcModel();

            if ( this.createConceptosrcView instanceof Backbone.View ){
                this.createConceptosrcView.stopListening();
                this.createConceptosrcView.undelegateEvents();
            }

            this.createConceptosrcView = new app.CreateConceptosrcView({ model: this.conceptosrcModel });
            this.createConceptosrcView.render();
        },

        getConceptosrcEdit: function (conceptosrc) {
            this.conceptosrcModel = new app.ConceptosrcModel();
            this.conceptosrcModel.set({'id': conceptosrc}, {'silent':true});

            if ( this.createConceptosrcView instanceof Backbone.View ){
                this.createConceptosrcView.stopListening();
                this.createConceptosrcView.undelegateEvents();
            }

            this.createConceptosrcView = new app.CreateConceptosrcView({ model: this.conceptosrcModel });
            this.conceptosrcModel.fetch();
        },

        // Facturas
        getFacturasMain: function () {

            if ( this.mainFacturaView instanceof Backbone.View ){
                this.mainFacturaView.stopListening();
                this.mainFacturaView.undelegateEvents();
            }

            this.mainFacturaView = new app.MainFacturasView( );
        },

        getFacturaCreate: function () {
            this.facturaModel = new app.FacturaModel();
            if ( this.createFacturaView instanceof Backbone.View ){
                this.createFacturaView.stopListening();
                this.createFacturaView.undelegateEvents();
            }

            this.createFacturaView = new app.CreateFacturaView({ model: this.facturaModel });
            this.createFacturaView.render();
        },
        getFacturaShow:function(facturas){
            this.facturaModel = new app.FacturaModel();
            this.facturaModel.set({'id': facturas}, {'silent':true});
            if ( this.showFacturasView instanceof Backbone.View ){
                this.showFacturasView.stopListening();
                this.showFacturasView.undelegateEvents();
            }

            this.showFacturasView = new app.ShowFacturaView({ model: this.facturaModel });
        },
        // Recibos
        getRecibosMain: function () {

            if ( this.mainReciboView instanceof Backbone.View ){
                this.mainReciboView.stopListening();
                this.mainReciboView.undelegateEvents();
            }

            this.mainReciboView = new app.MainRecibosView( );
        },

        getRecibosCreate: function () {
            this.reciboModel = new app.ReciboModel();

            if ( this.createReciboView instanceof Backbone.View ){
                this.createReciboView.stopListening();
                this.createReciboView.undelegateEvents();
            }

            this.createReciboView = new app.CreateReciboView({ model: this.reciboModel });
            this.createReciboView.render();
        },

        getRecibosShow: function (recibos) {
            this.reciboModel = new app.ReciboModel();
            this.reciboModel.set({'id': recibos}, {'silent':true});
            if ( this.showRecibosView instanceof Backbone.View ){
                this.showRecibosView.stopListening();
                this.showRecibosView.undelegateEvents();
            }

            this.showRecibosView = new app.ShowRecibosView({ model: this.reciboModel });
        },

        // Conceptonotas
        getConceptoNotasMain: function () {

            if ( this.mainConceptoNotaView instanceof Backbone.View ){
                this.mainConceptoNotaView.stopListening();
                this.mainConceptoNotaView.undelegateEvents();
            }

            this.mainConceptoNotaView = new app.MainConceptoNotaView( );
        },

        getConceptoNotasCreate: function () {
            this.conceptonotaModel = new app.ConceptoNotaModel();

            if ( this.createConceptoNotaView instanceof Backbone.View ){
                this.createConceptoNotaView.stopListening();
                this.createConceptoNotaView.undelegateEvents();
            }

            this.createConceptoNotaView = new app.CreateConceptoNotaView({ model: this.conceptonotaModel });
            this.createConceptoNotaView.render();
        },

        getConceptoNotasEdit: function (conceptonotaModel) {
            this.conceptonotaModel = new app.ConceptoNotaModel();
            this.conceptonotaModel.set({'id': conceptonotaModel}, {'silent':true});

            if ( this.createConceptoNotaView instanceof Backbone.View ){
                this.createConceptoNotaView.stopListening();
                this.createConceptoNotaView.undelegateEvents();
            }

            this.createConceptoNotaView = new app.CreateConceptoNotaView({ model: this.conceptonotaModel });
            this.conceptonotaModel.fetch();
        },

        // Notas
        getNotasMain: function () {
            if ( this.mainNotaView instanceof Backbone.View ){
                this.mainNotaView.stopListening();
                this.mainNotaView.undelegateEvents();
            }

            this.mainNotaView = new app.MainNotaView();
        },

        getNotasCreate: function () {
            this.notaModel = new app.NotaModel();

            if ( this.createNotaView instanceof Backbone.View ){
                this.createNotaView.stopListening();
                this.createNotaView.undelegateEvents();
            }

            this.createNotaView = new app.CreateNotaView({ model: this.notaModel });
            this.createNotaView.render();
        },

        getNotasShow: function (notaModel) {
            this.notaModel = new app.NotaModel();
            this.notaModel.set({'id': notaModel}, {'silent':true});
            if ( this.showNotaView instanceof Backbone.View ){
                this.showNotaView.stopListening();
                this.showNotaView.undelegateEvents();
            }

            this.showNotaView = new app.ShowNotaView({ model: this.notaModel });
        },

        //ConceptoAjustec
        getConceptosAjustecMain: function () {

            if ( this.mainConceptoAjustecView instanceof Backbone.View ){
                this.mainConceptoAjustecView.stopListening();
                this.mainConceptoAjustecView.undelegateEvents();
            }

            this.mainConceptoAjustecView = new app.MainConceptoAjustecView( );
        },

        getConceptosAjustecCreate: function () {
            this.conceptoajustecModel = new app.ConceptoAjustecModel();

            if ( this.createConceptoAjustecView instanceof Backbone.View ){
                this.createConceptoAjustecView.stopListening();
                this.createConceptoAjustecView.undelegateEvents();
            }

            this.createConceptoAjustecView = new app.CreateConceptoAjustecView({ model: this.conceptoajustecModel });
            this.createConceptoAjustecView.render();
        },

        getConceptosAjustecEdit: function (conceptoajustecModel) {
            this.conceptoajustecModel = new app.ConceptoAjustecModel();
            this.conceptoajustecModel.set({'id': conceptoajustecModel}, {'silent':true});

            if ( this.createConceptoAjustecView instanceof Backbone.View ){
                this.createConceptoAjustecView.stopListening();
                this.createConceptoAjustecView.undelegateEvents();
            }

            this.createConceptoAjustecView = new app.CreateConceptoAjustecView({ model: this.conceptoajustecModel });
            this.conceptoajustecModel.fetch();
        },

        //Ajustec
        getAjustescMain: function () {
            if ( this.mainAjustecView instanceof Backbone.View ){
                this.mainAjustecView.stopListening();
                this.mainAjustecView.undelegateEvents();
            }
            this.mainAjustecView = new app.MainAjustecView();
        },

        getAjustescCreate: function () {
            this.ajustec1Model = new app.Ajustec1Model();

            if ( this.createAjustecView instanceof Backbone.View ){
                this.createAjustecView.stopListening();
                this.createAjustecView.undelegateEvents();
            }

            this.createAjustecView = new app.CreateAjustecView({ model: this.ajustec1Model });
            this.createAjustecView.render();
        },

        getAjustescShow: function (ajustec1Model) {
            this.ajustec1Model = new app.Ajustec1Model();
            this.ajustec1Model.set({'id': ajustec1Model}, {'silent':true});
            if ( this.showAjustecView instanceof Backbone.View ){
                this.showAjustecView.stopListening();
                this.showAjustecView.undelegateEvents();
            }

            this.showAjustecView = new app.ShowAjustecView({ model: this.ajustec1Model });
        },

        // Devolucion
        getDevolucionesMain: function(){

            if (this.mainDevolucionesView instanceof Backbone.View) {
                this.mainDevolucionesView.stopListening();
                this.mainDevolucionesView.undelegateEvents();
            }

            this.mainDevolucionesView = new app.MainDevolucionesView( );
        },

        getDevolucionesCreate: function(){
            this.devolucionModel = new app.DevolucionModel();

            if (this.createDevolucionView instanceof Backbone.View) {
                this.createDevolucionView.stopListening();
                this.createDevolucionView.undelegateEvents();
            }
            
            this.createDevolucionView = new app.CreateDevolucionView({ model: this.devolucionModel });
            this.createDevolucionView.render();
        },

        getDevolucionesShow:function(devoluciones){
            this.devolucionModel = new app.DevolucionModel();
            this.devolucionModel.set({'id': devoluciones}, {'silent':true});
            
            if ( this.showDevolucionView instanceof Backbone.View ){
                this.showDevolucionView.stopListening();
                this.showDevolucionView.undelegateEvents();
            }

            this.showDevolucionView = new app.ShowDevolucionView({ model: this.devolucionModel });
        },
        // Anticipo
        getAnticiposMain: function(){

            if (this.mainAnticiposView instanceof Backbone.View) {
                this.mainAnticiposView.stopListening();
                this.mainAnticiposView.undelegateEvents();
            }
            this.mainAnticiposView = new app.MainAnticiposView( );
        },
        getAnticipoCreate: function(){
            this.anticipoModel = new app.AnticipoModel();

            if (this.createAnticipoView instanceof Backbone.View) {
                this.createAnticipoView.stopListening();
                this.createAnticipoView.undelegateEvents();
            }
            this.createAnticipoView = new app.CreateAnticipoView({ model: this.anticipoModel });
            this.createAnticipoView.render();
        },
        getAnticiposShow: function(anticipos){
            this.anticipoModel = new app.AnticipoModel();
            this.anticipoModel.set({'id' : anticipos }, {'silent' : true });

            if ( this.showAnticipoView instanceof Backbone.View ){
                this.showAnticipoView.stopListening();
                this.showAnticipoView.undelegateEvents();
            }
            
            this.showAnticipoView = new app.ShowAnticiposView({ model: this.anticipoModel });
        },

        // Cheques posfechados
        getChequesMain: function (){

            if (this.mainChequesView instanceof Backbone.View) {
                this.mainChequesView.stopListening();
                this.mainChequesView.undelegateEvents();
            }
            this.mainChequesView = new app.MainChequesView( );
        },

        getChequeCreate: function (){

            this.chequeModel = new app.ChequeModel();

            if (this.createChequesView instanceof Backbone.View) {
                this.createChequesView.stopListening();
                this.createChequesView.undelegateEvents();
            }
            this.createChequesView = new app.CreateChequesView({ model: this.chequeModel });
            this.createChequesView.render();
        },

        getChequeShow: function(cheques){
            this.chequeModel = new app.ChequeModel();
            this.chequeModel.set({'id' : cheques }, {'silent' : true });

            if ( this.showChequeView instanceof Backbone.View ){
                this.showChequeView.stopListening();
                this.showChequeView.undelegateEvents();
            }
            
            this.showChequeView = new app.ShowChequeView({ model: this.chequeModel });
        },
        // Cheques Devueltos
        getChequesDevueltosMain: function(){
            if (this.mainChequesDevueltosView instanceof Backbone.View) {
                this.mainChequesDevueltosView.stopListening();
                this.mainChequesDevueltosView.undelegateEvents();
            }
            this.mainChequesDevueltosView = new app.MainChequesDevueltosView( );
        },
        // Gestion Cobro
        getGestionCobrosMain: function(){

            if (this.mainGestionCobrosView instanceof Backbone.View) {
                this.mainGestionCobrosView.stopListening();
                this.mainGestionCobrosView.undelegateEvents();
            }
            this.mainGestionCobrosView = new app.MainGestionCobrosView( );
        },
        getGestionCobroCreate: function(){
            this.gestionCobroModel = new app.GestionCobroModel();

            if (this.createGestionCobroView instanceof Backbone.View) {
                this.createGestionCobroView.stopListening();
                this.createGestionCobroView.undelegateEvents();
            }
            this.createGestionCobroView = new app.CreateGestionCobroView({ model: this.gestionCobroModel });
            this.createGestionCobroView.render();
        },
        
        /*---------------------
        | Tecnicos
        /*--------------------*/

        // Tipo de Orden
        getTiposOrdenMain: function () {

            if ( this.mainTipoOrdenView instanceof Backbone.View ){
                this.mainTipoOrdenView.stopListening();
                this.mainTipoOrdenView.undelegateEvents();
            }

            this.mainTipoOrdenView = new app.MainTiposOrdenView( );
        },

        getTiposOrdenCreate: function () {
            this.tipoordenModel = new app.TipoOrdenModel();

            if ( this.createTipoOrdenView instanceof Backbone.View ){
                this.createTipoOrdenView.stopListening();
                this.createTipoOrdenView.undelegateEvents();
            }

            this.createTipoOrdenView = new app.CreateTipoOrdenView({ model: this.tipoordenModel });
            this.createTipoOrdenView.render();
        },

        getTiposOrdenEdit: function (tiposorden) {
            this.tipoordenModel = new app.TipoOrdenModel();
            this.tipoordenModel.set({'id': tiposorden}, {'silent':true});

            if ( this.createTipoOrdenView instanceof Backbone.View ){
                this.createTipoOrdenView.stopListening();
                this.createTipoOrdenView.undelegateEvents();
            }

            this.createTipoOrdenView = new app.CreateTipoOrdenView({ model: this.tipoordenModel });
            this.tipoordenModel.fetch();
        },

        // Solicitante
        getSolicitantesMain: function () {

            if ( this.mainSolicitanteView instanceof Backbone.View ){
                this.mainSolicitanteView.stopListening();
                this.mainSolicitanteView.undelegateEvents();
            }

            this.mainSolicitanteView = new app.MainSolicitantesView( );
        },

        getSolicitantesCreate: function () {
            this.solicitanteModel = new app.SolicitanteModel();

            if ( this.createSolicitanteView instanceof Backbone.View ){
                this.createSolicitanteView.stopListening();
                this.createSolicitanteView.undelegateEvents();
            }

            this.createSolicitanteView = new app.CreateSolicitanteView({ model: this.solicitanteModel });
            this.createSolicitanteView.render();
        },

        getSolicitantesEdit: function (solicitantes) {
            this.solicitanteModel = new app.SolicitanteModel();
            this.solicitanteModel.set({'id': solicitantes}, {'silent':true});

            if ( this.createSolicitanteView instanceof Backbone.View ){
                this.createSolicitanteView.stopListening();
                this.createSolicitanteView.undelegateEvents();
            }

            this.createSolicitanteView = new app.CreateSolicitanteView({ model: this.solicitanteModel });
            this.solicitanteModel.fetch();
        },

        // Daños
        getDanosMain: function () {

            if ( this.mainDanoView instanceof Backbone.View ){
                this.mainDanoView.stopListening();
                this.mainDanoView.undelegateEvents();
            }

            this.mainDanoView = new app.MainDanosView( );
        },

        getDanosCreate: function () {
            this.danoModel = new app.DanoModel();

            if ( this.createDanoView instanceof Backbone.View ){
                this.createDanoView.stopListening();
                this.createDanoView.undelegateEvents();
            }

            this.createDanoView = new app.CreateDanoView({ model: this.danoModel });
            this.createDanoView.render();
        },

        getDanosEdit: function (danos) {
            this.danoModel = new app.DanoModel();
            this.danoModel.set({'id': danos}, {'silent':true});

            if ( this.createDanoView instanceof Backbone.View ){
                this.createDanoView.stopListening();
                this.createDanoView.undelegateEvents();
            }

            this.createDanoView = new app.CreateDanoView({ model: this.danoModel });
            this.danoModel.fetch();
        },

        // Prioridad
        getPrioridadesMain: function () {

            if ( this.mainPrioridadView instanceof Backbone.View ){
                this.mainPrioridadView.stopListening();
                this.mainPrioridadView.undelegateEvents();
            }

            this.mainPrioridadView = new app.MainPrioridadesView( );
        },

        getPrioridadesCreate: function () {
            this.prioridadModel = new app.PrioridadModel();

            if ( this.createPrioridadView instanceof Backbone.View ){
                this.createPrioridadView.stopListening();
                this.createPrioridadView.undelegateEvents();
            }

            this.createPrioridadView = new app.CreatePrioridadView({ model: this.prioridadModel });
            this.createPrioridadView.render();
        },

        getPrioridadesEdit: function (prioridades) {
            this.prioridadModel = new app.PrioridadModel();
            this.prioridadModel.set({'id': prioridades}, {'silent':true});

            if ( this.createPrioridadView instanceof Backbone.View ){
                this.createPrioridadView.stopListening();
                this.createPrioridadView.undelegateEvents();
            }

            this.createPrioridadView = new app.CreatePrioridadView({ model: this.prioridadModel });
            this.prioridadModel.fetch();
        },

        //Contratos
        getContratosMain: function(){
            if ( this.mainContratoView instanceof Backbone.View ){
                this.mainContratoView.stopListening();
                this.mainContratoView.undelegateEvents();
            }
            this.mainContratoView = new app.MainContratosView( );

        },

        /**
        * show view main ordenes
        */
        getOrdenesMain: function () {
            if ( this.mainOrdenesView instanceof Backbone.View ){
                this.mainOrdenesView.stopListening();
                this.mainOrdenesView.undelegateEvents();
            }

            this.mainOrdenesView = new app.MainOrdenesView( );
        },

        /**
        * show view create ordenes
        */
        getOrdenesCreate: function () {
            this.ordenModel = new app.OrdenModel();

            if ( this.createOrdenView instanceof Backbone.View ){
                this.createOrdenView.stopListening();
                this.createOrdenView.undelegateEvents();
            }

            this.createOrdenView = new app.CreateOrdenView({ model: this.ordenModel });
            this.createOrdenView.render();
        },

        /**
        * show view edit ordenes
        */
        getOrdenesEdit: function (orden) {
            this.ordenModel = new app.OrdenModel();
            this.ordenModel.set({'id': orden}, {'silent':true});

            if ( this.editOrdenView instanceof Backbone.View ){
                this.editOrdenView.stopListening();
                this.editOrdenView.undelegateEvents();
            }

            if ( this.createOrdenView instanceof Backbone.View ){
                this.createOrdenView.stopListening();
                this.createOrdenView.undelegateEvents();
            }

            this.editOrdenView = new app.EditOrdenView({ model: this.ordenModel });
            this.ordenModel.fetch();
        },

        /**
        * show view show tercero
        */
        getOrdenesShow: function (orden) {
            this.ordenModel = new app.OrdenModel();
            this.ordenModel.set({'id': orden}, {silent: true});

            if ( this.showOrdenView instanceof Backbone.View ){
                this.showOrdenView.stopListening();
                this.showOrdenView.undelegateEvents();
            }

            this.showOrdenView = new app.ShowOrdenView({ model: this.ordenModel });
        },
        getConceptosTecMain: function () {

            if ( this.mainConceptoTecView instanceof Backbone.View ){
                this.mainConceptoTecView.stopListening();
                this.mainConceptoTecView.undelegateEvents();
            }

            this.mainConceptoTecView = new app.MainConceptosTecView( );
        },

        getConceptoTecCreate: function () {
            this.conceptoTecModel = new app.ConceptoTecModel();

            if ( this.createConceptoTecView instanceof Backbone.View ){
                this.createConceptoTecView.stopListening();
                this.createConceptoTecView.undelegateEvents();
            }

            this.createConceptoTecView = new app.CreateConceptoTecView({ model: this.conceptoTecModel });
            this.createConceptoTecView.render();
        },

        getConceptoTecEdit: function (conceptotecnico) {
            this.conceptoTecModel = new app.ConceptoTecModel();
            this.conceptoTecModel.set({'id': conceptotecnico}, {'silent':true});

            if ( this.createConceptoTecView instanceof Backbone.View ){
                this.createConceptoTecView.stopListening();
                this.createConceptoTecView.undelegateEvents();
            }

            this.createConceptoTecView = new app.CreateConceptoTecView({ model: this.conceptoTecModel });
            this.conceptoTecModel.fetch();
        },

        getGestionesTecnicoMain: function(){

            if (this.mainGestionesTecnicoView instanceof Backbone.View) {
                this.mainGestionesTecnicoView.stopListening();
                this.mainGestionesTecnicoView.undelegateEvents();
            }
            this.mainGestionesTecnicoView = new app.MainGestionesTecnicoView( );
        },
        getGestionTecnicoCreate: function(){
            this.gestionTecnicoModel = new app.GestionTecnicoModel();

            if (this.createGestionTecnicoView instanceof Backbone.View) {
                this.createGestionTecnicoView.stopListening();
                this.createGestionTecnicoView.undelegateEvents();
            }
            this.createGestionTecnicoView = new app.CreateGestionTecnicoView({ model: this.gestionTecnicoModel });
            this.createGestionTecnicoView.render();
        },

        // Sitios
        getSitiosMain: function () {

            if ( this.mainSitiosView instanceof Backbone.View ){
                this.mainSitiosView.stopListening();
                this.mainSitiosView.undelegateEvents();
            }

            this.mainSitiosView = new app.MainSitiosView( );
        },

        getSitiosCreate: function () {
            this.sitioModel = new app.SitioModel();

            if ( this.createSitioView instanceof Backbone.View ){
                this.createSitioView.stopListening();
                this.createSitioView.undelegateEvents();
            }

            this.createSitioView = new app.CreateSitioView({ model: this.sitioModel });
            this.createSitioView.render();
        },

        getSitiosEdit: function ( sitios ) {
            this.sitioModel = new app.SitioModel();
            this.sitioModel.set({'id': sitios}, {'silent':true});

            if ( this.createSitioView instanceof Backbone.View ){
                this.createSitioView.stopListening();
                this.createSitioView.undelegateEvents();
            }

            this.createSitioView = new app.CreateSitioView({ model: this.sitioModel });
            this.sitioModel.fetch();
        },

        getSoporteTecnicoMain: function () {
            if ( this.mainSoporteTecnicoView instanceof Backbone.View ){
                this.mainSoporteTecnicoView.stopListening();
                this.mainSoporteTecnicoView.undelegateEvents();
            }

            this.mainSoporteTecnicoView = new app.MainSoporteTecnicoView( );
        },
    }));
})(jQuery, this, this.document);
/**
* Init Class
*/

/*global*/
var app = app || {};

(function ($, window, document, undefined) {

    var InitComponent = function() {

        //Init Attributes
        $.ajaxSetup({
            cache: false,
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
    }

    String.prototype.replaceAll = function(search, replace)
    {
        if(!replace)
            return this;
        return this.replace(new RegExp('[' + search + ']', 'g'), replace);
    };

    InitComponent.prototype = {

        /**
        * Constructor or Initialize Method
        */
        initialize: function () {
            //Initialize
            this.initApp();
            this.initICheck();
            this.initAlertify();
            this.initSelect2();
            this.initToUpper();
            this.initSpinner();
            this.initInputMask();
            this.initDatePicker();
            this.initTimePicker();
        },

        /**
        * Init Backbone Application
        */
        initApp: function () {
            window.app.AppRouter.start();
        },

        /**
        * Init icheck
        */
        initICheck: function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            });
        },

        /**
        * Init alertify
        */
        initAlertify: function () {
            alertify.logPosition("bottom right");
        },

        /**
        * Init select2
        */
        initSelect2: function () {
            var _this = this,
            config = {
              '.select2-default' : { language: 'es', placeholder: 'Seleccione', allowClear: false },
              '.select2-default-clear'  : { language: 'es', placeholder: 'Seleccione', allowClear: true },
              '.choice-select-autocomplete': {
                language: "es",
                placeholder:'Seleccione una opción',
                ajax: {
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term,
                            page: params.page
                        };
                    },
                    processResults: function (data, params) 
                    {
                        params.page = params.page || 1;
                        return {
                            results: data,
                            pagination: {
                                more: (params.page * 30) < data.total_count
                            }
                        };
                    },
                    escapeMarkup: function (markup) { return markup; },
                    cache: true,
                    minimumInputLength: 1
                }
              }
            };

            // Instance selects to choice plugin
            for (var selector in config){
                $(selector).each(function(index, el) {
                    var $el = $(el);

                    if( $el.data('select2') == undefined ){
                        $el.select2(config[selector]);

                        // set default option
                        if(selector == '.choice-select-autocomplete') {

                            var initialId = $el.data('initial-value');
                            var $option = null;

                            if(initialId) {
                                var ajaxOptions = $el.data('select2').dataAdapter.ajaxOptions;

                                $option = $('<option selected>Cargando...</option>').val(initialId);
                                $el.append($option).trigger('change');

                                $.get( ajaxOptions.url, {id:initialId}, function(data) {
                                    $option.text(data[0].text).val(data[0].id);
                                    $option.removeData();
                                    $el.trigger('change');
                                });
                            }
                        }
                    }
                });
            }
        },

        /**
        * Init toUpper
        */
        initToUpper: function () {
            $('.input-toupper').change(function(){
                $(this).val( $(this).val().toUpperCase() );
            });

            $('.input-lower').change(function(){
                var dato = $(this).val( $(this).val().toLowerCase() );
                var reg = /[^a-z0-9]/i;
                var valor = '';
                for(var i=0; i <= dato.val().length-1; i++){
                    if( !reg.test(dato.val().charAt(i)) ){
                        dato.val().replace(reg,'');
                        valor += dato.val().charAt(i);
                    }
                }
                $(this).val( valor );
           });
        },

        /**
        * Init initSpinner
        */
        initSpinner: function () {
            $('.spinner-percentage').spinner({
                step: 0.1,
                start: 0,
                min: 0,
                max: 100,
                numberFormat: "n",
                stop: function( event, ui ) {
                    if(!_.isNull(this.value) && !_.isUndefined(this.value) && !_.isEmpty(this.value)) {
                        if(!$.isNumeric( this.value ) || this.value > 100 || this.value < 0){
                            $(this).spinner( 'value', 0 );
                        }
                    }
               }
            });
        },

        /**
        * Init inputMask
        */
        initInputMask: function () {

            $("[data-mask]").inputmask();

            $("[data-currency]").inputmask({
                radixPoint: ",",
                alias: 'currency',
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                min: 0,
                onBeforeMask: function (value, opts) {
                    var processedValue = value || 0;

                    return processedValue;
                },
                oncleared: function  (event) {
                    var $input = $(this);

                    if( this.inputmask.unmaskedvalue() == null || isNaN(parseFloat(this.inputmask.unmaskedvalue())) ) {
                        $input.inputmask('setvalue', 0);
                    }
                },
            });

            $("[data-currency-price]").inputmask({
                radixPoint: ",",
                groupSeparator: ".",
                alias: 'currency',
                digits: 2,
                unmaskAsNumber: true,
                removeMaskOnSubmit: true,
                autoGroup: true,
                rightAlign: false,
                oncleared: function  (event) {
                    var $input = $(this);
                    if( this.inputmask.unmaskedvalue() == null || isNaN(parseFloat(this.inputmask.unmaskedvalue())) ) {
                        $input.inputmask('setvalue', 0);
                    }
                },
            });

            $("[data-currency-negative]").inputmask({
                radixPoint: ",",
                alias: 'currency',
                prefix: '',
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
            });
            

            $("[data-currency-precise]").inputmask({
                radixPoint: ",",
                alias: 'currency',
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                min: 0,
                digits: 0,
                onBeforeMask: function (value, opts) {
                    var processedValue = value || 0;

                    return processedValue;
                },
                oncleared: function  (event) {
                    var $input = $(this);

                    if( this.inputmask.unmaskedvalue() == null || isNaN(parseFloat(this.inputmask.unmaskedvalue())) ) {
                        $input.inputmask('setvalue', 0);
                    }
                },
            });
        },

        /**
        * Init initValidator
        */
        initValidator: function () {
            $('form[data-toggle="validator"]').each(function () {
                var $form = $(this)
                $.fn.validator.call($form, $form.data())
            })
        },

        /**
        * Init Datepicker
        */
        initDatePicker: function () {

            $('.datepicker').datepicker({
                autoclose: true,
                language: 'es',
                format: 'yyyy-mm-dd'
            });
        },
        /**
        * Init Timepicker
        */
        initTimePicker: function () {

            $(".timepicker").timepicker({
                showInputs: false,
                showMeridian: false
            });
        },
    };

    //Init App Components
    //-----------------------
    $(function() {
        window.initComponent = new InitComponent();
        window.initComponent.initialize();
    });

})(jQuery, this, this.document);
//# sourceMappingURL=app.min.js.map
